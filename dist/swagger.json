{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Snugg Pro API",
    "description": "Access <a href='https://snuggpro.com'>Snugg Pro</a> programmatically through our API. <br/><a href='https://snuggpro.com/help'>Visit our knowledge base</a> for help on using Snugg Pro"
  },
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/accounts/{accountId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "name": "account",
        "summary": "Account",
        "description": "A single Snugg Pro user by account ID",
        "parameters": [
          {
            "name": "accountId",
            "description": "Account Id",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/account"
            }
          },
          "404": {
            "description": "Endpoint not found"
          },
          "501": {
            "description": "Unauthorized"
          }
        },
        "graphqlQuery": "\n  query acountQuery($accountId: Int!) {\n    account(accountId: $accountId) {\n      ...accountFragment\n    }\n  }\n  \n  fragment accountFragment on Account {\n     \n id \n firstName \n lastName \n email \n phoneNumber \n title \n certifications \n hoursOfOperation\n  }\n\n",
        "tags": [
          "Users"
        ]
      }
    },
    "/accounts": {
      "get": {
        "produces": [
          "application/json"
        ],
        "name": "accounts",
        "summary": "Accounts",
        "description": "Returns a list of all active Snugg Pro users for a company.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/account"
              }
            }
          },
          "404": {
            "description": "Endpoint not found"
          },
          "501": {
            "description": "Unauthorized"
          }
        },
        "graphqlQuery": "\n  query acountsQuery($companyId: Int!) {\n    accounts(companyId: $companyId) {\n      ...accountFragment\n    }\n  }\n  \n  fragment accountFragment on Account {\n     \n id \n firstName \n lastName \n email \n phoneNumber \n title \n certifications \n hoursOfOperation\n  }\n\n",
        "tags": [
          "Users",
          "Company"
        ]
      }
    },
    "/jobs/{jobId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "name": "job",
        "summary": "Address & Metadata",
        "description": "All job data",
        "parameters": [
          {
            "name": "jobId",
            "description": "Job Id",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/job"
            }
          },
          "404": {
            "description": "Endpoint not found"
          },
          "501": {
            "description": "Unauthorized"
          }
        },
        "graphqlQuery": "\n  query jobQuery($jobId: Int!) {\n    job(jobId: $jobId) {\n       \n id \n firstName \n lastName \n renterOwner \n serviceTime \n email \n homePhone \n address1 \n address2 \n city \n state \n zip \n accountId \n stageId \n companyId \n altId\n    }\n  }\n",
        "tags": [
          "Job"
        ]
      }
    },
    "/jobs/{jobId}/attics": {
      "get": {
        "produces": [
          "application/json"
        ],
        "name": "attics",
        "summary": "Attics",
        "description": "All available attics for a job",
        "parameters": [
          {
            "name": "jobId",
            "description": "Job Id",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/attic"
              }
            }
          },
          "404": {
            "description": "Endpoint not found"
          },
          "501": {
            "description": "Unauthorized"
          }
        },
        "graphqlQuery": "query atticsQuery($jobId: Int!) {\n      attics(jobId: $jobId) {\n         \n uuid \n atticInsulationDepth \n atticInsulationType \n atticInsulationTypeImproved \n atticModeledAtticArea \n atticModeledAtticAreaImproved \n atticInsulation \n atticInsulationImproved \n atticKneeWallArea \n atticKneeWallAreaImproved \n atticKneeWallInsulation \n atticKneeWallInsulationImproved \n atticKneeWallContinuousInsulation \n atticKneeWallContinuousInsulationImproved \n atticHasKneeWall \n atticHasKneeWallImproved \n atticRadiantBarrier \n atticRadiantBarrierImproved \n atticPercent \n atticRoofAbsorptance \n atticRoofAbsorptanceImproved \n atticRoofEmissivity \n atticRoofEmissivityImproved \n atticCoolRoof \n atticCoolRoofImproved \n atticKneeWallInsulationType \n atticKneeWallInsulationTypeImproved \n atticKneeWallContinuousInsulationType \n atticKneeWallContinuousInsulationTypeImproved\n      }\n    }\n  ",
        "tags": [
          "Job"
        ]
      }
    },
    "/jobs/{jobId}/basedata": {
      "get": {
        "produces": [
          "application/json"
        ],
        "name": "basedata",
        "summary": "Basedata",
        "description": "All the simple data about the home - Not Base and Improved",
        "parameters": [
          {
            "name": "jobId",
            "description": "Job Id",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/basedata"
            }
          },
          "404": {
            "description": "Endpoint not found"
          },
          "501": {
            "description": "Unauthorized"
          }
        },
        "graphqlQuery": "\n  query basedataQuery($jobId: Int!) {\n    basedata(jobId: $jobId) {\n       \n yearBuilt \n conditionedArea \n averageWallHeight \n houseLength \n houseWidth \n floorsAboveGrade \n numberOfOccupants \n typeOfHome \n frontOfBuildingOrientation \n tuckUnderGarage \n garageSize \n programmableThermostatInstalled \n heatingSetpointHigh \n heatingSetpointHighImproved \n heatingSetpointLow \n heatingSetpointLowImproved \n coolingSetpointHigh \n coolingSetpointHighImproved \n coolingSetpointLow \n coolingSetpointLowImproved \n totalNumberOfLightBulbs \n totalNumberOfLightBulbsImproved \n sharedWallsNorth \n percentOfCeilingsShared \n percentOfFloorsShared \n foundationBasement \n foundationAboveGradeHeight \n basementWallInsulation \n crawlspaceInsulation \n blowerDoorReading \n blowerDoorReadingImproved \n equivalentNach \n equivalentNachImproved \n conditionedAirVolume \n effectiveLeakageArea \n effectiveLeakageAreaImproved \n equivalentAch50 \n equivalentAch50Improved \n modeledBasementWallArea \n basementCavityInsulation \n basementCavityInsulationImproved \n basementContinuousInsulation \n basementContinuousInsulationImproved \n floorCavityInsulation \n floorCavityInsulationImproved \n floorContinuousInsulation \n floorContinuousInsulationImproved \n modeledFloorArea \n sharedWallsEast \n sharedWallsSouth \n sharedWallsWest \n foundationCrawlspace \n foundationSlab \n percentCflsOrLeds \n crawlCavityInsulation \n crawlCavityInsulationImproved \n crawlWallInsulation \n crawlWallInsulationImproved \n modeledCrawlWallArea \n modeledCrawlFloorArea \n crawlspaceType \n crawlspaceTypeImproved \n clothesWasherType \n clothesWasherTypeImproved \n clothesWasherEnergyStar \n clothesWasherEnergyStarImproved \n clothesWasherManufacturer \n clothesWasherManufacturerImproved \n clothesWasherModel \n clothesWasherModelImproved \n clothesWasherMef \n clothesWasherMefImproved \n clothesWasherEnergyUsage \n clothesWasherWaterUsage \n dishwasherEnergyStar \n dishwasherEnergyStarImproved \n dishwasherEnergyFactor \n dishwasherEnergyFactorImproved \n percentCflOrLed \n percentCflOrLedImproved \n windZone \n shielding \n nFactor \n numberOfBedrooms \n dishwasherModel \n dishwasherModelImproved \n dishwasherManufacturer \n dishwasherManufacturerImproved \n dishwasherModelYear \n dishwasherModelYearImproved \n clothesWasherModelYear \n clothesWasherModelYearImproved \n numberOfIncandescents \n numberOfIncandescentsImproved \n numberOfCflsInstalled \n numberOfCflsOrLeds \n numberOfCflsOrLedsImproved \n hotTub \n pool \n poolPumpType \n poolPumpTypeImproved \n poolPumpHorsepower \n poolPumpHorsepowerImproved \n basementHeating \n basementHeatingImproved \n basementCooling \n basementCoolingImproved \n poolSize \n poolPumpTurnover \n poolPumpTurnoverImproved \n poolPumpHours \n poolPumpHoursImproved \n poolPumpManufacturer \n poolPumpManufacturerImproved \n poolPumpModel \n poolPumpModelImproved \n poolPumpDaysPerYear \n poolPumpDaysPerYearImproved \n dishwasherInstalled \n dishwasherInstalledImproved \n modeledBasementFloorArea \n modeledBasementPerimeter \n includesBasement \n utilityPriceNaturalGas \n utilityPricePropane \n utilityPriceFuelOil \n utilityPriceElectricity \n heatingDesignLoad \n heatingDesignLoadImproved \n coolingSensibleDesignLoad \n coolingSensibleDesignLoadImproved \n coolingLatentDesignLoad \n coolingLatentDesignLoadImproved \n designTempWinterOutdoor \n designTempSummerOutdoor \n designTempWinterIndoor \n designTempSummerIndoor \n utilityPriceWood \n utilityPricePellets \n numberOfUnits \n numberOfLeds \n numberOfLedsImproved \n crawlspaceRimJoistLength \n crawlspaceRimJoistTreatment \n crawlspaceRimJoistTreatmentImproved \n crawlspaceRimJoistInsulation \n crawlspaceRimJoistInsulationImproved \n basementRimJoistLength \n basementRimJoistTreatment \n basementRimJoistTreatmentImproved \n basementRimJoistInsulation \n basementRimJoistInsulationImproved \n demandKW \n demandKWImproved \n demandKWSavings \n cazMaxAmbientCo \n cazMaxAmbientCoImproved \n ashrae622 \n ashraeKitchenFanCfm \n ashraeKitchenFanCfmImproved \n ashraeKitchenWindow \n ashraeKitchenWindowImproved \n ashraeNumberOfBathrooms \n ashraeBathroomFan1Cfm \n ashraeBathroomFan1CfmImproved \n ashraeBathroom1Window \n ashraeBathroom1WindowImproved \n ashraeBathroomFan2Cfm \n ashraeBathroomFan2CfmImproved \n ashraeBathroom2Window \n ashraeBathroom2WindowImproved \n ashraeBathroomFan3Cfm \n ashraeBathroomFan3CfmImproved \n ashraeBathroom3Window \n ashraeBathroom3WindowImproved \n ashraeBathroomFan4Cfm \n ashraeBathroomFan4CfmImproved \n ashraeBathroom4Window \n ashraeBathroom4WindowImproved \n ashraeRequiredAdditionalCfm \n ashraeRequiredAdditionalCfmImproved \n ashraeMinimumCfm50 \n blowerDoorTestPerformed \n blowerDoorTestPerformedImproved \n floorCavityInsulationType \n floorCavityInsulationTypeImproved \n floorContinuousInsulationType \n floorContinuousInsulationTypeImproved \n crawlCavityInsulationType \n crawlCavityInsulationTypeImproved \n crawlWallInsulationType \n crawlWallInsulationTypeImproved \n crawlspaceRimJoistInsulationType \n crawlspaceRimJoistInsulationTypeImproved \n basementCavityInsulationType \n basementCavityInsulationTypeImproved \n basementContinuousInsulationType \n basementContinuousInsulationTypeImproved \n basementRimJoistInsulationType \n basementRimJoistInsulationTypeImproved \n dishwasherEnergyUsage \n dishwasherWaterUsage \n windowVentingUsed \n windowVentingUsedImproved\n    }\n  }\n",
        "tags": [
          "Job"
        ]
      }
    },
    "/jobs/{jobId}/caz": {
      "get": {
        "produces": [
          "application/json"
        ],
        "name": "caz",
        "summary": "Caz",
        "description": "Details of each combustion appliance zone",
        "parameters": [
          {
            "name": "jobId",
            "description": "Job Id",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/caz"
            }
          },
          "404": {
            "description": "Endpoint not found"
          },
          "501": {
            "description": "Unauthorized"
          }
        },
        "graphqlQuery": "\n  query acountQuery($jobId: Int!) {\n    caz(jobId: $jobId) {\n       \n uuid \n cazName \n cazAmbientCo \n cazAmbientCoImproved \n cazPoorCaseTest \n cazPoorCaseTestImproved \n cazNotes \n cazNotesImproved\n      systems {\n        ...cazSystemFragment\n      }\n    }\n  }\n  \n  fragment cazSystemFragment on CazSystem {\n     \n uuid \n cazApplianceCoCurrentCondition \n cazApplianceCoCurrentConditionImproved\n  }\n\n",
        "tags": [
          "Job"
        ]
      }
    },
    "/jobs/{jobId}/clothesDryers": {
      "get": {
        "produces": [
          "application/json"
        ],
        "name": "clothesDryers",
        "summary": "Clothesdryers",
        "description": "All available clothesDryers for a job",
        "parameters": [
          {
            "name": "jobId",
            "description": "Job Id",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/clothesDryer"
              }
            }
          },
          "404": {
            "description": "Endpoint not found"
          },
          "501": {
            "description": "Unauthorized"
          }
        },
        "graphqlQuery": "query clothesDryersQuery($jobId: Int!) {\n      clothesDryers(jobId: $jobId) {\n         \n uuid \n clothesDryerFuelType \n clothesDryerFuelTypeImproved\n      }\n    }\n  ",
        "tags": [
          "Job"
        ]
      }
    },
    "/jobs/{jobId}/concerns": {
      "get": {
        "produces": [
          "application/json"
        ],
        "name": "concerns",
        "summary": "Concerns",
        "description": "All available concerns for a job",
        "parameters": [
          {
            "name": "jobId",
            "description": "Job Id",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/concern"
              }
            }
          },
          "404": {
            "description": "Endpoint not found"
          },
          "501": {
            "description": "Unauthorized"
          }
        },
        "graphqlQuery": "query concernsQuery($jobId: Int!) {\n      concerns(jobId: $jobId) {\n         \n uuid \n concernSummary \n concernDetail\n      }\n    }\n  ",
        "tags": [
          "Job"
        ]
      }
    },
    "/jobs": {
      "post": {
        "produces": [
          "application/json"
        ],
        "name": "createJob",
        "summary": "Create a job",
        "description": "Creates a single job based on a post request.",
        "parameters": [
          {
            "name": "firstName",
            "type": "string",
            "required": true,
            "example": "Eva"
          },
          {
            "name": "lastName",
            "type": "string",
            "required": true,
            "example": "Bryant"
          },
          {
            "name": "renterOwner",
            "type": "string",
            "required": false,
            "description": "Does the customer own or rent this property.",
            "example": 1
          },
          {
            "name": "serviceTime",
            "type": "string",
            "required": false,
            "description": "Time at which the appointment will take place. Format: YYYY-MM-DD HH:MM:SS",
            "example": "2017-06-26T15:44:04.919Z"
          },
          {
            "name": "email",
            "type": "string",
            "required": false,
            "description": "The email address of the homeowner (or tenant).",
            "example": "Citlalli_Gerlach86@gmail.com"
          },
          {
            "name": "homePhone",
            "type": "string",
            "required": false,
            "description": "Phone number of the home in this format (555) 555-5555.",
            "example": "(031) 700-4529"
          },
          {
            "name": "address1",
            "type": "string",
            "required": true,
            "description": "First line of the home address.",
            "example": "57 Dorothy Crescent"
          },
          {
            "name": "address2",
            "type": "string",
            "required": false,
            "description": "Second line of the home address.",
            "example": "Fleetwood Greens"
          },
          {
            "name": "city",
            "type": "string",
            "required": true,
            "description": "City of the home.",
            "example": "Evieland"
          },
          {
            "name": "state",
            "type": "string",
            "required": true,
            "description": "State of the home.",
            "example": "ME"
          },
          {
            "name": "zip",
            "type": "string",
            "required": true,
            "description": "Zip code of the home.",
            "example": "59166-2043"
          },
          {
            "name": "accountId",
            "type": "integer",
            "required": true,
            "description": "Unique identifier of the Snugg Pro user who owns this job.",
            "example": 28094
          },
          {
            "name": "stageId",
            "type": "string",
            "required": true,
            "description": "Current stage ID of the job.",
            "example": 4
          },
          {
            "name": "companyId",
            "type": "integer",
            "required": true,
            "description": "Unique identifier of the Snugg Pro company who owns the job.",
            "example": 59729
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/job"
            }
          },
          "404": {
            "description": "Endpoint not found"
          },
          "501": {
            "description": "Unauthorized"
          }
        },
        "graphqlQuery": "\n  mutation createJobQuery($input: CreateJobInput!) {\n    createJob(input: $input) {\n      id\n    }\n  }\n",
        "tags": [
          "Job"
        ]
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "name": "jobs",
        "summary": "Jobs",
        "description": "All the jobs for a given company",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/job"
              }
            }
          },
          "404": {
            "description": "Endpoint not found"
          },
          "501": {
            "description": "Unauthorized"
          }
        },
        "graphqlQuery": "\n  query jobsQuery($companyId: Int!) {\n    jobs(companyId: $companyId) {\n      id\n    }\n  }\n",
        "tags": [
          "Company",
          "Job Types"
        ]
      }
    },
    "/jobs/{jobId}/dhws": {
      "get": {
        "produces": [
          "application/json"
        ],
        "name": "dhws",
        "summary": "Dhws",
        "description": "All available dhws for a job",
        "parameters": [
          {
            "name": "jobId",
            "description": "Job Id",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/dhw"
              }
            }
          },
          "404": {
            "description": "Endpoint not found"
          },
          "501": {
            "description": "Unauthorized"
          }
        },
        "graphqlQuery": "query dhwsQuery($jobId: Int!) {\n      dhws(jobId: $jobId) {\n         \n uuid \n dhwFuel \n dhwType \n dhwAge \n dhwLocation \n dhwTemperatureSettings \n dhwEnergyFactor \n dhwEnergyFactorImproved \n dhwTemp \n dhwTempImproved \n dhwManufacturer \n dhwManufacturerImproved \n dhwModel \n dhwModelImproved \n dhwModelYear \n dhwModelYearImproved \n dhwType2 \n dhwType2Improved \n dhwPercentLoad \n dhwPercentLoadImproved \n dhwEnergyStar \n dhwEnergyStarImproved \n dhwHeatingCapacity \n dhwHeatingCapacityImproved \n dhwTankSize \n dhwTankSizeImproved \n dhwRecoveryEfficiency \n dhwRecoveryEfficiencyImproved \n dhwFuel2 \n dhwFuel2Improved\n      }\n    }\n  ",
        "tags": [
          "Job"
        ]
      }
    },
    "/jobs/{jobId}/doors": {
      "get": {
        "produces": [
          "application/json"
        ],
        "name": "doors",
        "summary": "Doors",
        "description": "All available doors for a job",
        "parameters": [
          {
            "name": "jobId",
            "description": "Job Id",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/door"
              }
            }
          },
          "404": {
            "description": "Endpoint not found"
          },
          "501": {
            "description": "Unauthorized"
          }
        },
        "graphqlQuery": "query doorsQuery($jobId: Int!) {\n      doors(jobId: $jobId) {\n         \n uuid \n doorType \n doorUValue \n doorUValueImproved \n doorArea \n doorAreaImproved \n doorEnergyStar \n doorEnergyStarImproved\n      }\n    }\n  ",
        "tags": [
          "Job"
        ]
      }
    },
    "/jobs/{jobId}/freezers": {
      "get": {
        "produces": [
          "application/json"
        ],
        "name": "freezers",
        "summary": "Freezers",
        "description": "All available freezers for a job",
        "parameters": [
          {
            "name": "jobId",
            "description": "Job Id",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/freezer"
              }
            }
          },
          "404": {
            "description": "Endpoint not found"
          },
          "501": {
            "description": "Unauthorized"
          }
        },
        "graphqlQuery": "query freezersQuery($jobId: Int!) {\n      freezers(jobId: $jobId) {\n         \n uuid \n freezerUsage \n freezerUsageImproved \n freezerManufacturer \n freezerManufacturerImproved \n freezerModelYear \n freezerModelYearImproved \n freezerModel \n freezerModelImproved \n freezerName \n freezerEnergyStar \n freezerEnergyStarImproved\n      }\n    }\n  ",
        "tags": [
          "Job"
        ]
      }
    },
    "/jobs/{jobId}/hes-score": {
      "get": {
        "produces": [
          "application/json"
        ],
        "name": "hesScore",
        "summary": "HES Score",
        "description": "HES Score",
        "parameters": [
          {
            "name": "jobId",
            "description": "Job Id",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/hesScores"
            }
          },
          "404": {
            "description": "Endpoint not found"
          },
          "501": {
            "description": "Unauthorized"
          }
        },
        "graphqlQuery": "\n  query hesScoreQuery($jobId: Int!) {\n    hesScore(jobId: $jobId) {\n      hesBaseScore\n    }\n  }\n",
        "tags": [
          "Job",
          "Home Energy Score"
        ]
      }
    },
    "/jobs/{jobId}/health": {
      "get": {
        "produces": [
          "application/json"
        ],
        "name": "health",
        "summary": "Health",
        "description": "Results from BPI tests and any other tests performed in the home.",
        "parameters": [
          {
            "name": "jobId",
            "description": "Job Id",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/health"
            }
          },
          "404": {
            "description": "Endpoint not found"
          },
          "501": {
            "description": "Unauthorized"
          }
        },
        "graphqlQuery": "\n  query healthQuery($jobId: Int!) {\n    health(jobId: $jobId) {\n       \n healthAmbientCarbonMonoxide \n healthNaturalConditionSpillage \n healthWorstCaseDepressurization \n healthWorstCaseSpillage \n healthUndilutedFlueCo \n healthDraftPressure \n healthGasLeak \n healthVenting \n healthMoldMoisture \n healthRadon \n healthAsbestos \n healthLead \n healthElectrical\n    }\n  }\n",
        "tags": [
          "Job"
        ]
      }
    },
    "/jobs/{jobId}/hvacs": {
      "get": {
        "produces": [
          "application/json"
        ],
        "name": "hvacs",
        "summary": "Hvacs",
        "description": "All available hvacs for a job",
        "parameters": [
          {
            "name": "jobId",
            "description": "Job Id",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/hvac"
              }
            }
          },
          "404": {
            "description": "Endpoint not found"
          },
          "501": {
            "description": "Unauthorized"
          }
        },
        "graphqlQuery": "query hvacsQuery($jobId: Int!) {\n      hvacs(jobId: $jobId) {\n         \n uuid \n hvacSystemName \n hvacSystemEquipmentType \n hvacUpgradeAction \n hvacHeatingEnergySource \n hvacHeatingEnergySourceImproved \n hvacPercentOfTotalHeatingLoad \n hvacPercentOfTotalHeatingLoadImproved \n hvacHeatingCapacity \n hvacHeatingCapacityImproved \n hvacDuctLocation \n hvacDuctLocationImproved \n hvacDuctInsulation \n hvacDuctInsulationImproved \n hvacDuctLeakageValue \n hvacDuctLeakageValueImproved \n hvacDuctEfficiency \n hvacDuctEfficiencyImproved \n hvacPercentOfTotalCoolingLoad \n hvacPercentOfTotalCoolingLoadImproved \n hvacCoolingCapacity \n hvacCoolingCapacityImproved \n hvacCoolingSystemEfficiency \n hvacCoolingSystemEfficiencyImproved \n hvacHeatingSystemEfficiency \n hvacHeatingSystemEfficiencyImproved \n hvacDuctLeakage \n hvacDuctLeakageImproved \n hvacCoolingSystemManufacturer \n hvacCoolingSystemManufacturerImproved \n hvacCoolingSystemModel \n hvacCoolingSystemModelImproved \n hvacCoolingSystemModelYear \n hvacCoolingSystemModelYearImproved \n hvacHeatingSystemManufacturer \n hvacHeatingSystemManufacturerImproved \n hvacHeatingSystemModelYear \n hvacHeatingSystemModelYearImproved \n hvacHeatingSystemModel \n hvacHeatingSystemModelImproved \n hvacDuctInsulationValue \n hvacDuctInsulationValueImproved \n hvacHeatPumpInverter \n hvacHeatPumpInverterImproved\n      }\n    }\n  ",
        "tags": [
          "Job"
        ]
      }
    },
    "/jobs/{jobId}/job-financings": {
      "get": {
        "produces": [
          "application/json"
        ],
        "name": "jobFinancings",
        "summary": "Job Financings",
        "description": "Job Financings",
        "parameters": [
          {
            "name": "jobId",
            "description": "Job Id",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/jobFinancing"
            }
          },
          "404": {
            "description": "Endpoint not found"
          },
          "501": {
            "description": "Unauthorized"
          }
        },
        "graphqlQuery": "\n  query jobFinancingsQuery($jobId: Int!) {\n    jobFinancings(jobId: $jobId) {\n       \n uuid \n title \n isShown \n cashDown\n    }\n  }\n",
        "tags": [
          "Job"
        ]
      }
    },
    "/job-templates": {
      "get": {
        "produces": [
          "application/json"
        ],
        "name": "jobTemplates",
        "summary": "Job Templates",
        "description": "List of all job templates",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/job"
              }
            }
          },
          "404": {
            "description": "Endpoint not found"
          },
          "501": {
            "description": "Unauthorized"
          }
        },
        "graphqlQuery": "\n  query jobTemplatesQuery($companyId: Int!) {\n    jobTemplates(companyId: $companyId) {\n      id\n      firstName\n      lastName\n    }\n  }\n",
        "tags": [
          "Company",
          "Job Types"
        ]
      }
    },
    "/jobs/{jobId}/metrics-summary": {
      "get": {
        "produces": [
          "application/json"
        ],
        "name": "totals",
        "summary": "Metrics",
        "description": "Data about the job",
        "parameters": [
          {
            "name": "jobId",
            "description": "Job Id",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/totals"
            }
          },
          "404": {
            "description": "Endpoint not found"
          },
          "501": {
            "description": "Unauthorized"
          }
        },
        "graphqlQuery": "\n  query totalsQuery($jobId: Int!) {\n    totals(jobId: $jobId) {\n       \n annualFuelThermsUsed \n annualFuelThermsImproved \n annualFuelThermsSaved \n annualElectricKWhUsed \n annualElectricKWhImproved \n savedKwh \n mbtuBase \n mbtuImproved \n savedMbtu \n annualFuelDollarsSpent \n annualFuelDollarsImproved \n annualFuelDollarsSpentSaved \n annualElectricDollarsSpent \n annualElectricDollarsImproved \n annualElectricDollarsSpentSaved \n yearlyEnergyCost \n yearlyEnergyCostImproved \n totalSavings \n yearlyEnergyCost \n yearlyEnergyCostImproved \n totalSavings \n installedCosts \n savedMbtuPercent \n savedCo2Percent \n paybackYears \n sir \n mirr\n    }\n  }\n",
        "tags": [
          "Job"
        ]
      }
    },
    "/jobs/{jobId}/ovens": {
      "get": {
        "produces": [
          "application/json"
        ],
        "name": "ovens",
        "summary": "Ovens",
        "description": "All available ovens for a job",
        "parameters": [
          {
            "name": "jobId",
            "description": "Job Id",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/oven"
              }
            }
          },
          "404": {
            "description": "Endpoint not found"
          },
          "501": {
            "description": "Unauthorized"
          }
        },
        "graphqlQuery": "query ovensQuery($jobId: Int!) {\n      ovens(jobId: $jobId) {\n         \n uuid \n ovenFuelType \n ovenFuelTypeImproved\n      }\n    }\n  ",
        "tags": [
          "Job"
        ]
      }
    },
    "/programs": {
      "get": {
        "produces": [
          "application/json"
        ],
        "name": "programs",
        "summary": "Programs",
        "description": "A list of all programs that a company is associated with.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/program"
              }
            }
          },
          "404": {
            "description": "Endpoint not found"
          },
          "501": {
            "description": "Unauthorized"
          }
        },
        "graphqlQuery": "\n  query programsQuery($companyId: Int!) {\n    programs(companyId: $companyId) {\n      ...programFragment\n    }\n  }\n  \n  fragment programFragment on Program {\n    name\n  }\n\n",
        "tags": [
          "Company"
        ]
      }
    },
    "/jobs/{jobId}/pvs": {
      "get": {
        "produces": [
          "application/json"
        ],
        "name": "pvs",
        "summary": "Pvs",
        "description": "All available pvs for a job",
        "parameters": [
          {
            "name": "jobId",
            "description": "Job Id",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/pv"
              }
            }
          },
          "404": {
            "description": "Endpoint not found"
          },
          "501": {
            "description": "Unauthorized"
          }
        },
        "graphqlQuery": "query pvsQuery($jobId: Int!) {\n      pvs(jobId: $jobId) {\n         \n uuid \n pv \n pvImproved \n pvArraySize \n pvArraySizeImproved \n pvAnnualProduction \n pvAnnualProductionImproved \n pvArraySlope \n pvArraySlopeImproved \n pvArrayOrientation \n pvArrayOrientationImproved \n pvModuleYear\n      }\n    }\n  ",
        "tags": [
          "Job"
        ]
      }
    },
    "/jobs/{jobId}/ranges": {
      "get": {
        "produces": [
          "application/json"
        ],
        "name": "ranges",
        "summary": "Ranges",
        "description": "All available ranges for a job",
        "parameters": [
          {
            "name": "jobId",
            "description": "Job Id",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/range"
              }
            }
          },
          "404": {
            "description": "Endpoint not found"
          },
          "501": {
            "description": "Unauthorized"
          }
        },
        "graphqlQuery": "query rangesQuery($jobId: Int!) {\n      ranges(jobId: $jobId) {\n         \n uuid \n rangeFuelType \n rangeFuelTypeImproved\n      }\n    }\n  ",
        "tags": [
          "Job"
        ]
      }
    },
    "/jobs/{jobId}/recommendations": {
      "get": {
        "produces": [
          "application/json"
        ],
        "name": "recommendations",
        "summary": "Recommendations",
        "description": "recommendations",
        "parameters": [
          {
            "name": "jobId",
            "description": "Job Id",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/recommendation"
              }
            }
          },
          "404": {
            "description": "Endpoint not found"
          },
          "501": {
            "description": "Unauthorized"
          }
        },
        "graphqlQuery": "\n  query recommendationsQuery($jobId: Int!, $status: Int) {\n    recommendations(jobId: $jobId, status: $status) {\n       \n uuid \n status \n title \n cost \n costType \n measureCode \n homeownerNotes \n contractorNotes \n whyItMatters\n      captions {\n         \n uuid \n caption\n      }\n    }\n  }\n",
        "tags": [
          "Job"
        ]
      }
    },
    "/jobs/{jobId}/refrigerators": {
      "get": {
        "produces": [
          "application/json"
        ],
        "name": "refrigerators",
        "summary": "Refrigerators",
        "description": "All available refrigerators for a job",
        "parameters": [
          {
            "name": "jobId",
            "description": "Job Id",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/refrigerator"
              }
            }
          },
          "404": {
            "description": "Endpoint not found"
          },
          "501": {
            "description": "Unauthorized"
          }
        },
        "graphqlQuery": "query refrigeratorsQuery($jobId: Int!) {\n      refrigerators(jobId: $jobId) {\n         \n uuid \n refrigeratorAge \n refrigeratorSize \n refrigeratorName \n refrigeratorUsage \n refrigeratorUsageImproved \n refrigeratorManufacturer \n refrigeratorManufacturerImproved \n refrigeratorModel \n refrigeratorModelImproved \n refrigeratorEnergyStar \n refrigeratorEnergyStarImproved \n refrigeratorModelYear \n refrigeratorModelYearImproved\n      }\n    }\n  ",
        "tags": [
          "Job"
        ]
      }
    },
    "/jobs/{jobId}/report": {
      "get": {
        "produces": [
          "application/json"
        ],
        "name": "report",
        "summary": "Report",
        "description": "This is metadata about the report, not the PDF file.",
        "parameters": [
          {
            "name": "jobId",
            "description": "Job Id",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/report"
            }
          },
          "404": {
            "description": "Endpoint not found"
          },
          "501": {
            "description": "Unauthorized"
          }
        },
        "graphqlQuery": "\n  query reportQuery($jobId: Int!) {\n    report(jobId: $jobId) {\n       \n titleCover \n coverTextArea \n titleConcerns \n concernsSidebar \n titleSolutions \n solutionsTitle \n titleFinancing \n additionalNotesOverviewTitle \n additionalNotesOverview \n titleTechSpecs \n titleMetrics \n titleGlossary \n titleHes \n titleCoc \n titleWorkOrder \n serviceDateTitle \n servicedByTitle \n elementCosts \n elementSavings \n elementSir \n elementCo2 \n elementWhyItMatters \n elementPhotos \n elementHomeownerNotes \n elementContractorNotes \n elementNowAndGoal \n pageCover \n pageConcerns \n pageSolutions \n pageUpgradeDetails \n pageHealth \n pageAdditionalNotes \n pageRebates \n pageFinancing \n pageMetrics \n pageTechSpecs \n pageHes \n pageCoc \n pageWorkOrder \n pageGlossary \n safetyOverview\n    }\n  }\n",
        "tags": [
          "Job"
        ]
      }
    },
    "/jobs/{jobId}/vaults": {
      "get": {
        "produces": [
          "application/json"
        ],
        "name": "vaults",
        "summary": "Vaults",
        "description": "All available vaults for a job",
        "parameters": [
          {
            "name": "jobId",
            "description": "Job Id",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/vault"
              }
            }
          },
          "404": {
            "description": "Endpoint not found"
          },
          "501": {
            "description": "Unauthorized"
          }
        },
        "graphqlQuery": "query vaultsQuery($jobId: Int!) {\n      vaults(jobId: $jobId) {\n         \n uuid \n vaultModeledVaultArea \n vaultModeledVaultAreaImproved \n vaultCavityInsulation \n vaultCavityInsulationImproved \n vaultContinuousInsulation \n vaultContinuousInsulationImproved \n vault \n vaultPercent \n vaultRoofAbsorptance \n vaultRoofAbsorptanceImproved \n vaultRoofEmissivity \n vaultRoofEmissivityImproved \n vaultCoolRoof \n vaultCoolRoofImproved \n vaultCavityInsulationType \n vaultCavityInsulationTypeImproved \n vaultContinuousInsulationType \n vaultContinuousInsulationTypeImproved\n      }\n    }\n  ",
        "tags": [
          "Job"
        ]
      }
    },
    "/jobs/{jobId}/walls": {
      "get": {
        "produces": [
          "application/json"
        ],
        "name": "walls",
        "summary": "Walls",
        "description": "All available walls for a job",
        "parameters": [
          {
            "name": "jobId",
            "description": "Job Id",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/wall"
              }
            }
          },
          "404": {
            "description": "Endpoint not found"
          },
          "501": {
            "description": "Unauthorized"
          }
        },
        "graphqlQuery": "query wallsQuery($jobId: Int!) {\n      walls(jobId: $jobId) {\n         \n uuid \n wallExteriorWallSiding \n wallExteriorWallConstruction \n wallsInsulated \n wallCavityInsulation \n wallCavityInsulationImproved \n wallContinuousInsulation \n wallContinuousInsulationImproved \n wallModeledWallArea \n wallModeledWallAreaImproved \n wallSystemPercentOfTotal \n wallCavityInsulationType \n wallCavityInsulationTypeImproved \n wallContinuousInsulationType \n wallContinuousInsulationTypeImproved\n      }\n    }\n  ",
        "tags": [
          "Job"
        ]
      }
    },
    "/jobs/{jobId}/windows": {
      "get": {
        "produces": [
          "application/json"
        ],
        "name": "windows",
        "summary": "Windows",
        "description": "All available windows for a job",
        "parameters": [
          {
            "name": "jobId",
            "description": "Job Id",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/window"
              }
            }
          },
          "404": {
            "description": "Endpoint not found"
          },
          "501": {
            "description": "Unauthorized"
          }
        },
        "graphqlQuery": "query windowsQuery($jobId: Int!) {\n      windows(jobId: $jobId) {\n         \n uuid \n windowType \n windowFrame \n windowNorthAreaPercent \n windowEfficiency \n windowEfficiencyImproved \n windowAreaNorth \n windowAreaNorthImproved \n windowAreaEast \n windowAreaEastImproved \n windowAreaSouth \n windowAreaSouthImproved \n windowAreaWest \n windowAreaWestImproved \n windowSolarHeatGainCoefficient \n windowSolarHeatGainCoefficientImproved \n windowEastAreaPercent \n windowSouthAreaPercent \n windowWestAreaPercent \n windowNorthOverhangDepth \n windowEastOverhangDepth \n windowSouthOverhangDepth \n windowWestOverhangDepth \n windowExteriorTreatmentNorth \n windowExteriorTreatmentNorthImproved \n windowExteriorTreatmentEast \n windowExteriorTreatmentEastImproved \n windowExteriorTreatmentSouth \n windowExteriorTreatmentSouthImproved \n windowExteriorTreatmentWest \n windowExteriorTreatmentWestImproved \n windowEnergyStar \n windowEnergyStarImproved\n      }\n    }\n  ",
        "tags": [
          "Job"
        ]
      }
    }
  },
  "definitions": {
    "attic": {
      "properties": {
        "uuid": {
          "type": "string",
          "example": "e73fe466-2265-436a-b055-0a21f40bb92a",
          "enum": false,
          "description": "This is a universally unique ID for this item (UUID)."
        },
        "atticInsulationDepth": {
          "type": "string",
          "example": "13-15",
          "enum": [
            "0",
            "1-3",
            "4-6",
            "7-9",
            "10-12",
            "13-15",
            "16+",
            "Don't Know"
          ],
          "description": "\n        Enter the depth of all installed attic or ceiling insulation. If the insulation is not evenly distributed, estimate an average depth for the area. If the insulation is evenly distributed but has different depths installed in different area, use the depth of insulation that covers the largest area. If there is no attic and instead vaulted ceilings, enter an estimate of the thickness of insulation in the vaulted cavity.\n        <br/>\n        \n        <br/>\n        "
        },
        "atticInsulationType": {
          "type": "string",
          "example": "Spray Foam",
          "enum": [
            "Fiberglass or Rockwool (batts or blown)",
            "Cellulose",
            "Spray Foam",
            "Don't Know"
          ],
          "description": "\n        Select the type of insulation that is installed in the attic or ceiling. If more than one type of insulation is installed, select the type that covers that largest area.\n        <br/>\n        \n        <br/>\n        "
        },
        "atticInsulationTypeImproved": {
          "type": "string",
          "example": "Spray Foam",
          "enum": [
            "Fiberglass or Rockwool (batts or blown)",
            "Cellulose",
            "Spray Foam",
            "Don't Know"
          ],
          "description": "\n        Select the type of insulation that is installed in the attic or ceiling. If more than one type of insulation is installed, select the type that covers that largest area.\n        <br/>\n        \n        <br/>\n        "
        },
        "atticModeledAtticArea": {
          "type": "number",
          "example": 502595.27,
          "maximum": 1000000,
          "minimum": 0,
          "enum": false,
          "description": "This field will be automatically calculated based on the data you entered in the input form for Conditioned Area and Number of Stories.<br><br>\n\nThis field designates the actual interior surface area of the ceiling. On the improved side, this is the new total sqft of the attic. Reduce this number if you're switching the attic from unconditioned to a conditioned space. For instance, if the original house had 1000 sqft of attic space and you converted it to a fully conditioned attic by spray foaming the roof deck and rafters, then set the base side to 1000 sqft and the improved side to 0. Then create a vaulted ceiling that is 0 on the base side and 1118 sqft on the improved side (adding 118 sqft for a 6/12 roof pitch). "
        },
        "atticModeledAtticAreaImproved": {
          "type": "number",
          "example": 20380.82,
          "maximum": 1000000,
          "minimum": 0,
          "enum": false,
          "description": "This field will be automatically calculated based on the data you entered in the input form for Conditioned Area and Number of Stories.<br><br>\n\nThis field designates the actual interior surface area of the ceiling. On the improved side, this is the new total sqft of the attic. Reduce this number if you're switching the attic from unconditioned to a conditioned space. For instance, if the original house had 1000 sqft of attic space and you converted it to a fully conditioned attic by spray foaming the roof deck and rafters, then set the base side to 1000 sqft and the improved side to 0. Then create a vaulted ceiling that is 0 on the base side and 1118 sqft on the improved side (adding 118 sqft for a 6/12 roof pitch). "
        },
        "atticInsulation": {
          "type": "number",
          "example": 47.91,
          "maximum": 100,
          "minimum": 0,
          "enum": false,
          "description": "Enter the total R-value of insulation installed (BASE) or to be installed (IMPROVED) in this Attic. Framing factors have already been taken into account, so specify the R-value of the insulation within the cavity.<br><br>\n\n<strong>Note:</strong><br>\nEdit Base fields in the Details section only if you're confident of the actual value that is entered. The modeling engine utilizes utility data and input form data to determine the \"effective\" values on the Base side.<br><br>\n\nEdit Improved fields in the Details section with the details of what you recommend be installed in the house. These values are only used if the item is Recommended. Default values are supplied by the modeling engine, but can be overridden.<br><br>"
        },
        "atticInsulationImproved": {
          "type": "number",
          "example": 70.49,
          "maximum": 100,
          "minimum": 0,
          "enum": false,
          "description": "Enter the total R-value of insulation installed (BASE) or to be installed (IMPROVED) in this Attic. Framing factors have already been taken into account, so specify the R-value of the insulation within the cavity.<br><br>\n\n<strong>Note:</strong><br>\nEdit Base fields in the Details section only if you're confident of the actual value that is entered. The modeling engine utilizes utility data and input form data to determine the \"effective\" values on the Base side.<br><br>\n\nEdit Improved fields in the Details section with the details of what you recommend be installed in the house. These values are only used if the item is Recommended. Default values are supplied by the modeling engine, but can be overridden.<br><br>"
        },
        "atticKneeWallArea": {
          "type": "number",
          "example": 880183.94,
          "maximum": 1000000,
          "minimum": 0,
          "enum": false,
          "description": "Enter the total surface area of knee wall adjoining this attic space."
        },
        "atticKneeWallAreaImproved": {
          "type": "number",
          "example": 377907.02,
          "maximum": 1000000,
          "minimum": 0,
          "enum": false,
          "description": "Enter the total surface area of knee wall adjoining this attic space."
        },
        "atticKneeWallInsulation": {
          "type": "number",
          "example": 50.12,
          "maximum": 100,
          "minimum": 0,
          "enum": false,
          "description": "Enter the total R-value of insulation installed (BASE) or to be installed (IMPROVED) in this Knee Wall cavity."
        },
        "atticKneeWallInsulationImproved": {
          "type": "number",
          "example": 22.31,
          "maximum": 100,
          "minimum": 0,
          "enum": false,
          "description": "Enter the total R-value of insulation installed (BASE) or to be installed (IMPROVED) in this Knee Wall cavity."
        },
        "atticKneeWallContinuousInsulation": {
          "type": "number",
          "example": 85.73,
          "maximum": 100,
          "minimum": 0,
          "enum": false,
          "description": "Enter the total R-value of insulation installed (BASE) or to be installed (IMPROVED) in this Knee Wall cavity."
        },
        "atticKneeWallContinuousInsulationImproved": {
          "type": "number",
          "example": 79.32,
          "maximum": 100,
          "minimum": 0,
          "enum": false,
          "description": "Enter the total R-value of insulation installed (BASE) or to be installed (IMPROVED) in this Knee Wall cavity."
        },
        "atticHasKneeWall": {
          "type": "string",
          "example": "No",
          "enum": [
            "Yes",
            "No"
          ],
          "description": "\n        Choose Yes if there is a knee wall in this attic space.\n        <br/>\n        \n        <br/>\n        "
        },
        "atticHasKneeWallImproved": {
          "type": "string",
          "example": "Yes",
          "enum": [
            "Yes",
            "No"
          ],
          "description": "\n        Choose Yes if there is a knee wall in this attic space.\n        <br/>\n        \n        <br/>\n        "
        },
        "atticRadiantBarrier": {
          "type": "string",
          "example": "Yes",
          "enum": [
            "Yes",
            "No"
          ],
          "description": "\n        Please designate if the base or improved attic has a radiant barrier. Costs will not be adjusted for this nor will the R-Value of the attic insulation. The energy savings will be calculated in addition to the R-Value of the attic. \n        <br/>\n        \n        <br/>\n        "
        },
        "atticRadiantBarrierImproved": {
          "type": "string",
          "example": "No",
          "enum": [
            "Yes",
            "No"
          ],
          "description": "\n        Please designate if the base or improved attic has a radiant barrier. Costs will not be adjusted for this nor will the R-Value of the attic insulation. The energy savings will be calculated in addition to the R-Value of the attic. \n        <br/>\n        \n        <br/>\n        "
        },
        "atticPercent": {
          "type": "number",
          "example": 52,
          "enum": false,
          "description": "Enter the % of the total footprint that is attributed to each attic or vault area."
        },
        "atticRoofAbsorptance": {
          "type": "number",
          "example": 0.8,
          "maximum": 1,
          "minimum": 0,
          "enum": false,
          "description": "Enter the Solar Absorptance of the roofing material above this attic space. Solar Absorptance is equal to 1 - Solar Reflectance. For example, if the ENERGY STAR website gives a Initial Solar Reflectance of 0.27, enter 0.73. Default numbers will be supplied automatically, so don't change these settings unless you plan to specify a cool roof as an improvement."
        },
        "atticRoofAbsorptanceImproved": {
          "type": "number",
          "example": 0.8,
          "maximum": 1,
          "minimum": 0,
          "enum": false,
          "description": "Enter the Solar Absorptance of the roofing material above this attic space. Solar Absorptance is equal to 1 - Solar Reflectance. For example, if the ENERGY STAR website gives a Initial Solar Reflectance of 0.27, enter 0.73. Default numbers will be supplied automatically, so don't change these settings unless you plan to specify a cool roof as an improvement."
        },
        "atticRoofEmissivity": {
          "type": "number",
          "example": 0.76,
          "maximum": 1,
          "minimum": 0,
          "enum": false,
          "description": "Enter the Thermal Emittance or Emissivity of the roofing material above this attic space. Default numbers will be supplied automatically, so don't change these settings unless you plan to specify a cool roof as an improvement."
        },
        "atticRoofEmissivityImproved": {
          "type": "number",
          "example": 0.76,
          "maximum": 1,
          "minimum": 0,
          "enum": false,
          "description": "Enter the Thermal Emittance or Emissivity of the roofing material above this attic space. Default numbers will be supplied automatically, so don't change these settings unless you plan to specify a cool roof as an improvement."
        },
        "atticCoolRoof": {
          "type": "string",
          "example": "No",
          "enum": [
            "Yes",
            "No"
          ],
          "description": "\n        Choose yes if you would like to specify characteristics of a cool roof (such as ENERGY STAR qualified roof products) for either the base or improved home. Default numbers will be supplied automatically. Most contractors will not use this option unless they are actually planning to replace a roof as part of an improvement package. \n        <br/>\n        \n        <br/>\n        "
        },
        "atticCoolRoofImproved": {
          "type": "string",
          "example": "No",
          "enum": [
            "Yes",
            "No"
          ],
          "description": "\n        Choose yes if you would like to specify characteristics of a cool roof (such as ENERGY STAR qualified roof products) for either the base or improved home. Default numbers will be supplied automatically. Most contractors will not use this option unless they are actually planning to replace a roof as part of an improvement package. \n        <br/>\n        \n        <br/>\n        "
        },
        "atticKneeWallInsulationType": {
          "type": "string",
          "example": "Open Cell Spray Foam",
          "enum": [
            "Fiberglass or Rockwool Batt",
            "Blown Fiberglass or Rockwool",
            "Cellulose",
            "Open Cell Spray Foam",
            "Closed Cell Spray Foam",
            "Other"
          ],
          "description": "\n        Select the type of insulation that is installed in the knee wall cavity. If more than one type of insulation is installed, select the type that covers that largest area.\n        <br/>\n        \n        <br/>\n        "
        },
        "atticKneeWallInsulationTypeImproved": {
          "type": "string",
          "example": "Closed Cell Spray Foam",
          "enum": [
            "Fiberglass or Rockwool Batt",
            "Blown Fiberglass or Rockwool",
            "Cellulose",
            "Open Cell Spray Foam",
            "Closed Cell Spray Foam",
            "Other"
          ],
          "description": "\n        Select the type of insulation that is installed in the knee wall cavity. If more than one type of insulation is installed, select the type that covers that largest area.\n        <br/>\n        \n        <br/>\n        "
        },
        "atticKneeWallContinuousInsulationType": {
          "type": "string",
          "example": "Rigid Polyisocyanurate",
          "enum": [
            "Rigid XPS",
            "Rigid EPS",
            "Rigid Polyisocyanurate",
            "Open Cell Spray Foam",
            "Closed Cell Spray Foam",
            "Other"
          ],
          "description": "\n        Select the type of continuous insulation that is installed on the knee wall. If more than one type of insulation is installed, select the type that covers that largest area.\n        <br/>\n        \n        <br/>\n        "
        },
        "atticKneeWallContinuousInsulationTypeImproved": {
          "type": "string",
          "example": "Rigid EPS",
          "enum": [
            "Rigid XPS",
            "Rigid EPS",
            "Rigid Polyisocyanurate",
            "Open Cell Spray Foam",
            "Closed Cell Spray Foam",
            "Other"
          ],
          "description": "\n        Select the type of continuous insulation that is installed on the knee wall. If more than one type of insulation is installed, select the type that covers that largest area.\n        <br/>\n        \n        <br/>\n        "
        }
      }
    },
    "clothesDryer": {
      "properties": {
        "uuid": {
          "type": "string",
          "example": "47488cb7-36d0-4d7c-9b8a-02abd3069e10",
          "enum": false,
          "description": "This is a universally unique ID for this item (UUID)."
        },
        "clothesDryerFuelType": {
          "type": "string",
          "example": "Don't Know",
          "enum": [
            "Natural Gas",
            "Electricity",
            "Propane",
            "None",
            "Don't Know"
          ],
          "description": "\n        Select the type of clothes dryer used in the home. If the home has more than one clothes dryer, select the one that is used most often.\n        <br/>\n        \n        <br/>\n        "
        },
        "clothesDryerFuelTypeImproved": {
          "type": "string",
          "example": "Electricity",
          "enum": [
            "Natural Gas",
            "Electricity",
            "Propane",
            "None",
            "Don't Know"
          ],
          "description": "\n        Select the type of clothes dryer used in the home. If the home has more than one clothes dryer, select the one that is used most often.\n        <br/>\n        \n        <br/>\n        "
        }
      }
    },
    "concern": {
      "properties": {
        "uuid": {
          "type": "string",
          "example": "2aa24f0e-52b7-41e7-baa2-c6a6589884d0",
          "enum": false,
          "description": "This is a universally unique ID for this item (UUID)."
        },
        "concernSummary": {
          "type": "string",
          "example": "Heating system is old",
          "maxLength": 255,
          "enum": false,
          "description": "Type a short sentence that details a concern from the homeowner. This could be regarding comfort, health and safety, energy savings, aesthetics, noise, etc. There is no right or wrong answer."
        },
        "concernDetail": {
          "type": "string",
          "example": "Furnace needs to be replaced for additional comfort and health & safety issues.",
          "enum": false,
          "description": "Type a more detailed description of this concern from the homeowner."
        }
      }
    },
    "dhw": {
      "properties": {
        "uuid": {
          "type": "string",
          "example": "33c0279b-5241-40b1-9bf2-c8a23a381947",
          "enum": false,
          "description": "This is a universally unique ID for this item (UUID)."
        },
        "dhwFuel": {
          "type": "string",
          "example": "Fuel Oil",
          "enum": [
            "Electricity",
            "Natural Gas",
            "Fuel Oil",
            "Propane",
            "Solar",
            "None",
            "Don't Know"
          ],
          "description": "\n        Select the type of energy source used to provide domestic hot water for the home. Domestic hot water is typically the hot water that comes from the faucets, showers, bathtubs, washing machines and dishwashers in the home. If more than one type of energy source is used to provide hot water, select the type that provides the most gallons of hot water.\n        <br/>\n        \n        <br/>\n        "
        },
        "dhwType": {
          "type": "string",
          "example": "Don't Know",
          "enum": [
            "Standard tank",
            "Tank with extra insulation",
            "Heat Pump",
            "Tankless (on-demand)",
            "Sidearm Tank (set EF manually)",
            "Don't Know"
          ],
          "description": "\n        Select the type of the hot water system that stores or delivers the domestic hot water for the home. If more than two type of system is used for hot water in the home, select the type for the one that delivers the most gallons of hot water to the home.<br><br>\n\n<strong>Note</strong>: If you have an Sidearm Tank to a Boiler (Indirect Tank), you will need to manually set the EF on the Water Heater Details. Please refer to the EF Calculator that's available in the knowledge base to determine the EF of the total system.\n        <br/>\n        \n        <br/>\n        "
        },
        "dhwAge": {
          "type": "string",
          "example": "36+",
          "enum": [
            "0-5",
            "6-10",
            "11-15",
            "16-20",
            "21-25",
            "26-30",
            "31-35",
            "36+"
          ],
          "description": "\n        Select the age in years of the hot water system that stores or delivers the domestic hot water for the home. If more than one type of system is used for hot water in the home, select the age for the one that delivers the most gallons of hot water to the home.\n        <br/>\n        \n        <br/>\n        "
        },
        "dhwLocation": {
          "type": "string",
          "example": "Don't Know",
          "enum": [
            "Indoors and within heated area",
            "Garage or Unconditioned Space",
            "Outbuilding",
            "Don't Know"
          ],
          "description": "\n        Select the where the hot water system that stores or delivers the domestic hot water for the home is located. If more than one type of system is used for hot water in the home, select the location for the one that delivers the most gallons of hot water to the home.\n        <br/>\n        \n        <br/>\n        "
        },
        "dhwTemperatureSettings": {
          "type": "string",
          "example": "Low (120-130 F)",
          "enum": [
            "Low (120-130 F)",
            "Medium (130-140 F)",
            "High (140-150 F)",
            "Very High (150+ F)",
            "Don't Know"
          ],
          "description": "\n        Select the temperature setting for the hot water system that stores or delivers the domestic hot water for the home. If more than one type of system is used for hot water in the home, select the temperature setting for the one that delivers the most gallons of hot water to the home.\n        <br/>\n        \n        <br/>\n        "
        },
        "dhwEnergyFactor": {
          "type": "integer",
          "example": 56,
          "maximum": 100,
          "minimum": 1,
          "enum": false,
          "description": "Enter the rated Energy Factor of the water heater without a decimal. Sometimes, the Energy Factor of a water heater is expressed as 0.56 or 0.82. Enter it here as 56 or 82. The Min and Max values change based on the type of water heater. Energy Factors for most equipment can be found at ahridirectory.org."
        },
        "dhwEnergyFactorImproved": {
          "type": "integer",
          "example": 56,
          "maximum": 100,
          "minimum": 1,
          "enum": false,
          "description": "Enter the rated Energy Factor of the water heater without a decimal. Sometimes, the Energy Factor of a water heater is expressed as 0.56 or 0.82. Enter it here as 56 or 82. The Min and Max values change based on the type of water heater. Energy Factors for most equipment can be found at ahridirectory.org."
        },
        "dhwTemp": {
          "type": "integer",
          "example": 116,
          "maximum": 200,
          "minimum": 100,
          "enum": false,
          "description": "Enter the temperature of the water produced by the water heating system."
        },
        "dhwTempImproved": {
          "type": "integer",
          "example": 180,
          "maximum": 200,
          "minimum": 100,
          "enum": false,
          "description": "Enter the temperature of the water produced by the water heating system."
        },
        "dhwManufacturer": {
          "type": "string",
          "example": "Bosch",
          "enum": [
            "Unknown",
            "A.O. Smith",
            "American",
            "Bosch",
            "Bradford White",
            "Bryant",
            "Comfort Maker",
            "GE",
            "Navien",
            "Noritz",
            "Rinnai",
            "Sears",
            "Rheem",
            "State Industries",
            "Stiebel Eltron",
            "Takaji",
            "Triangle Tube",
            "Other"
          ],
          "description": "\n        Enter the Manufacturer of the water heater.\n        <br/>\n        \n        <br/>\n        "
        },
        "dhwManufacturerImproved": {
          "type": "string",
          "example": "State Industries",
          "enum": [
            "Unknown",
            "A.O. Smith",
            "American",
            "Bosch",
            "Bradford White",
            "Bryant",
            "Comfort Maker",
            "GE",
            "Navien",
            "Noritz",
            "Rinnai",
            "Sears",
            "Rheem",
            "State Industries",
            "Stiebel Eltron",
            "Takaji",
            "Triangle Tube",
            "Other"
          ],
          "description": "\n        Enter the Manufacturer of the water heater.\n        <br/>\n        \n        <br/>\n        "
        },
        "dhwModel": {
          "type": "string",
          "example": "Some text value",
          "enum": false,
          "description": "Enter the Model number of the water heater."
        },
        "dhwModelImproved": {
          "type": "string",
          "example": "Some text value",
          "enum": false,
          "description": "Enter the Model number of the water heater."
        },
        "dhwModelYear": {
          "type": "string",
          "example": "1998",
          "maximum": 2030,
          "minimum": 1900,
          "enum": false,
          "description": "Enter the model year of the water heater."
        },
        "dhwModelYearImproved": {
          "type": "string",
          "example": "1998",
          "maximum": 2030,
          "minimum": 1900,
          "enum": false,
          "description": "Enter the model year of the water heater."
        },
        "dhwType2": {
          "type": "string",
          "example": "Tank Water Heater",
          "enum": [
            "Tank Water Heater",
            "Tankless Water Heater",
            "Heat Pump"
          ],
          "description": "\n        Enter the type of water heater installed (BASE) or to be installed (IMPROVED).<br><br>\n\n<strong>Note</strong>: If you have an Sidearm Tank to a Boiler (Indirect Tank), you will need to choose \"Standard tank\" as the DHW type and manually set the EF on for Base and Improved. Please refer to the EF Calculator that's available in the knowledge base to determine the EF of the total system.\n        <br/>\n        \n        <br/>\n        "
        },
        "dhwType2Improved": {
          "type": "string",
          "example": "Heat Pump",
          "enum": [
            "Tank Water Heater",
            "Tankless Water Heater",
            "Heat Pump"
          ],
          "description": "\n        Enter the type of water heater installed (BASE) or to be installed (IMPROVED).<br><br>\n\n<strong>Note</strong>: If you have an Sidearm Tank to a Boiler (Indirect Tank), you will need to choose \"Standard tank\" as the DHW type and manually set the EF on for Base and Improved. Please refer to the EF Calculator that's available in the knowledge base to determine the EF of the total system.\n        <br/>\n        \n        <br/>\n        "
        },
        "dhwPercentLoad": {
          "type": "number",
          "example": 40,
          "maximum": 100,
          "minimum": 0,
          "enum": false,
          "description": "Percent of the annual DHW load met by this system. Both systems must add up to 100%."
        },
        "dhwPercentLoadImproved": {
          "type": "number",
          "example": 40,
          "maximum": 100,
          "minimum": 0,
          "enum": false,
          "description": "Percent of the annual DHW load met by this system. Both systems must add up to 100%."
        },
        "dhwEnergyStar": {
          "type": "string",
          "example": "Yes",
          "enum": [
            "Yes",
            "No"
          ],
          "description": "\n        Select Yes if this Water Heater is ENERGY STAR Certified.\n        <br/>\n        \n        <br/>\n        "
        },
        "dhwEnergyStarImproved": {
          "type": "string",
          "example": "No",
          "enum": [
            "Yes",
            "No"
          ],
          "description": "\n        Select Yes if this Water Heater is ENERGY STAR Certified.\n        <br/>\n        \n        <br/>\n        "
        },
        "dhwHeatingCapacity": {
          "type": "integer",
          "example": 36000,
          "maximum": 9999999,
          "minimum": 1,
          "enum": false,
          "description": "Enter the rated input capacity of the water heater in BTU/hr."
        },
        "dhwHeatingCapacityImproved": {
          "type": "integer",
          "example": 36000,
          "maximum": 9999999,
          "minimum": 1,
          "enum": false,
          "description": "Enter the rated input capacity of the water heater in BTU/hr."
        },
        "dhwTankSize": {
          "type": "integer",
          "example": 40,
          "maximum": 120,
          "minimum": 1,
          "enum": false,
          "description": "Enter the tank size the water heater in gallons."
        },
        "dhwTankSizeImproved": {
          "type": "integer",
          "example": 40,
          "maximum": 120,
          "minimum": 1,
          "enum": false,
          "description": "Enter the tank size the water heater in gallons."
        },
        "dhwRecoveryEfficiency": {
          "type": "number",
          "example": 62,
          "maximum": 100,
          "minimum": 1,
          "enum": false,
          "description": "Enter the system recovery efficiency of the water heater. This field is optional for modeling but is required for some utility programs such as NYSERDA."
        },
        "dhwRecoveryEfficiencyImproved": {
          "type": "number",
          "example": 62,
          "maximum": 100,
          "minimum": 1,
          "enum": false,
          "description": "Enter the system recovery efficiency of the water heater. This field is optional for modeling but is required for some utility programs such as NYSERDA."
        },
        "dhwFuel2": {
          "type": "string",
          "example": "Propane",
          "enum": [
            "Electricity",
            "Natural Gas",
            "Fuel Oil",
            "Propane",
            "Solar",
            "None"
          ],
          "description": "\n        Select the type of energy source used to provide domestic hot water for the home. Domestic hot water is typically the hot water that comes from the faucets, showers, bathtubs, washing machines and dishwashers in the home. If more than one type of energy source is used to provide hot water, select the type that provides the most gallons of hot water.\n        <br/>\n        \n        <br/>\n        "
        },
        "dhwFuel2Improved": {
          "type": "string",
          "example": "Electricity",
          "enum": [
            "Electricity",
            "Natural Gas",
            "Fuel Oil",
            "Propane",
            "Solar",
            "None"
          ],
          "description": "\n        Select the type of energy source used to provide domestic hot water for the home. Domestic hot water is typically the hot water that comes from the faucets, showers, bathtubs, washing machines and dishwashers in the home. If more than one type of energy source is used to provide hot water, select the type that provides the most gallons of hot water.\n        <br/>\n        \n        <br/>\n        "
        }
      }
    },
    "door": {
      "properties": {
        "uuid": {
          "type": "string",
          "example": "771c7d48-e9dc-448a-92a3-03a34e8f5f77",
          "enum": false,
          "description": "This is a universally unique ID for this item (UUID)."
        },
        "doorType": {
          "type": "string",
          "example": "Fiberglass",
          "enum": [
            "Steel, hollow",
            "Steel, hollow with storm",
            "Steel, insulated",
            "Steel, insulated with Storm",
            "Wood",
            "Wood with Storm",
            "Fiberglass",
            "Fiberglass with Storm",
            "1/2-Lite Steel, insulated",
            "1/2-Lite Steel, insulated with Storm",
            "1/2-Lite Wood",
            "1/2-Lite Wood with Storm",
            "1/2-Lite Fiberglass",
            "1/2-Lite Fiberglass with Storm"
          ],
          "description": "\n        Select the type of door construction used for each door.\n        <br/>\n        \n        <br/>\n        "
        },
        "doorUValue": {
          "type": "number",
          "example": 2.36,
          "maximum": 9,
          "minimum": 0.01,
          "enum": false,
          "description": "This field will be automatically calculated based on the data you entered in the input form. You may override this number with the actual door U-Value.<br><br>\n\n"
        },
        "doorUValueImproved": {
          "type": "number",
          "example": 0.89,
          "maximum": 9,
          "minimum": 0.01,
          "enum": false,
          "description": "This field will be automatically calculated based on the data you entered in the input form. You may override this number with the actual door U-Value.<br><br>\n\n"
        },
        "doorArea": {
          "type": "number",
          "example": 612.63,
          "maximum": 1000,
          "minimum": 0,
          "enum": false,
          "description": "This field will be automatically calculated based on the data you entered in the input form. You may override this number with the actual door sizes for the home.<br><br>\n\nFor doors with glazing area of greater than or equal to 50% of the rough frame opening, model the entire door as a window with area equal to the rough frame opening. Note that even full-light swinging doors are usually less than 50% glazing."
        },
        "doorAreaImproved": {
          "type": "number",
          "example": 273.31,
          "maximum": 1000,
          "minimum": 0,
          "enum": false,
          "description": "This field will be automatically calculated based on the data you entered in the input form. You may override this number with the actual door sizes for the home.<br><br>\n\nFor doors with glazing area of greater than or equal to 50% of the rough frame opening, model the entire door as a window with area equal to the rough frame opening. Note that even full-light swinging doors are usually less than 50% glazing."
        },
        "doorEnergyStar": {
          "type": "string",
          "example": "Yes",
          "enum": [
            "Yes",
            "No"
          ],
          "description": "\n        Select Yes if this door is ENERGY STAR Certified.\n        <br/>\n        \n        <br/>\n        "
        },
        "doorEnergyStarImproved": {
          "type": "string",
          "example": "No",
          "enum": [
            "Yes",
            "No"
          ],
          "description": "\n        Select Yes if this door is ENERGY STAR Certified.\n        <br/>\n        \n        <br/>\n        "
        }
      }
    },
    "freezer": {
      "properties": {
        "uuid": {
          "type": "string",
          "example": "92d8c366-ad89-4640-a3e3-d5d96623fe95",
          "enum": false,
          "description": "This is a universally unique ID for this item (UUID)."
        },
        "freezerUsage": {
          "type": "number",
          "example": 4663.58,
          "maximum": 10000,
          "minimum": 0,
          "enum": false,
          "description": "Enter the annual energy consumption for the freezer in kWh/yr. Search our knowledge base for \"Appliances Product Finder\" for more information.<br><br>\n\n<strong>Note:</strong><br>\nEdit this Base field in the Details section only if you're confident of the actual value that is entered. The modeling engine utilizes utility data and input form data to determine the \"effective\" values on the Base side.<br><br>\n\nEdit Improved fields in the Details section with the details of what you recommend be installed in the house. These values are only used if the item is Recommended. Default values are supplied by the modeling engine, but can be overridden.<br><br>"
        },
        "freezerUsageImproved": {
          "type": "number",
          "example": 5005.83,
          "maximum": 10000,
          "minimum": 0,
          "enum": false,
          "description": "Enter the annual energy consumption for the freezer in kWh/yr. Search our knowledge base for \"Appliances Product Finder\" for more information.<br><br>\n\n<strong>Note:</strong><br>\nEdit this Base field in the Details section only if you're confident of the actual value that is entered. The modeling engine utilizes utility data and input form data to determine the \"effective\" values on the Base side.<br><br>\n\nEdit Improved fields in the Details section with the details of what you recommend be installed in the house. These values are only used if the item is Recommended. Default values are supplied by the modeling engine, but can be overridden.<br><br>"
        },
        "freezerManufacturer": {
          "type": "string",
          "example": "Thermador",
          "enum": [
            "Amana",
            "Unknown",
            "Asko",
            "Bosch",
            "Fridgidaire",
            "GE",
            "Igloo",
            "LG",
            "Maytag",
            "Samsung",
            "Sears",
            "Sub-Zero",
            "Thermador",
            "Whirlpool",
            "Other"
          ],
          "description": "\n        Enter the Manufacturer of the Freezer.\n        <br/>\n        \n        <br/>\n        "
        },
        "freezerManufacturerImproved": {
          "type": "string",
          "example": "Thermador",
          "enum": [
            "Amana",
            "Unknown",
            "Asko",
            "Bosch",
            "Fridgidaire",
            "GE",
            "Igloo",
            "LG",
            "Maytag",
            "Samsung",
            "Sears",
            "Sub-Zero",
            "Thermador",
            "Whirlpool",
            "Other"
          ],
          "description": "\n        Enter the Manufacturer of the Freezer.\n        <br/>\n        \n        <br/>\n        "
        },
        "freezerModelYear": {
          "type": "string",
          "example": "1998",
          "maximum": 2030,
          "minimum": 1900,
          "enum": false,
          "description": "Enter the Model Year of the Freezer."
        },
        "freezerModelYearImproved": {
          "type": "string",
          "example": "1998",
          "maximum": 2030,
          "minimum": 1900,
          "enum": false,
          "description": "Enter the Model Year of the Freezer."
        },
        "freezerModel": {
          "type": "string",
          "example": "Some text value",
          "enum": false,
          "description": "Enter the Model number for the Freezer."
        },
        "freezerModelImproved": {
          "type": "string",
          "example": "Some text value",
          "enum": false,
          "description": "Enter the Model number for the Freezer."
        },
        "freezerName": {
          "type": "string",
          "example": "Some text value",
          "enum": false
        },
        "freezerEnergyStar": {
          "type": "string",
          "example": "Yes",
          "enum": [
            "Yes",
            "No"
          ],
          "description": "\n        If a Freezer is installed in the home, choose if it is an ENERGY STAR model.\n        <br/>\n        \n        <br/>\n        "
        },
        "freezerEnergyStarImproved": {
          "type": "string",
          "example": "No",
          "enum": [
            "Yes",
            "No"
          ],
          "description": "\n        If a Freezer is installed in the home, choose if it is an ENERGY STAR model.\n        <br/>\n        \n        <br/>\n        "
        }
      }
    },
    "hvac": {
      "properties": {
        "uuid": {
          "type": "string",
          "example": "0db0ecf0-fdc4-4681-926b-7ee436e223bc",
          "enum": false,
          "description": "This is a universally unique ID for this item (UUID)."
        },
        "hvacSystemName": {
          "type": "string",
          "example": "Some text value",
          "maxLength": 255,
          "enum": false,
          "description": "Give this system a name that you can use to easily differentiate it from the others like: Old Heat Pump or Basement Furnace."
        },
        "hvacSystemEquipmentType": {
          "type": "string",
          "example": "Electric Resistance",
          "enum": [
            "Boiler",
            "Furnace with standalone ducts",
            "Electric Resistance",
            "Direct Heater",
            "Stove or Insert",
            "Solar Thermal",
            "Central AC with standalone ducts",
            "Room AC",
            "Evaporative Cooler - Direct",
            "Evaporative Cooler - Ducted",
            "Ductless Heat Pump",
            "Central Heat Pump (shared ducts)",
            "Furnace / Central AC (shared ducts)"
          ],
          "description": "\n        Select which type of HVAC system you'd like to describe. This list shows every possible type of heating or cooling system (or combination thereof) that is available in our software. Pay attention to the “shared ducts” vs. “standalone ducts” component. Note: this is very similar to the “Both” option that was available in version 4.\n        <br/>\n        \n        <br/>\n        "
        },
        "hvacUpgradeAction": {
          "type": "string",
          "example": "Remove a system permanently",
          "enum": [
            "Replace with a newer model",
            "Keep an existing system as is",
            "Remove a system permanently",
            "Install a new non-existing system"
          ],
          "description": "\n        Choose an action that you plan to take for this HVAC system.<strong>Replace with a newer model:</strong><br>Replace the existing equipment with a new version of the same thing. Eg. replace a 78 AFUE furnace with a new 98 AFUE furnace<br><strong>Keep an existing system as is:</strong><br>Do nothing to a system or just change the percent of total load that that old system covers in the house.<br><strong>Remove a system permanently:</strong><br>Rip out an entire system and replace it with something completely new, like going from a direct heater and room AC to a central heat pump. In this instance you will have a system that is described on the base side, and the improved side will be blank. <br><strong>Install a new existing system:</strong><br>A brand new system that replaces the system that was removed when you chose: Remove a system permanently.\n        <br/>\n        \n        <br/>\n        "
        },
        "hvacHeatingEnergySource": {
          "type": "string",
          "example": "Pellets",
          "enum": [
            "None",
            "Electricity",
            "Natural Gas",
            "Propane",
            "Fuel Oil",
            "Pellets",
            "Wood",
            "Solar",
            "Don't Know"
          ],
          "description": "\n        This is the primary fuel source. It is used to set prices and energy content.\n        <br/>\n        \n        <br/>\n        "
        },
        "hvacHeatingEnergySourceImproved": {
          "type": "string",
          "example": "Natural Gas",
          "enum": [
            "None",
            "Electricity",
            "Natural Gas",
            "Propane",
            "Fuel Oil",
            "Pellets",
            "Wood",
            "Solar",
            "Don't Know"
          ],
          "description": "\n        This is the primary fuel source. It is used to set prices and energy content.\n        <br/>\n        \n        <br/>\n        "
        },
        "hvacPercentOfTotalHeatingLoad": {
          "type": "number",
          "example": 34,
          "maximum": 100,
          "minimum": 0,
          "enum": false,
          "description": "Enter the proportion of the total load for heating or cooling that this system represents. The combined heating load percentage for all heating systems specified must add up to 100%."
        },
        "hvacPercentOfTotalHeatingLoadImproved": {
          "type": "number",
          "example": 15,
          "maximum": 100,
          "minimum": 0,
          "enum": false,
          "description": "Enter the proportion of the total load for heating or cooling that this system represents. The combined heating load percentage for all heating systems specified must add up to 100%."
        },
        "hvacHeatingCapacity": {
          "type": "integer",
          "example": 48000,
          "maximum": 1000000,
          "minimum": 1000,
          "enum": false,
          "description": "Enter the output capacity of the heating equipment in (Btu/hr). <br><br><strong>NOTE:</strong> This has changed since v3 of Snugg Pro. v4 and later requires the number be in Btu/hr, not kBtu/hr. All v3 jobs that were migrated to v4 have been converted to the proper number by multiplying it by 1000."
        },
        "hvacHeatingCapacityImproved": {
          "type": "integer",
          "example": 48000,
          "maximum": 1000000,
          "minimum": 1000,
          "enum": false,
          "description": "Enter the output capacity of the heating equipment in (Btu/hr). <br><br><strong>NOTE:</strong> This has changed since v3 of Snugg Pro. v4 and later requires the number be in Btu/hr, not kBtu/hr. All v3 jobs that were migrated to v4 have been converted to the proper number by multiplying it by 1000."
        },
        "hvacDuctLocation": {
          "type": "string",
          "example": "Intentionally Conditioned Space",
          "enum": [
            "Intentionally Conditioned Space",
            "Attic (unconditioned)",
            "Basement (unconditioned)",
            "Crawlspace (unconditioned)",
            "50/50 Attic - Basement (both unconditioned)",
            "50/50 Attic (unconditioned) - Conditioned Space",
            "50/50 Attic - Crawlspace (both unconditioned)",
            "50/50 Basement (unconditioned) - Conditioned Space",
            "50/50 Crawlspace (unconditioned) - Conditioned Space",
            "70/30 Conditioned Space - Garage (unconditioned)"
          ],
          "description": "\n        Select the location of the duct work for this system.\n        <br/>\n        \n        <br/>\n        "
        },
        "hvacDuctLocationImproved": {
          "type": "string",
          "example": "50/50 Crawlspace (unconditioned) - Conditioned Space",
          "enum": [
            "Intentionally Conditioned Space",
            "Attic (unconditioned)",
            "Basement (unconditioned)",
            "Crawlspace (unconditioned)",
            "50/50 Attic - Basement (both unconditioned)",
            "50/50 Attic (unconditioned) - Conditioned Space",
            "50/50 Attic - Crawlspace (both unconditioned)",
            "50/50 Basement (unconditioned) - Conditioned Space",
            "50/50 Crawlspace (unconditioned) - Conditioned Space",
            "70/30 Conditioned Space - Garage (unconditioned)"
          ],
          "description": "\n        Select the location of the duct work for this system.\n        <br/>\n        \n        <br/>\n        "
        },
        "hvacDuctInsulation": {
          "type": "string",
          "example": "Duct Board 1.5\"",
          "enum": [
            "No Insulation",
            "Duct Board 1\"",
            "Duct Board 1.5\"",
            "Duct Board 2\"",
            "Fiberglass 1.25\"",
            "Fiberglass 2\"",
            "Fiberglass 2.5\"",
            "Reflective bubble wrap",
            "Measured (R Value)"
          ],
          "description": "\n        Select the type of insulation installed over the duct work for this system. Note: If ducts are covered wholly or partially by incidental insulation present in the cavity in which they are installed, then select the insulation type that most closely matches the average R-value of the insulation. If you know the actual duct insulation R-value, choose Measured (R-Value) and enter the data in the field below.\n        <br/>\n        \n        <br/>\n        "
        },
        "hvacDuctInsulationImproved": {
          "type": "string",
          "example": "Fiberglass 2\"",
          "enum": [
            "No Insulation",
            "Duct Board 1\"",
            "Duct Board 1.5\"",
            "Duct Board 2\"",
            "Fiberglass 1.25\"",
            "Fiberglass 2\"",
            "Fiberglass 2.5\"",
            "Reflective bubble wrap",
            "Measured (R Value)"
          ],
          "description": "\n        Select the type of insulation installed over the duct work for this system. Note: If ducts are covered wholly or partially by incidental insulation present in the cavity in which they are installed, then select the insulation type that most closely matches the average R-value of the insulation. If you know the actual duct insulation R-value, choose Measured (R-Value) and enter the data in the field below.\n        <br/>\n        \n        <br/>\n        "
        },
        "hvacDuctLeakageValue": {
          "type": "number",
          "example": 3365.66,
          "maximum": 9999,
          "minimum": 0,
          "enum": false,
          "description": "If you perform a duct blaster test, please enter the tested leakage to outside at 25 Pa per RESNET Standard Section 803.7."
        },
        "hvacDuctLeakageValueImproved": {
          "type": "number",
          "example": 6017.81,
          "maximum": 9999,
          "minimum": 0,
          "enum": false,
          "description": "If you perform a duct blaster test, please enter the tested leakage to outside at 25 Pa per RESNET Standard Section 803.7."
        },
        "hvacDuctEfficiency": {
          "type": "number",
          "example": 15,
          "enum": false,
          "description": "This is the overall delivery system efficiency for this distribution system. It is calculated based on the above duct leakage, location, and insulation values and is not editable. If you have chosen Intentionally Conditioned Space for the Duct Location, then the Duct Efficiency will always be 100% as the lost energy from the ducts is only lost into the building envelope and not to the outside.<br><br>\n\nAlso, if you have set the % of Total Load for this heating or cooling system to 0% (necessary when creating a brand new heating or cooling system or removing one), you will see the Duct Efficiency at 100%, since there is zero loss on a system that doesn't exist. "
        },
        "hvacDuctEfficiencyImproved": {
          "type": "number",
          "example": 67,
          "enum": false,
          "description": "This is the overall delivery system efficiency for this distribution system. It is calculated based on the above duct leakage, location, and insulation values and is not editable. If you have chosen Intentionally Conditioned Space for the Duct Location, then the Duct Efficiency will always be 100% as the lost energy from the ducts is only lost into the building envelope and not to the outside.<br><br>\n\nAlso, if you have set the % of Total Load for this heating or cooling system to 0% (necessary when creating a brand new heating or cooling system or removing one), you will see the Duct Efficiency at 100%, since there is zero loss on a system that doesn't exist. "
        },
        "hvacPercentOfTotalCoolingLoad": {
          "type": "number",
          "example": 0,
          "maximum": 100,
          "minimum": 0,
          "enum": false,
          "description": "Enter the proportion of the total load for heating or cooling that this system represents. The combined cooling load percentage for all cooling systems specified DOES NOT need to add up to 100%. If you set the cooling load to 70% and don't add any other cooling system, then the model assumes you're not conditioning 30% of the home's cooling load."
        },
        "hvacPercentOfTotalCoolingLoadImproved": {
          "type": "number",
          "example": 89,
          "maximum": 100,
          "minimum": 0,
          "enum": false,
          "description": "Enter the proportion of the total load for heating or cooling that this system represents. The combined cooling load percentage for all cooling systems specified DOES NOT need to add up to 100%. If you set the cooling load to 70% and don't add any other cooling system, then the model assumes you're not conditioning 30% of the home's cooling load."
        },
        "hvacCoolingCapacity": {
          "type": "integer",
          "example": 24000,
          "maximum": 1000000,
          "minimum": 1000,
          "enum": false,
          "description": "Enter the output capacity of the cooling equipment in (Btu/hr). <br><br>Reminder: cooling systems are often rated in tons. 1 ton = 12,000 Btu/hr.<br><br><strong>NOTE:</strong> This has changed since v3 of Snugg Pro. v4 and later requires the number be in Btu/hr, not kBtu/hr. All v3 jobs that were migrated to v4 have been converted to the proper number by multiplying it by 1000."
        },
        "hvacCoolingCapacityImproved": {
          "type": "integer",
          "example": 24000,
          "maximum": 1000000,
          "minimum": 1000,
          "enum": false,
          "description": "Enter the output capacity of the cooling equipment in (Btu/hr). <br><br>Reminder: cooling systems are often rated in tons. 1 ton = 12,000 Btu/hr.<br><br><strong>NOTE:</strong> This has changed since v3 of Snugg Pro. v4 and later requires the number be in Btu/hr, not kBtu/hr. All v3 jobs that were migrated to v4 have been converted to the proper number by multiplying it by 1000."
        },
        "hvacCoolingSystemEfficiency": {
          "type": "number",
          "example": 72.03,
          "maximum": 100,
          "minimum": 1,
          "enum": false,
          "description": "The Seasonal Energy Efficiency Ratio (SEER) is the average annual cooling efficiency of an air-conditioning or heat pump system as a weighted average of EERs over a range of rate outside air conditions following a standard test method. It includes energy of auxiliary systems such as the indoor and outdoor fans. Units: Btu/Wh. <br><br>\n\nThe Energy Efficiency Ratio (EER) is the measurement of the cooling capacity for a unit (in Btu/hour) divided by electrical energy it uses (in watts) at a specific temperature of 95ºF. Units: Btu/Wh. EER is only used for Room AC units.<br><br>\n\n<strong>Note:</strong><br>\nEdit Base fields in the Details section only if you're confident of the actual value that is entered. The modeling engine utilizes utility data and input form data to determine the \"effective\" values on the Base side.<br><br>\n\nEdit Improved fields in the Details section with the details of what you recommend be installed in the house. These values are only used if the item is Recommended. Default values are supplied by the modeling engine, but can be overridden.<br><br>"
        },
        "hvacCoolingSystemEfficiencyImproved": {
          "type": "number",
          "example": 16.4,
          "maximum": 100,
          "minimum": 1,
          "enum": false,
          "description": "The Seasonal Energy Efficiency Ratio (SEER) is the average annual cooling efficiency of an air-conditioning or heat pump system as a weighted average of EERs over a range of rate outside air conditions following a standard test method. It includes energy of auxiliary systems such as the indoor and outdoor fans. Units: Btu/Wh. <br><br>\n\nThe Energy Efficiency Ratio (EER) is the measurement of the cooling capacity for a unit (in Btu/hour) divided by electrical energy it uses (in watts) at a specific temperature of 95ºF. Units: Btu/Wh. EER is only used for Room AC units.<br><br>\n\n<strong>Note:</strong><br>\nEdit Base fields in the Details section only if you're confident of the actual value that is entered. The modeling engine utilizes utility data and input form data to determine the \"effective\" values on the Base side.<br><br>\n\nEdit Improved fields in the Details section with the details of what you recommend be installed in the house. These values are only used if the item is Recommended. Default values are supplied by the modeling engine, but can be overridden.<br><br>"
        },
        "hvacHeatingSystemEfficiency": {
          "type": "number",
          "example": 78,
          "maximum": 500,
          "minimum": 0,
          "enum": false,
          "description": "Annual Fuel Utilization Efficiency (AFUE) is a percentage representing the ratio of heat energy units provided to the total energy value of fuel consumed in identical units. It is most commonly used for combustion based heating as well as electric resistance heating.<br><br>\n\nHeating Seasonal Performance Factor (HSPF) is the ratio of Btus of heat energy provided to the watt-hours of electricity consumed. It is most commonly used for air and ground source heat pumps.<br><br>\n\n<strong>Note:</strong><br>\nEdit Base fields in the Details section only if you're confident of the actual value that is entered. The modeling engine utilizes utility data and input form data to determine the \"effective\" values on the Base side.<br><br>\n\nEdit Improved fields in the Details section with the details of what you recommend be installed in the house. These values are only used if the item is Recommended. Default values are supplied by the modeling engine, but can be overridden.<br><br>"
        },
        "hvacHeatingSystemEfficiencyImproved": {
          "type": "number",
          "example": 78,
          "maximum": 500,
          "minimum": 0,
          "enum": false,
          "description": "Annual Fuel Utilization Efficiency (AFUE) is a percentage representing the ratio of heat energy units provided to the total energy value of fuel consumed in identical units. It is most commonly used for combustion based heating as well as electric resistance heating.<br><br>\n\nHeating Seasonal Performance Factor (HSPF) is the ratio of Btus of heat energy provided to the watt-hours of electricity consumed. It is most commonly used for air and ground source heat pumps.<br><br>\n\n<strong>Note:</strong><br>\nEdit Base fields in the Details section only if you're confident of the actual value that is entered. The modeling engine utilizes utility data and input form data to determine the \"effective\" values on the Base side.<br><br>\n\nEdit Improved fields in the Details section with the details of what you recommend be installed in the house. These values are only used if the item is Recommended. Default values are supplied by the modeling engine, but can be overridden.<br><br>"
        },
        "hvacDuctLeakage": {
          "type": "string",
          "example": "15% - Somewhat leaky",
          "enum": [
            "30% - Very leaky",
            "15% - Somewhat leaky",
            "6% - Well sealed",
            "3% - Very tight",
            "Measured (CFM25)"
          ],
          "description": "\n        Choose the estimated leakage to the outside through the duct system as a percentage of the total air handler flow. If you actually performed a duct blaster test, choose Measured (CFM25) and enter a value in the field below.\n        <br/>\n        \n        <br/>\n        "
        },
        "hvacDuctLeakageImproved": {
          "type": "string",
          "example": "6% - Well sealed",
          "enum": [
            "30% - Very leaky",
            "15% - Somewhat leaky",
            "6% - Well sealed",
            "3% - Very tight",
            "Measured (CFM25)"
          ],
          "description": "\n        Choose the estimated leakage to the outside through the duct system as a percentage of the total air handler flow. If you actually performed a duct blaster test, choose Measured (CFM25) and enter a value in the field below.\n        <br/>\n        \n        <br/>\n        "
        },
        "hvacCoolingSystemManufacturer": {
          "type": "string",
          "example": "Fridgidaire",
          "enum": [
            "Unknown",
            "AirEase",
            "Amana",
            "American Standard",
            "Bosch",
            "Bryant",
            "Carrier",
            "Coleman",
            "Comfort Maker",
            "Coolerado",
            "Daikin",
            "Day & Night",
            "Fridgidaire",
            "Fujitsu",
            "General Electric",
            "Goodman",
            "Janitrol",
            "Lennox",
            "LG",
            "Luxaire",
            "Mitsubishi",
            "Panasonic",
            "Payne",
            "Peerless",
            "Rheem",
            "RUUD",
            "Samsung",
            "Sears Kenmore",
            "Tappan",
            "Trane",
            "Utica",
            "York",
            "Other"
          ],
          "description": "\n        Enter the Manufacturer of the Cooling Equipment.\n        <br/>\n        \n        <br/>\n        "
        },
        "hvacCoolingSystemManufacturerImproved": {
          "type": "string",
          "example": "Fridgidaire",
          "enum": [
            "Unknown",
            "AirEase",
            "Amana",
            "American Standard",
            "Bosch",
            "Bryant",
            "Carrier",
            "Coleman",
            "Comfort Maker",
            "Coolerado",
            "Daikin",
            "Day & Night",
            "Fridgidaire",
            "Fujitsu",
            "General Electric",
            "Goodman",
            "Janitrol",
            "Lennox",
            "LG",
            "Luxaire",
            "Mitsubishi",
            "Panasonic",
            "Payne",
            "Peerless",
            "Rheem",
            "RUUD",
            "Samsung",
            "Sears Kenmore",
            "Tappan",
            "Trane",
            "Utica",
            "York",
            "Other"
          ],
          "description": "\n        Enter the Manufacturer of the Cooling Equipment.\n        <br/>\n        \n        <br/>\n        "
        },
        "hvacCoolingSystemModel": {
          "type": "string",
          "example": "Some text value",
          "maxLength": 255,
          "enum": false,
          "description": "Enter the Model # of the Cooling Equipment.<br><br>\n\n<strong>Pro-tip</strong>: Always capture an image of the nameplate on the existing equipment and store it in the photos section for future reference. "
        },
        "hvacCoolingSystemModelImproved": {
          "type": "string",
          "example": "Some text value",
          "maxLength": 255,
          "enum": false,
          "description": "Enter the Model # of the Cooling Equipment.<br><br>\n\n<strong>Pro-tip</strong>: Always capture an image of the nameplate on the existing equipment and store it in the photos section for future reference. "
        },
        "hvacCoolingSystemModelYear": {
          "type": "string",
          "example": "1995",
          "maximum": 2030,
          "minimum": 1900,
          "enum": false,
          "description": "Enter the Year the Cooling Equipment was built."
        },
        "hvacCoolingSystemModelYearImproved": {
          "type": "string",
          "example": "1995",
          "maximum": 2030,
          "minimum": 1900,
          "enum": false,
          "description": "Enter the Year the Cooling Equipment was built."
        },
        "hvacHeatingSystemManufacturer": {
          "type": "string",
          "example": "RUUD",
          "enum": [
            "Unknown",
            "AirEase",
            "Amana",
            "American Standard",
            "Bosch",
            "Bryant",
            "Carrier",
            "Coleman",
            "Comfort Master",
            "Daikin",
            "Day & Night",
            "Fujitsu",
            "General Electric",
            "Goodman",
            "Janitrol",
            "Lennox",
            "LG",
            "Luxaire",
            "Mitsubishi",
            "Payne",
            "Panasonic",
            "Peerless",
            "Rheem",
            "RUUD",
            "Samsung",
            "Sears Kenmore",
            "Tappan",
            "Trane",
            "Utica",
            "York",
            "Other"
          ],
          "description": "\n        Enter the Manufacturer of the Heating Equipment.\n        <br/>\n        \n        <br/>\n        "
        },
        "hvacHeatingSystemManufacturerImproved": {
          "type": "string",
          "example": "Amana",
          "enum": [
            "Unknown",
            "AirEase",
            "Amana",
            "American Standard",
            "Bosch",
            "Bryant",
            "Carrier",
            "Coleman",
            "Comfort Master",
            "Daikin",
            "Day & Night",
            "Fujitsu",
            "General Electric",
            "Goodman",
            "Janitrol",
            "Lennox",
            "LG",
            "Luxaire",
            "Mitsubishi",
            "Payne",
            "Panasonic",
            "Peerless",
            "Rheem",
            "RUUD",
            "Samsung",
            "Sears Kenmore",
            "Tappan",
            "Trane",
            "Utica",
            "York",
            "Other"
          ],
          "description": "\n        Enter the Manufacturer of the Heating Equipment.\n        <br/>\n        \n        <br/>\n        "
        },
        "hvacHeatingSystemModelYear": {
          "type": "string",
          "example": "1998",
          "maximum": 2030,
          "minimum": 1900,
          "enum": false,
          "description": "Enter the Year the Heating Equipment was built."
        },
        "hvacHeatingSystemModelYearImproved": {
          "type": "string",
          "example": "1998",
          "maximum": 2030,
          "minimum": 1900,
          "enum": false,
          "description": "Enter the Year the Heating Equipment was built."
        },
        "hvacHeatingSystemModel": {
          "type": "string",
          "example": "Some text value",
          "maxLength": 255,
          "enum": false,
          "description": "Enter the Model # of the Heating Equipment.<br><br>\n\n<strong>Pro-tip</strong>: Always capture an image of the nameplate on the existing equipment and store it in the photos section for future reference. "
        },
        "hvacHeatingSystemModelImproved": {
          "type": "string",
          "example": "Some text value",
          "maxLength": 255,
          "enum": false,
          "description": "Enter the Model # of the Heating Equipment.<br><br>\n\n<strong>Pro-tip</strong>: Always capture an image of the nameplate on the existing equipment and store it in the photos section for future reference. "
        },
        "hvacDuctInsulationValue": {
          "type": "number",
          "example": 3.12,
          "maximum": 100,
          "minimum": 0,
          "enum": false,
          "description": "If you know the actual R-value of the duct insulation, you may enter it here."
        },
        "hvacDuctInsulationValueImproved": {
          "type": "number",
          "example": 10.41,
          "maximum": 100,
          "minimum": 0,
          "enum": false,
          "description": "If you know the actual R-value of the duct insulation, you may enter it here."
        },
        "hvacHeatPumpInverter": {
          "type": "string",
          "example": "No",
          "enum": [
            "Yes",
            "No"
          ],
          "description": "\n        Select Yes if this heat pump has a variable speed or Inverter driven compressor. These extremely high efficiency units perform to much lower outside air temperatures than single speed units and require much less or no electric resistance backup heat.\n        <br/>\n        \n        <br/>\n        "
        },
        "hvacHeatPumpInverterImproved": {
          "type": "string",
          "example": "No",
          "enum": [
            "Yes",
            "No"
          ],
          "description": "\n        Select Yes if this heat pump has a variable speed or Inverter driven compressor. These extremely high efficiency units perform to much lower outside air temperatures than single speed units and require much less or no electric resistance backup heat.\n        <br/>\n        \n        <br/>\n        "
        }
      }
    },
    "oven": {
      "properties": {
        "uuid": {
          "type": "string",
          "example": "ec19cc69-3a09-420f-b3f0-8246beb35961",
          "enum": false,
          "description": "This is a universally unique ID for this item (UUID)."
        },
        "ovenFuelType": {
          "type": "string",
          "example": "Propane",
          "enum": [
            "Natural Gas",
            "Electricity",
            "Propane",
            "None",
            "Don't Know"
          ],
          "description": "\n        Select the type of energy source used by the oven. If the home has more than oven, select the one that is used the most. If the range and oven are dual fuel (i.e., have both a fuel heating source and an electricity heating source) select the type that is used to cook most often.\n        <br/>\n        \n        <br/>\n        "
        },
        "ovenFuelTypeImproved": {
          "type": "string",
          "example": "Natural Gas",
          "enum": [
            "Natural Gas",
            "Electricity",
            "Propane",
            "None",
            "Don't Know"
          ],
          "description": "\n        Select the type of energy source used by the oven. If the home has more than oven, select the one that is used the most. If the range and oven are dual fuel (i.e., have both a fuel heating source and an electricity heating source) select the type that is used to cook most often.\n        <br/>\n        \n        <br/>\n        "
        }
      }
    },
    "pv": {
      "properties": {
        "uuid": {
          "type": "string",
          "example": "9fd03f11-a03a-4f7f-9193-466b346e2f7a",
          "enum": false,
          "description": "This is a universally unique ID for this item (UUID)."
        },
        "pv": {
          "type": "string",
          "example": "No",
          "enum": [
            "Yes",
            "No"
          ],
          "description": "\n        Does the home have a Solar PV System?\n        <br/>\n        \n        <br/>\n        "
        },
        "pvImproved": {
          "type": "string",
          "example": "No",
          "enum": [
            "Yes",
            "No"
          ],
          "description": "\n        Does the home have a Solar PV System?\n        <br/>\n        \n        <br/>\n        "
        },
        "pvArraySize": {
          "type": "number",
          "example": 3.52,
          "maximum": 999,
          "minimum": 0.01,
          "enum": false,
          "description": "PV system size in kW."
        },
        "pvArraySizeImproved": {
          "type": "number",
          "example": 3.52,
          "maximum": 999,
          "minimum": 0.01,
          "enum": false,
          "description": "PV system size in kW."
        },
        "pvAnnualProduction": {
          "type": "integer",
          "example": 77053,
          "enum": false,
          "description": "PV system annual production in kWh."
        },
        "pvAnnualProductionImproved": {
          "type": "integer",
          "example": 4594,
          "enum": false,
          "description": "PV system annual production in kWh."
        },
        "pvArraySlope": {
          "type": "integer",
          "example": 32,
          "maximum": 90,
          "minimum": 30,
          "enum": false,
          "description": "Slope of the collector surface. Warning: 0-30 degrees is outside the range of analysis."
        },
        "pvArraySlopeImproved": {
          "type": "integer",
          "example": 32,
          "maximum": 90,
          "minimum": 30,
          "enum": false,
          "description": "Slope of the collector surface. Warning: 0-30 degrees is outside the range of analysis."
        },
        "pvArrayOrientation": {
          "type": "integer",
          "example": 183,
          "maximum": 360,
          "minimum": 0,
          "enum": false,
          "description": "Orientation from North. South is 180 degrees. Facing East of South is less than 180."
        },
        "pvArrayOrientationImproved": {
          "type": "integer",
          "example": 183,
          "maximum": 360,
          "minimum": 0,
          "enum": false,
          "description": "Orientation from North. South is 180 degrees. Facing East of South is less than 180."
        },
        "pvModuleYear": {
          "type": "string",
          "maximum": 2030,
          "minimum": 1950,
          "enum": false,
          "description": "Year the PV modules were manufactured. Taken into condieration for derating of system over time."
        }
      }
    },
    "range": {
      "properties": {
        "uuid": {
          "type": "string",
          "example": "8c6dfafa-4a4a-4a25-9a34-65314b4941bf",
          "enum": false,
          "description": "This is a universally unique ID for this item (UUID)."
        },
        "rangeFuelType": {
          "type": "string",
          "example": "Electricity",
          "enum": [
            "Natural Gas",
            "Electricity",
            "Propane",
            "None",
            "Don't Know"
          ],
          "description": "\n        Select the type of energy source used by the range and oven in the home. If the home has more than one range and oven, select the one that is used the most. If the range and oven are dual fuel (i.e., have both a fuel heating source and an electricity heating source) select the type that is used to cook most often.\n        <br/>\n        \n        <br/>\n        "
        },
        "rangeFuelTypeImproved": {
          "type": "string",
          "example": "None",
          "enum": [
            "Natural Gas",
            "Electricity",
            "Propane",
            "None",
            "Don't Know"
          ],
          "description": "\n        Select the type of energy source used by the range and oven in the home. If the home has more than one range and oven, select the one that is used the most. If the range and oven are dual fuel (i.e., have both a fuel heating source and an electricity heating source) select the type that is used to cook most often.\n        <br/>\n        \n        <br/>\n        "
        }
      }
    },
    "refrigerator": {
      "properties": {
        "uuid": {
          "type": "string",
          "example": "48972ec1-37e9-4d7a-9852-424201465b4e",
          "enum": false,
          "description": "This is a universally unique ID for this item (UUID)."
        },
        "refrigeratorAge": {
          "type": "string",
          "example": "31-34",
          "enum": [
            "0-14",
            "15-21",
            "22-24",
            "25-26",
            "27-30",
            "31-34",
            "35-42",
            "42+",
            "Don't Know"
          ],
          "description": "\n        Select the age range of this refrigerator.\n        <br/>\n        \n        <br/>\n        "
        },
        "refrigeratorSize": {
          "type": "string",
          "example": "13-15",
          "enum": [
            "1-5",
            "6-12",
            "13-15",
            "16-18",
            "19-21",
            "22+",
            "Don't Know"
          ],
          "description": "\n        Select the size range of this refrigerator.\n        <br/>\n        \n        <br/>\n        "
        },
        "refrigeratorName": {
          "type": "string",
          "example": "Some text value",
          "maxLength": 30,
          "enum": false,
          "description": "Select the age range and the size range in cubic feet of the refrigerator. For HPXML purposes, always enter the house's \"primary\" refrigerator first."
        },
        "refrigeratorUsage": {
          "type": "number",
          "example": 1731.58,
          "maximum": 10000,
          "minimum": 0,
          "enum": false,
          "description": "Enter the annual energy consumption for the refrigerator in kWh/yr. Search our knowledge base for \"Appliances Product Finder\" for more information. <br><br>\n\n<strong>Note:</strong><br>\nEdit this Base field in the Details section only if you're confident of the actual value that is entered. The modeling engine utilizes utility data and input form data to determine the \"effective\" values on the Base side.<br><br>\n\nEdit Improved fields in the Details section with the details of what you recommend be installed in the house. These values are only used if the item is Recommended. Default values are supplied by the modeling engine, but can be overridden.<br><br>"
        },
        "refrigeratorUsageImproved": {
          "type": "number",
          "example": 1764.47,
          "maximum": 10000,
          "minimum": 0,
          "enum": false,
          "description": "Enter the annual energy consumption for the refrigerator in kWh/yr. Search our knowledge base for \"Appliances Product Finder\" for more information. <br><br>\n\n<strong>Note:</strong><br>\nEdit this Base field in the Details section only if you're confident of the actual value that is entered. The modeling engine utilizes utility data and input form data to determine the \"effective\" values on the Base side.<br><br>\n\nEdit Improved fields in the Details section with the details of what you recommend be installed in the house. These values are only used if the item is Recommended. Default values are supplied by the modeling engine, but can be overridden.<br><br>"
        },
        "refrigeratorManufacturer": {
          "type": "string",
          "example": "Fridgidaire",
          "enum": [
            "Unknown",
            "Amana",
            "Asko",
            "Bosch",
            "Fridgidaire",
            "GE",
            "Hotpoint",
            "KitchenAid",
            "LG",
            "Maytag",
            "Samsung",
            "Sears",
            "Sub-Zero",
            "Thermador",
            "Whirlpool",
            "Fisher & Paykel",
            "Ikea",
            "Liebherr",
            "Other"
          ],
          "description": "\n        Enter the Manufacturer of the Refrigerator.\n        <br/>\n        \n        <br/>\n        "
        },
        "refrigeratorManufacturerImproved": {
          "type": "string",
          "example": "Hotpoint",
          "enum": [
            "Unknown",
            "Amana",
            "Asko",
            "Bosch",
            "Fridgidaire",
            "GE",
            "Hotpoint",
            "KitchenAid",
            "LG",
            "Maytag",
            "Samsung",
            "Sears",
            "Sub-Zero",
            "Thermador",
            "Whirlpool",
            "Fisher & Paykel",
            "Ikea",
            "Liebherr",
            "Other"
          ],
          "description": "\n        Enter the Manufacturer of the Refrigerator.\n        <br/>\n        \n        <br/>\n        "
        },
        "refrigeratorModel": {
          "type": "string",
          "example": "Some text value",
          "maxLength": 255,
          "enum": false,
          "description": "Enter the Model number for the Refrigerator."
        },
        "refrigeratorModelImproved": {
          "type": "string",
          "example": "Some text value",
          "maxLength": 255,
          "enum": false,
          "description": "Enter the Model number for the Refrigerator."
        },
        "refrigeratorEnergyStar": {
          "type": "string",
          "example": "No",
          "enum": [
            "Yes",
            "No"
          ],
          "description": "\n        If a Refrigerator is installed in the home, choose if it is an ENERGY STAR model.\n        <br/>\n        \n        <br/>\n        "
        },
        "refrigeratorEnergyStarImproved": {
          "type": "string",
          "example": "Yes",
          "enum": [
            "Yes",
            "No"
          ],
          "description": "\n        If a Refrigerator is installed in the home, choose if it is an ENERGY STAR model.\n        <br/>\n        \n        <br/>\n        "
        },
        "refrigeratorModelYear": {
          "type": "string",
          "maximum": 2030,
          "minimum": 1900,
          "enum": false,
          "description": "Enter the Model Year of the Refrigerator."
        },
        "refrigeratorModelYearImproved": {
          "type": "string",
          "maximum": 2030,
          "minimum": 1900,
          "enum": false,
          "description": "Enter the Model Year of the Refrigerator."
        }
      }
    },
    "vault": {
      "properties": {
        "uuid": {
          "type": "string",
          "example": "c1643440-c906-4d44-ba0c-ba59c2a58f4a",
          "enum": false,
          "description": "This is a universally unique ID for this item (UUID)."
        },
        "vaultModeledVaultArea": {
          "type": "number",
          "example": 395815.31,
          "maximum": 1000000,
          "minimum": 0,
          "enum": false,
          "description": "This field will be automatically calculated based on the data you entered in the input form for Conditioned Area and Number of Stories. This is the actual surface area of the vaulted ceiling. It includes a default roof pitch of 5/12. When you override this number, be sure to include the complete sqft of the vault that's covering conditioned space.<br><br>\n\nThis field designates the interior surface area of the vaulted ceiling. On the improved side, this is the new total sqft of the vaulted ceiling. Increase this number if you're switching the attic from unconditioned to a conditioned space.<br><br>\n\nFor instance, if the original house had 1000 sqft of attic space and you converted it to a fully conditioned attic by spray foaming the roof deck and rafters, then set the base side to 1000 sqft and the improved side to 0. Then create a vaulted ceiling that is 0 on the base side and 1118 sqft on the improved side (adding 118 sqft for a 6/12 roof pitch). "
        },
        "vaultModeledVaultAreaImproved": {
          "type": "number",
          "example": 797910.35,
          "maximum": 1000000,
          "minimum": 0,
          "enum": false,
          "description": "This field will be automatically calculated based on the data you entered in the input form for Conditioned Area and Number of Stories. This is the actual surface area of the vaulted ceiling. It includes a default roof pitch of 5/12. When you override this number, be sure to include the complete sqft of the vault that's covering conditioned space.<br><br>\n\nThis field designates the interior surface area of the vaulted ceiling. On the improved side, this is the new total sqft of the vaulted ceiling. Increase this number if you're switching the attic from unconditioned to a conditioned space.<br><br>\n\nFor instance, if the original house had 1000 sqft of attic space and you converted it to a fully conditioned attic by spray foaming the roof deck and rafters, then set the base side to 1000 sqft and the improved side to 0. Then create a vaulted ceiling that is 0 on the base side and 1118 sqft on the improved side (adding 118 sqft for a 6/12 roof pitch). "
        },
        "vaultCavityInsulation": {
          "type": "number",
          "example": 96.5,
          "maximum": 100,
          "minimum": 0,
          "enum": false,
          "description": "Enter the total R-value of insulation installed (BASE) or to be installed (IMPROVED) in this Vaulted Ceiling.<br><br>\n\n<strong>Note:</strong><br>\nEdit Base fields in the Details section only if you're confident of the actual value that is entered. The modeling engine utilizes utility data and input form data to determine the \"effective\" values on the Base side.<br><br>\n\nEdit Improved fields in the Details section with the details of what you recommend be installed in the house. These values are only used if the item is Recommended. Default values are supplied by the modeling engine, but can be overridden.<br><br>"
        },
        "vaultCavityInsulationImproved": {
          "type": "number",
          "example": 30.01,
          "maximum": 100,
          "minimum": 0,
          "enum": false,
          "description": "Enter the total R-value of insulation installed (BASE) or to be installed (IMPROVED) in this Vaulted Ceiling.<br><br>\n\n<strong>Note:</strong><br>\nEdit Base fields in the Details section only if you're confident of the actual value that is entered. The modeling engine utilizes utility data and input form data to determine the \"effective\" values on the Base side.<br><br>\n\nEdit Improved fields in the Details section with the details of what you recommend be installed in the house. These values are only used if the item is Recommended. Default values are supplied by the modeling engine, but can be overridden.<br><br>"
        },
        "vaultContinuousInsulation": {
          "type": "number",
          "example": 25.99,
          "maximum": 100,
          "minimum": 0,
          "enum": false,
          "description": "Enter the total R-value of continuous insulation installed or to be installed in this Vaulted Ceiling. Continuous insulation is any insulation like spray foam or rigid foam that is continuous and consistent in R-value across studs, joists, or any framing member.<br><br>\n\n<strong>Note:</strong><br>\nEdit Base fields in the Details section only if you're confident of the actual value that is entered. The modeling engine utilizes utility data and input form data to determine the \"effective\" values on the Base side.<br><br>\n\nEdit Improved fields in the Details section with the details of what you recommend be installed in the house. These values are only used if the item is Recommended. Default values are supplied by the modeling engine, but can be overridden.<br><br>\n\n"
        },
        "vaultContinuousInsulationImproved": {
          "type": "number",
          "example": 2.35,
          "maximum": 100,
          "minimum": 0,
          "enum": false,
          "description": "Enter the total R-value of continuous insulation installed or to be installed in this Vaulted Ceiling. Continuous insulation is any insulation like spray foam or rigid foam that is continuous and consistent in R-value across studs, joists, or any framing member.<br><br>\n\n<strong>Note:</strong><br>\nEdit Base fields in the Details section only if you're confident of the actual value that is entered. The modeling engine utilizes utility data and input form data to determine the \"effective\" values on the Base side.<br><br>\n\nEdit Improved fields in the Details section with the details of what you recommend be installed in the house. These values are only used if the item is Recommended. Default values are supplied by the modeling engine, but can be overridden.<br><br>\n\n"
        },
        "vault": {
          "type": "string",
          "example": "No",
          "enum": [
            "Well",
            "Yes",
            "Poorly",
            "No"
          ],
          "description": "\n        Is there insulation in the vaulted ceiling cavities of this home? If so, how good is it? If unsure, please leave blank.<br><br>\n\n<strong>Well</strong>: All cavities contain insulation at full or near full depth with gaps and voids not exceeding 5%.<br><br>\n<strong>Poor</strong>: Majority of cavities contain insulation, but one or more of the following is suspected: low density, low depth, poor installation.<br><br>\n<strong>Yes</strong>: You can confirm that insulation exists, but are unsure of the installation quality.<br><br>\n<strong>No</strong> - No insulation value is applied to cavities.\n        <br/>\n        \n        <br/>\n        "
        },
        "vaultPercent": {
          "type": "number",
          "example": 34,
          "enum": false,
          "description": "Enter the % of the total footprint that is attributed to each attic or vault area."
        },
        "vaultRoofAbsorptance": {
          "type": "number",
          "example": 0.8,
          "maximum": 1,
          "minimum": 0,
          "enum": false,
          "description": "Enter the Solar Absorptance of the roofing material above this vaulted ceiling. Solar Absorptance is equal to 1 - Solar Reflectance. For example, if the ENERGY STAR website gives a Initial Solar Reflectance of 0.27, enter 0.73. Default numbers will be supplied automatically, so don't change these settings unless you plan to specify a cool roof as an improvement."
        },
        "vaultRoofAbsorptanceImproved": {
          "type": "number",
          "example": 0.8,
          "maximum": 1,
          "minimum": 0,
          "enum": false,
          "description": "Enter the Solar Absorptance of the roofing material above this vaulted ceiling. Solar Absorptance is equal to 1 - Solar Reflectance. For example, if the ENERGY STAR website gives a Initial Solar Reflectance of 0.27, enter 0.73. Default numbers will be supplied automatically, so don't change these settings unless you plan to specify a cool roof as an improvement."
        },
        "vaultRoofEmissivity": {
          "type": "number",
          "example": 0.76,
          "maximum": 1,
          "minimum": 0,
          "enum": false,
          "description": "Enter the Thermal Emittance or Emissivity of the roofing material above this vaulted ceiling. Default numbers will be supplied automatically, so don't change these settings unless you plan to specify a cool roof as an improvement."
        },
        "vaultRoofEmissivityImproved": {
          "type": "number",
          "example": 0.76,
          "maximum": 1,
          "minimum": 0,
          "enum": false,
          "description": "Enter the Thermal Emittance or Emissivity of the roofing material above this vaulted ceiling. Default numbers will be supplied automatically, so don't change these settings unless you plan to specify a cool roof as an improvement."
        },
        "vaultCoolRoof": {
          "type": "string",
          "example": "No",
          "enum": [
            "Yes",
            "No"
          ],
          "description": "\n        Choose yes if you would like to specify characteristics of a cool roof (such as ENERGY STAR qualified roof products) for either the base or improved home. Default numbers will be supplied automatically. Most contractors will not use this option unless they are actually planning to replace a roof as part of an improvement package. \n        <br/>\n        \n        <br/>\n        "
        },
        "vaultCoolRoofImproved": {
          "type": "string",
          "example": "Yes",
          "enum": [
            "Yes",
            "No"
          ],
          "description": "\n        Choose yes if you would like to specify characteristics of a cool roof (such as ENERGY STAR qualified roof products) for either the base or improved home. Default numbers will be supplied automatically. Most contractors will not use this option unless they are actually planning to replace a roof as part of an improvement package. \n        <br/>\n        \n        <br/>\n        "
        },
        "vaultCavityInsulationType": {
          "type": "string",
          "example": "Fiberglass or Rockwool Batt",
          "enum": [
            "Fiberglass or Rockwool Batt",
            "Blown Fiberglass or Rockwool",
            "Cellulose",
            "Open Cell Spray Foam",
            "Closed Cell Spray Foam",
            "Other"
          ],
          "description": "\n        Select the type of insulation that is installed in the vault. If more than one type of insulation is installed, select the type that covers that largest area.\n        <br/>\n        \n        <br/>\n        "
        },
        "vaultCavityInsulationTypeImproved": {
          "type": "string",
          "example": "Other",
          "enum": [
            "Fiberglass or Rockwool Batt",
            "Blown Fiberglass or Rockwool",
            "Cellulose",
            "Open Cell Spray Foam",
            "Closed Cell Spray Foam",
            "Other"
          ],
          "description": "\n        Select the type of insulation that is installed in the vault. If more than one type of insulation is installed, select the type that covers that largest area.\n        <br/>\n        \n        <br/>\n        "
        },
        "vaultContinuousInsulationType": {
          "type": "string",
          "example": "Rigid EPS",
          "enum": [
            "Rigid XPS",
            "Rigid EPS",
            "Rigid Polyisocyanurate",
            "Open Cell Spray Foam",
            "Closed Cell Spray Foam",
            "Other"
          ],
          "description": "\n        Select the type of continuous insulation that is installed on the vault. If more than one type of insulation is installed, select the type that covers that largest area.\n        <br/>\n        \n        <br/>\n        "
        },
        "vaultContinuousInsulationTypeImproved": {
          "type": "string",
          "example": "Rigid XPS",
          "enum": [
            "Rigid XPS",
            "Rigid EPS",
            "Rigid Polyisocyanurate",
            "Open Cell Spray Foam",
            "Closed Cell Spray Foam",
            "Other"
          ],
          "description": "\n        Select the type of continuous insulation that is installed on the vault. If more than one type of insulation is installed, select the type that covers that largest area.\n        <br/>\n        \n        <br/>\n        "
        }
      }
    },
    "wall": {
      "properties": {
        "uuid": {
          "type": "string",
          "example": "02771a6c-d2af-4185-9a5b-7ef906a6f8c5",
          "enum": false,
          "description": "This is a universally unique ID for this item (UUID)."
        },
        "wallExteriorWallSiding": {
          "type": "string",
          "example": "Shingle/Composition",
          "enum": [
            "Brick Veneer",
            "Metal/vinyl siding",
            "Shingle/Composition",
            "Stone veneer",
            "Stucco",
            "Wood/Fiber Cement siding",
            "Other",
            "None",
            "Don't Know"
          ],
          "description": "\n        Select the type of exterior finish material that covers the outside of this home.\n        <br/>\n        \n        <br/>\n        "
        },
        "wallExteriorWallConstruction": {
          "type": "string",
          "example": "Straw Bale",
          "enum": [
            "Concrete Block",
            "Full Brick",
            "2x4 Frame",
            "2x6 Frame",
            "Log",
            "Straw Bale",
            "Don't Know"
          ],
          "description": "\n        Select the type of construction material used to build the exterior walls of the home that are above grade (above ground).\n        <br/>\n        \n        <br/>\n        "
        },
        "wallsInsulated": {
          "type": "string",
          "example": "No",
          "enum": [
            "Well",
            "Poorly",
            "Yes",
            "No"
          ],
          "description": "\n        Is there insulation in the wall cavities of this home? If so, how good is it? If unsure, please leave blank.<br><br>\n\n<strong>Well</strong>: All cavities contain insulation at full or near full depth with gaps and voids not exceeding 5%.<br><br>\n<strong>Poor</strong>: Majority of cavities contain insulation, but one or more of the following is suspected: low density, low depth, poor installation.<br><br>\n<strong>Yes</strong>: You can confirm that insulation exists, but are unsure of the installation quality.<br><br>\n<strong>No</strong> - No insulation value is applied to cavities.\n        <br/>\n        \n        <br/>\n        "
        },
        "wallCavityInsulation": {
          "type": "number",
          "example": 16.17,
          "maximum": 100,
          "minimum": 0,
          "enum": false,
          "description": "Enter the total R-value of insulation installed (BASE) or to be installed (IMPROVED) in this Wall System.<br><br>\n\n<strong>Note:</strong><br>\nEdit Base fields in the Details section only if you're confident of the actual value that is entered. The modeling engine utilizes utility data and input form data to determine the \"effective\" values on the Base side.<br><br>\n\nEdit Improved fields in the Details section with the details of what you recommend be installed in the house. These values are only used if the item is Recommended. Default values are supplied by the modeling engine, but can be overridden.<br><br>"
        },
        "wallCavityInsulationImproved": {
          "type": "number",
          "example": 80.19,
          "maximum": 100,
          "minimum": 0,
          "enum": false,
          "description": "Enter the total R-value of insulation installed (BASE) or to be installed (IMPROVED) in this Wall System.<br><br>\n\n<strong>Note:</strong><br>\nEdit Base fields in the Details section only if you're confident of the actual value that is entered. The modeling engine utilizes utility data and input form data to determine the \"effective\" values on the Base side.<br><br>\n\nEdit Improved fields in the Details section with the details of what you recommend be installed in the house. These values are only used if the item is Recommended. Default values are supplied by the modeling engine, but can be overridden.<br><br>"
        },
        "wallContinuousInsulation": {
          "type": "number",
          "example": 90.32,
          "maximum": 100,
          "minimum": 0,
          "enum": false,
          "description": "Enter the total R-value of continuous insulation installed or to be installed in this Wall System. Continuous insulation is any insulation like spray foam or rigid foam that is continuous and consistent in R-value across studs, joists, or any framing member.<br><br>\n\n<strong>Note:</strong><br>\nEdit Base fields in the Details section only if you're confident of the actual value that is entered. The modeling engine utilizes utility data and input form data to determine the \"effective\" values on the Base side.<br><br>\n\nEdit Improved fields in the Details section with the details of what you recommend be installed in the house. These values are only used if the item is Recommended. Default values are supplied by the modeling engine, but can be overridden.<br><br>\n\n"
        },
        "wallContinuousInsulationImproved": {
          "type": "number",
          "example": 55.7,
          "maximum": 100,
          "minimum": 0,
          "enum": false,
          "description": "Enter the total R-value of continuous insulation installed or to be installed in this Wall System. Continuous insulation is any insulation like spray foam or rigid foam that is continuous and consistent in R-value across studs, joists, or any framing member.<br><br>\n\n<strong>Note:</strong><br>\nEdit Base fields in the Details section only if you're confident of the actual value that is entered. The modeling engine utilizes utility data and input form data to determine the \"effective\" values on the Base side.<br><br>\n\nEdit Improved fields in the Details section with the details of what you recommend be installed in the house. These values are only used if the item is Recommended. Default values are supplied by the modeling engine, but can be overridden.<br><br>\n\n"
        },
        "wallModeledWallArea": {
          "type": "number",
          "example": 277412.44,
          "maximum": 1000000,
          "minimum": 10,
          "enum": false,
          "description": "This field will be automatically calculated based on the data you entered in the input form for House Length, House Width, and Average Wall Height.<br><br>\n\nThis field designates the total gross exterior wall area, including all window and door openings. It does not include walls shared in common with other conditioned dwelling units. An additional 1' of wall height is automatically included for every story beyond the first to account for rim joists. First floor (foundation) rim joists are included separately in the basement or crawl space wall areas. <br><br>\n\nThe BASE area designates the sqft of this wall system on the house. The IMPROVED area designates only the sqft that will be improved. If you're not improving all of that wall, enter only the sqft that is actually being improved. The IMPROVED area cannot be used to reduce or increase the sqft of wall area in the home. "
        },
        "wallModeledWallAreaImproved": {
          "type": "number",
          "example": 868539.8,
          "maximum": 1000000,
          "minimum": 10,
          "enum": false,
          "description": "This field will be automatically calculated based on the data you entered in the input form for House Length, House Width, and Average Wall Height.<br><br>\n\nThis field designates the total gross exterior wall area, including all window and door openings. It does not include walls shared in common with other conditioned dwelling units. An additional 1' of wall height is automatically included for every story beyond the first to account for rim joists. First floor (foundation) rim joists are included separately in the basement or crawl space wall areas. <br><br>\n\nThe BASE area designates the sqft of this wall system on the house. The IMPROVED area designates only the sqft that will be improved. If you're not improving all of that wall, enter only the sqft that is actually being improved. The IMPROVED area cannot be used to reduce or increase the sqft of wall area in the home. "
        },
        "wallSystemPercentOfTotal": {
          "type": "number",
          "example": 40,
          "maximum": 100,
          "minimum": 0,
          "enum": false,
          "description": "If there is more than one wall system type, enter the % of all walls that this system represents. Both wall systems must add up to 100%. If there is only one type of wall system in the house, then enter 100%."
        },
        "wallCavityInsulationType": {
          "type": "string",
          "example": "Other",
          "enum": [
            "Fiberglass or Rockwool Batt",
            "Blown Fiberglass or Rockwool",
            "Cellulose",
            "Open Cell Spray Foam",
            "Closed Cell Spray Foam",
            "Other"
          ],
          "description": "\n        Select the type of insulation that is installed in the wall cavity. If more than one type of insulation is installed, select the type that covers that largest area.\n        <br/>\n        \n        <br/>\n        "
        },
        "wallCavityInsulationTypeImproved": {
          "type": "string",
          "example": "Cellulose",
          "enum": [
            "Fiberglass or Rockwool Batt",
            "Blown Fiberglass or Rockwool",
            "Cellulose",
            "Open Cell Spray Foam",
            "Closed Cell Spray Foam",
            "Other"
          ],
          "description": "\n        Select the type of insulation that is installed in the wall cavity. If more than one type of insulation is installed, select the type that covers that largest area.\n        <br/>\n        \n        <br/>\n        "
        },
        "wallContinuousInsulationType": {
          "type": "string",
          "example": "Rigid XPS",
          "enum": [
            "Rigid XPS",
            "Rigid EPS",
            "Rigid Polyisocyanurate",
            "Open Cell Spray Foam",
            "Closed Cell Spray Foam",
            "Other"
          ],
          "description": "\n        Select the type of continuous insulation that is installed on the wall. If more than one type of insulation is installed, select the type that covers that largest area.\n        <br/>\n        \n        <br/>\n        "
        },
        "wallContinuousInsulationTypeImproved": {
          "type": "string",
          "example": "Closed Cell Spray Foam",
          "enum": [
            "Rigid XPS",
            "Rigid EPS",
            "Rigid Polyisocyanurate",
            "Open Cell Spray Foam",
            "Closed Cell Spray Foam",
            "Other"
          ],
          "description": "\n        Select the type of continuous insulation that is installed on the wall. If more than one type of insulation is installed, select the type that covers that largest area.\n        <br/>\n        \n        <br/>\n        "
        }
      }
    },
    "window": {
      "properties": {
        "uuid": {
          "type": "string",
          "example": "465c4ba3-4f99-47cb-b4fe-763977e6cbe0",
          "enum": false,
          "description": "This is a universally unique ID for this item (UUID)."
        },
        "windowType": {
          "type": "string",
          "example": "Double pane",
          "enum": [
            "Single pane",
            "Single pane + storm",
            "Double pane",
            "Double pane + low e",
            "Triple pane + low e",
            "Don't Know"
          ],
          "description": "\n        Select the type of windows that are installed in the home. If more than one type of window is installed, add a second window system.\n        <br/>\n        \n        <br/>\n        "
        },
        "windowFrame": {
          "type": "string",
          "example": "Metal",
          "enum": [
            "Metal",
            "Vinyl",
            "Wood or metal clad",
            "Don't Know"
          ],
          "description": "\n        Select the type of window frame material that is used for the windows installed in the home. If more than one type of window is installed, add a second window system.\n        <br/>\n        \n        <br/>\n        "
        },
        "windowNorthAreaPercent": {
          "type": "number",
          "example": 33,
          "maximum": 100,
          "minimum": 0,
          "enum": false,
          "description": "Enter the % of EXPOSED wall area for each orientation that is made up of window glass area. If some of the wall is shared with another conditioned unit (multi-family, townhome, etc.) put in the % of the exposed area only."
        },
        "windowEfficiency": {
          "type": "number",
          "example": 1.26,
          "maximum": 2,
          "minimum": 0.01,
          "enum": false,
          "description": "Enter the average gross window (including frame effects) U-value of the windows installed (BASE) or to be installed (IMPROVED). <br><br>\n\n<strong>Note:</strong><br>\nEdit Base fields in the Details section only if you're confident of the actual value that is entered. The modeling engine utilizes utility data and input form data to determine the \"effective\" values on the Base side.<br><br>\n\nEdit Improved fields in the Details section with the details of what you recommend be installed in the house. These values are only used if the item is Recommended. Default values are supplied by the modeling engine, but can be overridden.<br><br>"
        },
        "windowEfficiencyImproved": {
          "type": "number",
          "example": 0.27,
          "maximum": 2,
          "minimum": 0.01,
          "enum": false,
          "description": "Enter the average gross window (including frame effects) U-value of the windows installed (BASE) or to be installed (IMPROVED). <br><br>\n\n<strong>Note:</strong><br>\nEdit Base fields in the Details section only if you're confident of the actual value that is entered. The modeling engine utilizes utility data and input form data to determine the \"effective\" values on the Base side.<br><br>\n\nEdit Improved fields in the Details section with the details of what you recommend be installed in the house. These values are only used if the item is Recommended. Default values are supplied by the modeling engine, but can be overridden.<br><br>"
        },
        "windowAreaNorth": {
          "type": "number",
          "example": 1134.4,
          "maximum": 10000,
          "minimum": 0,
          "enum": false,
          "description": "Enter the total area of windows for this orientation of this Window System. BASE values determine the area of the existing windows in the house. The IMPROVED values represent the area of windows in this orientation that are actually going to be improved. The difference in sqft between BASE and IMPROVED will be assumed as unchanged. \n\n<strong>Note:</strong><br>\nEdit Base fields in the Details section only if you're confident of the actual value that is entered. The modeling engine utilizes utility data and input form data to determine the \"effective\" values on the Base side.<br><br>\n\nEdit Improved fields in the Details section with the details of what you recommend be installed in the house. These values are only used if the item is Recommended. Default values are supplied by the modeling engine, but can be overridden.<br><br>"
        },
        "windowAreaNorthImproved": {
          "type": "number",
          "example": 8701.03,
          "maximum": 10000,
          "minimum": 0,
          "enum": false,
          "description": "Enter the total area of windows for this orientation of this Window System. BASE values determine the area of the existing windows in the house. The IMPROVED values represent the area of windows in this orientation that are actually going to be improved. The difference in sqft between BASE and IMPROVED will be assumed as unchanged. \n\n<strong>Note:</strong><br>\nEdit Base fields in the Details section only if you're confident of the actual value that is entered. The modeling engine utilizes utility data and input form data to determine the \"effective\" values on the Base side.<br><br>\n\nEdit Improved fields in the Details section with the details of what you recommend be installed in the house. These values are only used if the item is Recommended. Default values are supplied by the modeling engine, but can be overridden.<br><br>"
        },
        "windowAreaEast": {
          "type": "number",
          "example": 8903.01,
          "maximum": 10000,
          "minimum": 0,
          "enum": false,
          "description": "Enter the total area of windows for this orientation of this Window System. BASE values determine the area of the existing windows in the house. The IMPROVED values represent the area of windows in this orientation that are actually going to be improved. The difference in sqft between BASE and IMPROVED will be assumed as unchanged. \n\n<strong>Note:</strong><br>\nEdit Base fields in the Details section only if you're confident of the actual value that is entered. The modeling engine utilizes utility data and input form data to determine the \"effective\" values on the Base side.<br><br>\n\nEdit Improved fields in the Details section with the details of what you recommend be installed in the house. These values are only used if the item is Recommended. Default values are supplied by the modeling engine, but can be overridden.<br><br>"
        },
        "windowAreaEastImproved": {
          "type": "number",
          "example": 1365.96,
          "maximum": 10000,
          "minimum": 0,
          "enum": false,
          "description": "Enter the total area of windows for this orientation of this Window System. BASE values determine the area of the existing windows in the house. The IMPROVED values represent the area of windows in this orientation that are actually going to be improved. The difference in sqft between BASE and IMPROVED will be assumed as unchanged. \n\n<strong>Note:</strong><br>\nEdit Base fields in the Details section only if you're confident of the actual value that is entered. The modeling engine utilizes utility data and input form data to determine the \"effective\" values on the Base side.<br><br>\n\nEdit Improved fields in the Details section with the details of what you recommend be installed in the house. These values are only used if the item is Recommended. Default values are supplied by the modeling engine, but can be overridden.<br><br>"
        },
        "windowAreaSouth": {
          "type": "number",
          "example": 9902.81,
          "maximum": 10000,
          "minimum": 0,
          "enum": false,
          "description": "Enter the total area of windows for this orientation of this Window System. BASE values determine the area of the existing windows in the house. The IMPROVED values represent the area of windows in this orientation that are actually going to be improved. The difference in sqft between BASE and IMPROVED will be assumed as unchanged. \n\n<strong>Note:</strong><br>\nEdit Base fields in the Details section only if you're confident of the actual value that is entered. The modeling engine utilizes utility data and input form data to determine the \"effective\" values on the Base side.<br><br>\n\nEdit Improved fields in the Details section with the details of what you recommend be installed in the house. These values are only used if the item is Recommended. Default values are supplied by the modeling engine, but can be overridden.<br><br>"
        },
        "windowAreaSouthImproved": {
          "type": "number",
          "example": 6555.92,
          "maximum": 10000,
          "minimum": 0,
          "enum": false,
          "description": "Enter the total area of windows for this orientation of this Window System. BASE values determine the area of the existing windows in the house. The IMPROVED values represent the area of windows in this orientation that are actually going to be improved. The difference in sqft between BASE and IMPROVED will be assumed as unchanged. \n\n<strong>Note:</strong><br>\nEdit Base fields in the Details section only if you're confident of the actual value that is entered. The modeling engine utilizes utility data and input form data to determine the \"effective\" values on the Base side.<br><br>\n\nEdit Improved fields in the Details section with the details of what you recommend be installed in the house. These values are only used if the item is Recommended. Default values are supplied by the modeling engine, but can be overridden.<br><br>"
        },
        "windowAreaWest": {
          "type": "number",
          "example": 9551.47,
          "maximum": 10000,
          "minimum": 0,
          "enum": false,
          "description": "Enter the total area of windows for this orientation of this Window System. BASE values determine the area of the existing windows in the house. The IMPROVED values represent the area of windows in this orientation that are actually going to be improved. The difference in sqft between BASE and IMPROVED will be assumed as unchanged. \n\n<strong>Note:</strong><br>\nEdit Base fields in the Details section only if you're confident of the actual value that is entered. The modeling engine utilizes utility data and input form data to determine the \"effective\" values on the Base side.<br><br>\n\nEdit Improved fields in the Details section with the details of what you recommend be installed in the house. These values are only used if the item is Recommended. Default values are supplied by the modeling engine, but can be overridden.<br><br>"
        },
        "windowAreaWestImproved": {
          "type": "number",
          "example": 195.86,
          "maximum": 10000,
          "minimum": 0,
          "enum": false,
          "description": "Enter the total area of windows for this orientation of this Window System. BASE values determine the area of the existing windows in the house. The IMPROVED values represent the area of windows in this orientation that are actually going to be improved. The difference in sqft between BASE and IMPROVED will be assumed as unchanged. \n\n<strong>Note:</strong><br>\nEdit Base fields in the Details section only if you're confident of the actual value that is entered. The modeling engine utilizes utility data and input form data to determine the \"effective\" values on the Base side.<br><br>\n\nEdit Improved fields in the Details section with the details of what you recommend be installed in the house. These values are only used if the item is Recommended. Default values are supplied by the modeling engine, but can be overridden.<br><br>"
        },
        "windowSolarHeatGainCoefficient": {
          "type": "number",
          "example": 0.94,
          "maximum": 0.99,
          "minimum": 0.01,
          "enum": false,
          "description": "Enter the average gross window (including frame effects) Solar Heat Gain Coefficient (SHGC) of the windows installed (BASE) or to be installed (IMPROVED). IMPORTANT! Do not adjust this number to account for the affects of solar screens or shades. Use the Exterior Treatment fields below for this and only change the SHGC if the window unit itself is being replaced.<br><br>\n\n<strong>Note:</strong><br>\nEdit Base fields in the Details section only if you're confident of the actual value that is entered. The modeling engine utilizes utility data and input form data to determine the \"effective\" values on the Base side.<br><br>\n\nEdit Improved fields in the Details section with the details of what you recommend be installed in the house. These values are only used if the item is Recommended. Default values are supplied by the modeling engine, but can be overridden.<br><br>"
        },
        "windowSolarHeatGainCoefficientImproved": {
          "type": "number",
          "example": 0.59,
          "maximum": 0.99,
          "minimum": 0.01,
          "enum": false,
          "description": "Enter the average gross window (including frame effects) Solar Heat Gain Coefficient (SHGC) of the windows installed (BASE) or to be installed (IMPROVED). IMPORTANT! Do not adjust this number to account for the affects of solar screens or shades. Use the Exterior Treatment fields below for this and only change the SHGC if the window unit itself is being replaced.<br><br>\n\n<strong>Note:</strong><br>\nEdit Base fields in the Details section only if you're confident of the actual value that is entered. The modeling engine utilizes utility data and input form data to determine the \"effective\" values on the Base side.<br><br>\n\nEdit Improved fields in the Details section with the details of what you recommend be installed in the house. These values are only used if the item is Recommended. Default values are supplied by the modeling engine, but can be overridden.<br><br>"
        },
        "windowEastAreaPercent": {
          "type": "number",
          "example": 72,
          "maximum": 100,
          "minimum": 0,
          "enum": false,
          "description": "Enter the % of EXPOSED wall area for each orientation that is made up of window glass area. If some of the wall is shared with another conditioned unit (multi-family, townhome, etc.) put in the % of the exposed area only."
        },
        "windowSouthAreaPercent": {
          "type": "number",
          "example": 50,
          "maximum": 100,
          "minimum": 0,
          "enum": false,
          "description": "Enter the % of EXPOSED wall area for each orientation that is made up of window glass area. If some of the wall is shared with another conditioned unit (multi-family, townhome, etc.) put in the % of the exposed area only."
        },
        "windowWestAreaPercent": {
          "type": "number",
          "example": 5,
          "maximum": 100,
          "minimum": 0,
          "enum": false,
          "description": "Enter the % of EXPOSED wall area for each orientation that is made up of window glass area. If some of the wall is shared with another conditioned unit (multi-family, townhome, etc.) put in the % of the exposed area only."
        },
        "windowNorthOverhangDepth": {
          "type": "number",
          "example": 7.93,
          "maximum": 20,
          "minimum": 0,
          "enum": false,
          "description": "Enter the average window overhang width (feet) on the exterior walls for this orientation."
        },
        "windowEastOverhangDepth": {
          "type": "number",
          "example": 14.26,
          "maximum": 20,
          "minimum": 0,
          "enum": false,
          "description": "Enter the average window overhang width (feet) on the exterior walls for this orientation."
        },
        "windowSouthOverhangDepth": {
          "type": "number",
          "example": 0.5,
          "maximum": 20,
          "minimum": 0,
          "enum": false,
          "description": "Enter the average window overhang width (feet) on the exterior walls for this orientation."
        },
        "windowWestOverhangDepth": {
          "type": "number",
          "example": 14.25,
          "maximum": 20,
          "minimum": 0,
          "enum": false,
          "description": "Enter the average window overhang width (feet) on the exterior walls for this orientation."
        },
        "windowExteriorTreatmentNorth": {
          "type": "string",
          "example": "Insect Screen (half)",
          "enum": [
            "Insect Screen (full)",
            "Insect Screen (half)",
            "Solar Screen (summer only)",
            "Solar Screen (all year)",
            "Solar Shades, Vertical Roller (summer only)",
            "Solar Shades, Vertical Roller (all year)",
            "Solar Shades, Louvered (summer only)",
            "Solar Shades, Louvered (all year)",
            "Solar Film (all year)",
            "No Treatment"
          ],
          "description": "\n        Choose the type of exterior shading device that's attached to windows on this side of the home. IMPORTANT! Do not adjust the SHGC number to account for the affects of solar screens or shades and only change the SHGC if the window unit itself is being replaced.\n        <br/>\n        \n        <br/>\n        "
        },
        "windowExteriorTreatmentNorthImproved": {
          "type": "string",
          "example": "Insect Screen (full)",
          "enum": [
            "Insect Screen (full)",
            "Insect Screen (half)",
            "Solar Screen (summer only)",
            "Solar Screen (all year)",
            "Solar Shades, Vertical Roller (summer only)",
            "Solar Shades, Vertical Roller (all year)",
            "Solar Shades, Louvered (summer only)",
            "Solar Shades, Louvered (all year)",
            "Solar Film (all year)",
            "No Treatment"
          ],
          "description": "\n        Choose the type of exterior shading device that's attached to windows on this side of the home. IMPORTANT! Do not adjust the SHGC number to account for the affects of solar screens or shades and only change the SHGC if the window unit itself is being replaced.\n        <br/>\n        \n        <br/>\n        "
        },
        "windowExteriorTreatmentEast": {
          "type": "string",
          "example": "Insect Screen (full)",
          "enum": [
            "Insect Screen (full)",
            "Insect Screen (half)",
            "Solar Screen (summer only)",
            "Solar Screen (all year)",
            "Solar Shades, Vertical Roller (summer only)",
            "Solar Shades, Vertical Roller (all year)",
            "Solar Shades, Louvered (summer only)",
            "Solar Shades, Louvered (all year)",
            "Solar Film (all year)",
            "No Treatment"
          ],
          "description": "\n        Choose the type of exterior shading device that's attached to windows on this side of the home. IMPORTANT! Do not adjust the SHGC number to account for the affects of solar screens or shades and only change the SHGC if the window unit itself is being replaced.\n        <br/>\n        \n        <br/>\n        "
        },
        "windowExteriorTreatmentEastImproved": {
          "type": "string",
          "example": "No Treatment",
          "enum": [
            "Insect Screen (full)",
            "Insect Screen (half)",
            "Solar Screen (summer only)",
            "Solar Screen (all year)",
            "Solar Shades, Vertical Roller (summer only)",
            "Solar Shades, Vertical Roller (all year)",
            "Solar Shades, Louvered (summer only)",
            "Solar Shades, Louvered (all year)",
            "Solar Film (all year)",
            "No Treatment"
          ],
          "description": "\n        Choose the type of exterior shading device that's attached to windows on this side of the home. IMPORTANT! Do not adjust the SHGC number to account for the affects of solar screens or shades and only change the SHGC if the window unit itself is being replaced.\n        <br/>\n        \n        <br/>\n        "
        },
        "windowExteriorTreatmentSouth": {
          "type": "string",
          "example": "Solar Shades, Louvered (summer only)",
          "enum": [
            "Insect Screen (full)",
            "Insect Screen (half)",
            "Solar Screen (summer only)",
            "Solar Screen (all year)",
            "Solar Shades, Vertical Roller (summer only)",
            "Solar Shades, Vertical Roller (all year)",
            "Solar Shades, Louvered (summer only)",
            "Solar Shades, Louvered (all year)",
            "Solar Film (all year)",
            "No Treatment"
          ],
          "description": "\n        Choose the type of exterior shading device that's attached to windows on this side of the home. IMPORTANT! Do not adjust the SHGC number to account for the affects of solar screens or shades and only change the SHGC if the window unit itself is being replaced.\n        <br/>\n        \n        <br/>\n        "
        },
        "windowExteriorTreatmentSouthImproved": {
          "type": "string",
          "example": "Solar Shades, Louvered (all year)",
          "enum": [
            "Insect Screen (full)",
            "Insect Screen (half)",
            "Solar Screen (summer only)",
            "Solar Screen (all year)",
            "Solar Shades, Vertical Roller (summer only)",
            "Solar Shades, Vertical Roller (all year)",
            "Solar Shades, Louvered (summer only)",
            "Solar Shades, Louvered (all year)",
            "Solar Film (all year)",
            "No Treatment"
          ],
          "description": "\n        Choose the type of exterior shading device that's attached to windows on this side of the home. IMPORTANT! Do not adjust the SHGC number to account for the affects of solar screens or shades and only change the SHGC if the window unit itself is being replaced.\n        <br/>\n        \n        <br/>\n        "
        },
        "windowExteriorTreatmentWest": {
          "type": "string",
          "example": "Solar Shades, Louvered (all year)",
          "enum": [
            "Insect Screen (full)",
            "Insect Screen (half)",
            "Solar Screen (summer only)",
            "Solar Screen (all year)",
            "Solar Shades, Vertical Roller (summer only)",
            "Solar Shades, Vertical Roller (all year)",
            "Solar Shades, Louvered (summer only)",
            "Solar Shades, Louvered (all year)",
            "Solar Film (all year)",
            "No Treatment"
          ],
          "description": "\n        Choose the type of exterior shading device that's attached to windows on this side of the home. IMPORTANT! Do not adjust the SHGC number to account for the affects of solar screens or shades and only change the SHGC if the window unit itself is being replaced.\n        <br/>\n        \n        <br/>\n        "
        },
        "windowExteriorTreatmentWestImproved": {
          "type": "string",
          "example": "Solar Shades, Louvered (summer only)",
          "enum": [
            "Insect Screen (full)",
            "Insect Screen (half)",
            "Solar Screen (summer only)",
            "Solar Screen (all year)",
            "Solar Shades, Vertical Roller (summer only)",
            "Solar Shades, Vertical Roller (all year)",
            "Solar Shades, Louvered (summer only)",
            "Solar Shades, Louvered (all year)",
            "Solar Film (all year)",
            "No Treatment"
          ],
          "description": "\n        Choose the type of exterior shading device that's attached to windows on this side of the home. IMPORTANT! Do not adjust the SHGC number to account for the affects of solar screens or shades and only change the SHGC if the window unit itself is being replaced.\n        <br/>\n        \n        <br/>\n        "
        },
        "windowEnergyStar": {
          "type": "string",
          "example": "Yes",
          "enum": [
            "Yes",
            "No"
          ],
          "description": "\n        Select Yes if this window system is ENERGY STAR Certified.\n        <br/>\n        \n        <br/>\n        "
        },
        "windowEnergyStarImproved": {
          "type": "string",
          "example": "No",
          "enum": [
            "Yes",
            "No"
          ],
          "description": "\n        Select Yes if this window system is ENERGY STAR Certified.\n        <br/>\n        \n        <br/>\n        "
        }
      }
    },
    "job": {
      "properties": {
        "id": {
          "type": "integer",
          "example": 3625,
          "enum": false,
          "description": "The unique Snugg Pro job identifier. Do not specify this when creating a job via API"
        },
        "firstName": {
          "type": "string",
          "example": "Eva",
          "enum": false
        },
        "lastName": {
          "type": "string",
          "example": "Bryant",
          "enum": false
        },
        "renterOwner": {
          "type": "string",
          "example": 0,
          "enum": [
            0,
            1
          ],
          "description": "\n        Does the customer own or rent this property.\n        <br/>\n        Field options:\n        <br/>\n         0 → Renter <br/> 1 → Owner <br/>"
        },
        "serviceTime": {
          "type": "string",
          "example": "2017-06-26T07:46:19.416Z",
          "enum": false,
          "description": "Time at which the appointment will take place. Format: YYYY-MM-DD HH:MM:SS"
        },
        "email": {
          "type": "string",
          "example": "Crystal_MacGyver26@yahoo.com",
          "enum": false,
          "description": "The email address of the homeowner (or tenant)."
        },
        "homePhone": {
          "type": "string",
          "example": "(363) 133-0180",
          "enum": false,
          "description": "Phone number of the home in this format (555) 555-5555."
        },
        "address1": {
          "type": "string",
          "example": "57 Dorothy Crescent",
          "enum": false,
          "description": "First line of the home address."
        },
        "address2": {
          "type": "string",
          "example": "Fleetwood Greens",
          "enum": false,
          "description": "Second line of the home address."
        },
        "city": {
          "type": "string",
          "example": "Evieland",
          "enum": false,
          "description": "City of the home."
        },
        "state": {
          "type": "string",
          "example": "MT",
          "enum": [
            "AL",
            "AK",
            "AZ",
            "AR",
            "CA",
            "CO",
            "CT",
            "DE",
            "DC",
            "FL",
            "GA",
            "HI",
            "ID",
            "IL",
            "IN",
            "IA",
            "KS",
            "KY",
            "LA",
            "ME",
            "MD",
            "MA",
            "MI",
            "MN",
            "MS",
            "MO",
            "MT",
            "NE",
            "NV",
            "NH",
            "NJ",
            "NM",
            "NY",
            "NC",
            "ND",
            "OH",
            "OK",
            "OR",
            "PA",
            "RI",
            "SC",
            "SD",
            "TN",
            "TX",
            "UT",
            "VT",
            "VA",
            "WA",
            "WV",
            "WI",
            "WY"
          ],
          "description": "\n        State of the home.\n        <br/>\n        Field options:\n        <br/>\n         AL → Alabama <br/> AK → Alaska <br/> AZ → Arizona <br/> AR → Arkansas <br/> CA → California <br/> CO → Colorado <br/> CT → Connecticut <br/> DE → Delaware <br/> DC → District Of Columbia <br/> FL → Florida <br/> GA → Georgia <br/> HI → Hawaii <br/> ID → Idaho <br/> IL → Illinois <br/> IN → Indiana <br/> IA → Iowa <br/> KS → Kansas <br/> KY → Kentucky <br/> LA → Louisiana <br/> ME → Maine <br/> MD → Maryland <br/> MA → Massachusetts <br/> MI → Michigan <br/> MN → Minnesota <br/> MS → Mississippi <br/> MO → Missouri <br/> MT → Montana <br/> NE → Nebraska <br/> NV → Nevada <br/> NH → New Hampshire <br/> NJ → New Jersey <br/> NM → New Mexico <br/> NY → New York <br/> NC → North Carolina <br/> ND → North Dakota <br/> OH → Ohio <br/> OK → Oklahoma <br/> OR → Oregon <br/> PA → Pennsylvania <br/> RI → Rhode Island <br/> SC → South Carolina <br/> SD → South Dakota <br/> TN → Tennessee <br/> TX → Texas <br/> UT → Utah <br/> VT → Vermont <br/> VA → Virginia <br/> WA → Washington <br/> WV → West Virginia <br/> WI → Wisconsin <br/> WY → Wyoming <br/>"
        },
        "zip": {
          "type": "string",
          "example": "99151-2273",
          "enum": false,
          "description": "Zip code of the home."
        },
        "accountId": {
          "type": "integer",
          "example": 24702,
          "enum": false,
          "description": "Unique identifier of the Snugg Pro user who owns this job."
        },
        "stageId": {
          "type": "string",
          "example": 3,
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10
          ],
          "description": "\n        Current stage ID of the job.\n        <br/>\n        Field options:\n        <br/>\n         1 → Lead <br/> 2 → Audit <br/> 3 → Bid Proposed <br/> 4 → Bid Approved <br/> 5 → Retrofit In Progress <br/> 6 → Retrofit Complete <br/> 7 → QA <br/> 8 → Uncategorized <br/> 9 → Archived Won <br/> 10 → Archived Lost <br/>"
        },
        "companyId": {
          "type": "integer",
          "example": 25420,
          "enum": false,
          "description": "Unique identifier of the Snugg Pro company who owns the job."
        },
        "altId": {
          "type": "integer",
          "example": 37424,
          "enum": false,
          "description": "Store your own alternate job ID. This will not affect the Snugg Pro assigned Job ID."
        }
      }
    },
    "account": {
      "properties": {
        "id": {
          "type": "integer",
          "example": 78463,
          "enum": false,
          "description": "This is the unique Snugg Pro ID assigned to the user."
        },
        "firstName": {
          "type": "string",
          "example": "Shane",
          "enum": false
        },
        "lastName": {
          "type": "string",
          "example": "Bowman",
          "enum": false
        },
        "email": {
          "type": "string",
          "example": "Norris.Dibbert@yahoo.com",
          "enum": false,
          "description": "This is the user's login email address, which may be different from the address displayed in the report."
        },
        "phoneNumber": {
          "type": "string",
          "example": "(597) 755-1151",
          "enum": false
        },
        "title": {
          "type": "string",
          "example": "Energy Auditor",
          "enum": false
        },
        "certifications": {
          "type": "string",
          "example": "Program-certified",
          "enum": false
        },
        "hoursOfOperation": {
          "type": "string",
          "example": "9-5 Monday thru Friday",
          "enum": false
        }
      }
    },
    "program": {
      "properties": {
        "id": {
          "type": "integer",
          "example": 28622,
          "enum": false,
          "description": "The unique numeric Snugg Pro ID assigned to the program"
        },
        "name": {
          "type": "string",
          "example": "NYSERDA",
          "enum": false,
          "description": "The name of the program"
        },
        "website": {
          "type": "string",
          "example": "https://www.nyserda.ny.gov/All-Programs/Programs/Home-Performance-With-ENERGY-STAR",
          "enum": false,
          "description": "The website of the program"
        },
        "phone": {
          "type": "string",
          "example": "(190) 229-3190",
          "enum": false,
          "description": "The phone number of the program"
        }
      }
    },
    "recommendation": {
      "properties": {
        "uuid": {
          "type": "string",
          "example": "15728d00-2eff-446a-a775-48226b0a7f59",
          "enum": false,
          "description": "This is a universally unique ID for this item (UUID)."
        },
        "status": {
          "type": "string",
          "example": 1,
          "enum": [
            1,
            2,
            3
          ],
          "description": "\n        <p><strong>Recommend</strong> a measure to feature it in the report's upgrade details section. This measure will factor into the job's total cost, savings and SIR.</p><p><strong>Note</strong> a measure to list it in the report as 'Additional Notes'. Noted measures do not count towards the job's total cost, savings and SIR.</p><p><strong>Decline</strong> a measure to hide it altogether report. Declined measures do not count towards the job's total cost, savings and SIR.</p>\n        <br/>\n        Field options:\n        <br/>\n         1 → Recommend <br/> 2 → Note <br/> 3 → Decline <br/>"
        },
        "title": {
          "type": "string",
          "example": "Some text value",
          "maxLength": 255,
          "enum": false,
          "description": "The title will appear throughout the audit report. When appropriate, consider wording this as an actionable sentence. For instance, instead of 'Programmable Thermostat', you could write 'Program your thermostat'."
        },
        "cost": {
          "type": "number",
          "example": 43.15,
          "enum": false
        },
        "costType": {
          "type": "string",
          "example": 0,
          "enum": [
            0,
            1
          ],
          "description": "\n        \n        <br/>\n        Field options:\n        <br/>\n         0 → Simple <br/> 1 → Detailed <br/>"
        },
        "measureCode": {
          "type": "string",
          "enum": false,
          "description": "Used to identify a measure with a custom code."
        },
        "homeownerNotes": {
          "type": "string",
          "enum": false,
          "description": "Add a note to the homeowner about this recommendation"
        },
        "contractorNotes": {
          "type": "string",
          "enum": false,
          "description": "This field is intended to communicate details with other professionals. It can be turned on or off in the report so you can chose to hide technical jargon or other information when presenting to the homeowner. "
        },
        "whyItMatters": {
          "type": "string",
          "enum": false,
          "description": "Best kept short and concise, this field is largely educational and appears in the sidebar of the recommendation."
        },
        "captionRows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/recommendationCaption"
          }
        }
      }
    },
    "jobFinancing": {
      "properties": {
        "uuid": {
          "type": "string",
          "example": "9b3f8ae4-faba-473c-9be9-8466b3fc4e5d",
          "enum": false,
          "description": "This is a universally unique ID for this item (UUID)."
        },
        "title": {
          "type": "string",
          "example": "Some text value",
          "maxLength": 255,
          "enum": false
        },
        "isShown": {
          "type": "string",
          "example": 0,
          "enum": [
            0,
            1
          ],
          "description": "\n        undefined\n        <br/>\n        Field options:\n        <br/>\n         0 → Hide <br/> 1 → Show <br/>"
        },
        "cashDown": {
          "type": "number",
          "example": 216.29,
          "enum": false
        }
      }
    },
    "report": {
      "properties": {
        "titleCover": {
          "type": "string",
          "example": "Some text value",
          "maxLength": 32,
          "enum": false,
          "description": "The title of the cover page."
        },
        "coverTextArea": {
          "type": "string",
          "enum": false,
          "description": "Introduction text that appears on the cover page."
        },
        "titleConcerns": {
          "type": "string",
          "example": "Some text value",
          "maxLength": 32,
          "enum": false,
          "description": "The title of the concerns page."
        },
        "concernsSidebar": {
          "type": "string",
          "example": "Some text value",
          "maxLength": 32,
          "enum": false,
          "description": "The text in the sidebar of the concerns page."
        },
        "titleSolutions": {
          "type": "string",
          "example": "Some text value",
          "maxLength": 32,
          "enum": false,
          "description": "The title of the solutions page."
        },
        "solutionsTitle": {
          "type": "string",
          "example": "Some text value",
          "enum": false,
          "description": "Subheader title on the solutions page."
        },
        "titleFinancing": {
          "type": "string",
          "example": "Some text value",
          "maxLength": 32,
          "enum": false,
          "description": "The title of the financing page."
        },
        "additionalNotesOverviewTitle": {
          "type": "string",
          "example": "Some text value",
          "maxLength": 32,
          "enum": false,
          "description": "The title of the additional notes page(s)."
        },
        "additionalNotesOverview": {
          "type": "string",
          "example": "Some text value",
          "enum": false,
          "description": "The text in the sidebar of the additional notes page(s)."
        },
        "titleTechSpecs": {
          "type": "string",
          "example": "Some text value",
          "maxLength": 32,
          "enum": false,
          "description": "The title of the tech specs page(s)."
        },
        "titleMetrics": {
          "type": "string",
          "example": "Some text value",
          "maxLength": 32,
          "enum": false,
          "description": "The title of the metrics page(s)."
        },
        "titleGlossary": {
          "type": "string",
          "example": "Some text value",
          "maxLength": 32,
          "enum": false,
          "description": "The title of the gloassary page(s)."
        },
        "titleHes": {
          "type": "string",
          "example": "Some text value",
          "maxLength": 32,
          "enum": false,
          "description": "The title of HES page."
        },
        "titleCoc": {
          "type": "string",
          "example": "Some text value",
          "maxLength": 32,
          "enum": false,
          "description": "The title of Certificate of Completion page."
        },
        "titleWorkOrder": {
          "type": "string",
          "example": "Some text value",
          "maxLength": 32,
          "enum": false,
          "description": "The title of work order page."
        },
        "serviceDateTitle": {
          "type": "string",
          "example": "Some text value",
          "maxLength": 255,
          "enum": false,
          "description": "Single-line text to describe the date that service date appears in the report (used on the cover page sidebar)."
        },
        "servicedByTitle": {
          "type": "string",
          "example": "Some text value",
          "maxLength": 255,
          "enum": false,
          "description": "Single-line text to describe the date that service date appears in the report (used on the cover page sidebar)."
        },
        "elementCosts": {
          "type": "string",
          "example": 1,
          "enum": [
            2,
            1,
            0
          ],
          "description": "\n        Defines if and how costs are shown throughout the report.\n        <br/>\n        Field options:\n        <br/>\n         2 → Exact <br/> 1 → Rounded <br/> 0 → Off <br/>"
        },
        "elementSavings": {
          "type": "string",
          "example": 0,
          "enum": [
            1,
            4,
            0
          ],
          "description": "\n        Defines if and how savings are shown throughout the report.\n        <br/>\n        Field options:\n        <br/>\n         1 → Detailed <br/> 4 → Global <br/> 0 → Off <br/>"
        },
        "elementSir": {
          "type": "string",
          "example": 1,
          "enum": [
            1,
            3,
            0
          ],
          "description": "\n        Defines if and how the Savings to Investment Ratio (SIR) is shown throughout the report.\n        <br/>\n        Field options:\n        <br/>\n         1 → Detailed <br/> 3 → Global <br/> 0 → Off <br/>"
        },
        "elementCo2": {
          "type": "string",
          "example": 1,
          "enum": [
            1,
            0
          ],
          "description": "\n        Defines whether the CO2 savings are visible in the report.\n        <br/>\n        Field options:\n        <br/>\n         1 → On <br/> 0 → Off <br/>"
        },
        "elementWhyItMatters": {
          "type": "string",
          "example": 1,
          "enum": [
            1,
            0
          ],
          "description": "\n        Defines whether the educational 'Why it matters' section is visible in the report.\n        <br/>\n        Field options:\n        <br/>\n         1 → On <br/> 0 → Off <br/>"
        },
        "elementPhotos": {
          "type": "string",
          "example": 0,
          "enum": [
            1,
            0
          ],
          "description": "\n        Defines whether photos are visible in the report.\n        <br/>\n        Field options:\n        <br/>\n         1 → On <br/> 0 → Off <br/>"
        },
        "elementHomeownerNotes": {
          "type": "string",
          "example": 1,
          "enum": [
            1,
            0
          ],
          "description": "\n        Defines whether homeowner notes are visible in the report.\n        <br/>\n        Field options:\n        <br/>\n         1 → On <br/> 0 → Off <br/>"
        },
        "elementContractorNotes": {
          "type": "string",
          "example": 0,
          "enum": [
            1,
            0
          ],
          "description": "\n        Defines whether contractor notes are visible in the report.\n        <br/>\n        Field options:\n        <br/>\n         1 → On <br/> 0 → Off <br/>"
        },
        "elementNowAndGoal": {
          "type": "string",
          "example": 0,
          "enum": [
            1,
            0
          ],
          "description": "\n        Defines whether the now & goal section is visible in the report.\n        <br/>\n        Field options:\n        <br/>\n         1 → On <br/> 0 → Off <br/>"
        },
        "pageCover": {
          "type": "string",
          "example": 0,
          "enum": [
            1,
            0
          ],
          "description": "\n        Defines whether the cover page is visible in the report.\n        <br/>\n        Field options:\n        <br/>\n         1 → On <br/> 0 → Off <br/>"
        },
        "pageConcerns": {
          "type": "string",
          "example": 1,
          "enum": [
            1,
            0
          ],
          "description": "\n        Defines whether the concerns page is visible in the report.\n        <br/>\n        Field options:\n        <br/>\n         1 → On <br/> 0 → Off <br/>"
        },
        "pageSolutions": {
          "type": "string",
          "example": 1,
          "enum": [
            1,
            0
          ],
          "description": "\n        Defines whether the solutions page is visible in the report.\n        <br/>\n        Field options:\n        <br/>\n         1 → On <br/> 0 → Off <br/>"
        },
        "pageUpgradeDetails": {
          "type": "string",
          "example": 0,
          "enum": [
            1,
            0
          ],
          "description": "\n        Defines whether the upgrade details section is visible in the report.\n        <br/>\n        Field options:\n        <br/>\n         1 → On <br/> 0 → Off <br/>"
        },
        "pageHealth": {
          "type": "string",
          "example": 1,
          "enum": [
            1,
            0
          ],
          "description": "\n        Defines whether the health and safety section is visible in the report.\n        <br/>\n        Field options:\n        <br/>\n         1 → On <br/> 0 → Off <br/>"
        },
        "pageAdditionalNotes": {
          "type": "string",
          "example": 0,
          "enum": [
            1,
            0
          ],
          "description": "\n        Defines whether the additional notes section is visible in the report.\n        <br/>\n        Field options:\n        <br/>\n         1 → On <br/> 0 → Off <br/>"
        },
        "pageRebates": {
          "type": "string",
          "example": 0,
          "enum": [
            1,
            0
          ],
          "description": "\n        Defines whether the rebates & incentives pages is visible in the report. These are usually custom program pages\n        <br/>\n        Field options:\n        <br/>\n         1 → On <br/> 0 → Off <br/>"
        },
        "pageFinancing": {
          "type": "string",
          "example": 0,
          "enum": [
            1,
            0
          ],
          "description": "\n        Defines whether the financing page is visible in the report.\n        <br/>\n        Field options:\n        <br/>\n         1 → On <br/> 0 → Off <br/>"
        },
        "pageMetrics": {
          "type": "string",
          "example": 0,
          "enum": [
            1,
            0
          ],
          "description": "\n        Defines whether the metrics page is visible in the report.\n        <br/>\n        Field options:\n        <br/>\n         1 → On <br/> 0 → Off <br/>"
        },
        "pageTechSpecs": {
          "type": "string",
          "example": 0,
          "enum": [
            1,
            0
          ],
          "description": "\n        Defines whether the tech specs section is visible in the report.\n        <br/>\n        Field options:\n        <br/>\n         1 → On <br/> 0 → Off <br/>"
        },
        "pageHes": {
          "type": "string",
          "example": 1,
          "enum": [
            1,
            0
          ],
          "description": "\n        Defines whether the DOE Home Energy Score page is visible in the report.\n        <br/>\n        Field options:\n        <br/>\n         1 → On <br/> 0 → Off <br/>"
        },
        "pageCoc": {
          "type": "string",
          "example": 1,
          "enum": [
            1,
            0
          ],
          "description": "\n        Defines whether the Certificate of Completion page is visible in the report. This page is only available within select programs\n        <br/>\n        Field options:\n        <br/>\n         1 → On <br/> 0 → Off <br/>"
        },
        "pageWorkOrder": {
          "type": "string",
          "example": 1,
          "enum": [
            1,
            0
          ],
          "description": "\n        Defines whether the work order page is visible in the report.\n        <br/>\n        Field options:\n        <br/>\n         1 → On <br/> 0 → Off <br/>"
        },
        "pageGlossary": {
          "type": "string",
          "example": 1,
          "enum": [
            1,
            0
          ],
          "description": "\n        Defines whether the glossary page is visible in the report.\n        <br/>\n        Field options:\n        <br/>\n         1 → On <br/> 0 → Off <br/>"
        },
        "safetyOverview": {
          "type": "string",
          "enum": false,
          "description": "Notes about the health and safety of the home."
        }
      }
    },
    "totals": {
      "properties": {
        "annualFuelThermsUsed": {
          "type": "number",
          "example": 246.06,
          "enum": false,
          "description": "The amount of therms used by the existing home per year"
        },
        "annualFuelThermsImproved": {
          "type": "number",
          "example": 176.03,
          "enum": false,
          "description": "The amount of therms used by the improved home per year."
        },
        "annualFuelThermsSaved": {
          "type": "number",
          "example": 184.93,
          "enum": false,
          "description": "The amount of therms saved by the improved home per year compared to the existing home."
        },
        "annualElectricKWhUsed": {
          "type": "number",
          "example": 383.47,
          "enum": false,
          "description": "The amount of kWh used by the existing home per year"
        },
        "annualElectricKWhImproved": {
          "type": "number",
          "example": 121.01,
          "enum": false,
          "description": "The amount of kWh used by the improved home per year."
        },
        "savedKwh": {
          "type": "number",
          "example": 137.5,
          "enum": false,
          "description": "The amount of kWh saved by the improved home per year compared to the existing home."
        },
        "mbtuBase": {
          "type": "number",
          "example": 700.44,
          "enum": false,
          "description": "The amount of MMBtu used by the existing home per year."
        },
        "mbtuImproved": {
          "type": "number",
          "example": 353.87,
          "enum": false,
          "description": "The amount of MMBtu used by the improved home per year."
        },
        "savedMbtu": {
          "type": "number",
          "example": 806.88,
          "enum": false,
          "description": "The amount of MMBtu saved by the improved home per year compared to the existing home."
        },
        "annualFuelDollarsSpent": {
          "type": "integer",
          "example": 73915,
          "enum": false,
          "description": "The cost of the fuel energy used by the existing home per year."
        },
        "annualFuelDollarsImproved": {
          "type": "integer",
          "example": 51938,
          "enum": false,
          "description": "The cost of the fuel energy used by the improved home per year"
        },
        "annualFuelDollarsSpentSaved": {
          "type": "integer",
          "example": 5669,
          "enum": false,
          "description": "The cost of the fuel energy saved by the improved home per year compared to the existing home."
        },
        "annualElectricDollarsSpent": {
          "type": "integer",
          "example": 54668,
          "enum": false,
          "description": "The cost of the electric energy used by the existing home per year."
        },
        "annualElectricDollarsImproved": {
          "type": "integer",
          "example": 67303,
          "enum": false,
          "description": "The cost of the electric energy used by the improved home per year"
        },
        "annualElectricDollarsSpentSaved": {
          "type": "integer",
          "example": 36255,
          "enum": false,
          "description": "The cost of the electric energy saved by the improved home per year compared to the existing home."
        },
        "yearlyEnergyCost": {
          "type": "number",
          "example": 95.48,
          "enum": false,
          "description": "The total CO2 used by the existing home per year."
        },
        "yearlyEnergyCostImproved": {
          "type": "number",
          "example": 783.49,
          "enum": false,
          "description": "The total CO2 used by the improved home per year"
        },
        "totalSavings": {
          "type": "number",
          "example": 466.17,
          "enum": false,
          "description": "The total CO2 saved by the improved home per year compared to the existing home."
        },
        "installedCosts": {
          "type": "integer",
          "example": 19110,
          "enum": false,
          "description": "The total cost for all of the improvements recommended or installed."
        },
        "savedMbtuPercent": {
          "type": "number",
          "example": 12,
          "enum": false,
          "description": "The percent of total energy saved by all of the improvements recommended or installed."
        },
        "savedCo2Percent": {
          "type": "number",
          "example": 29,
          "enum": false,
          "description": "The percent of total CO2 saved by all of the improvements recommended or installed."
        },
        "paybackYears": {
          "type": "number",
          "example": 837.83,
          "enum": false,
          "description": "The fist year with non-negative cumulative cash flow which includes energy escalation."
        },
        "sir": {
          "type": "number",
          "example": 102.13,
          "enum": false,
          "description": "The Savings to Investment Ratio. If the SIR is 1 or greater, then the energy savings from the item will pay for itself before it needs to be replaced again."
        },
        "mirr": {
          "type": "number",
          "example": 42,
          "enum": false,
          "description": "The Modified Internal Rate of Return. This is the return on investment. Roughly speaking, if you invested the same amount of money for this project into a bank account, your equivalent interest rate from all of the energy savings would be the MIRR."
        }
      }
    },
    "caz": {
      "properties": {
        "uuid": {
          "type": "string",
          "example": "d65b8bc0-e32b-44eb-af61-efb1b18347ed",
          "enum": false,
          "description": "This is a universally unique ID for this item (UUID)."
        },
        "cazName": {
          "type": "string",
          "example": "Some text value",
          "enum": false
        },
        "cazAmbientCo": {
          "type": "integer",
          "example": 836,
          "enum": false,
          "description": "Ambient Carbon Monoxide in Parts Per Million. Should not exceed 35 ppm per BPI Protocol."
        },
        "cazAmbientCoImproved": {
          "type": "integer",
          "example": 64098,
          "enum": false,
          "description": "Ambient Carbon Monoxide in Parts Per Million. Should not exceed 35 ppm per BPI Protocol."
        },
        "cazPoorCaseTest": {
          "type": "number",
          "example": 668.78,
          "enum": false,
          "description": "The poor case CAZ depressurization test is configured by determining the largest combustion appliance zone depressurization attainable at the time of testing due to the combined effects of door position, exhaust appliance operation, and air handler fan operation. A base pressure must be measured with all fans off and doors open. The poor case CAZ depressurization measurement is the pressure difference between the largest depressurization attained at the time of testing and the base pressure."
        },
        "cazPoorCaseTestImproved": {
          "type": "number",
          "example": 646.35,
          "enum": false,
          "description": "The poor case CAZ depressurization test is configured by determining the largest combustion appliance zone depressurization attainable at the time of testing due to the combined effects of door position, exhaust appliance operation, and air handler fan operation. A base pressure must be measured with all fans off and doors open. The poor case CAZ depressurization measurement is the pressure difference between the largest depressurization attained at the time of testing and the base pressure."
        },
        "cazNotes": {
          "type": "string",
          "enum": false,
          "description": "CAZ Zone Notes"
        },
        "cazNotesImproved": {
          "type": "string",
          "enum": false,
          "description": "CAZ Zone Notes"
        },
        "cazSystems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cazSystem"
          }
        }
      }
    },
    "health": {
      "properties": {
        "healthAmbientCarbonMonoxide": {
          "type": "string",
          "example": "Warning",
          "enum": [
            "Passed",
            "Failed",
            "Warning",
            "Not Tested"
          ],
          "description": "\n        Choose the appropriate description for this test. If you performed an actual test and it passed, then choose \"Passed\", if the test failed, then choose \"Failed\". If you did not perform this test, but suspect there might be issues or have notes to provide the homeowner or contractor, then choose \"Warning\". If you did not perform this test and do not want the test information to show up on the homeowner report, then choose \"Not Tested\".\n        <br/>\n        \n        <br/>\n        "
        },
        "healthNaturalConditionSpillage": {
          "type": "string",
          "example": "Warning",
          "enum": [
            "Passed",
            "Failed",
            "Warning",
            "Not Tested"
          ],
          "description": "\n        Choose the appropriate description for this test. If you performed an actual test and it passed, then choose \"Passed\", if the test failed, then choose \"Failed\". If you did not perform this test, but suspect there might be issues or have notes to provide the homeowner or contractor, then choose \"Warning\". If you did not perform this test and do not want the test information to show up on the homeowner report, then choose \"Not Tested\".\n        <br/>\n        \n        <br/>\n        "
        },
        "healthWorstCaseDepressurization": {
          "type": "string",
          "example": "Warning",
          "enum": [
            "Passed",
            "Failed",
            "Warning",
            "Not Tested"
          ],
          "description": "\n        Choose the appropriate description for this test. If you performed an actual test and it passed, then choose \"Passed\", if the test failed, then choose \"Failed\". If you did not perform this test, but suspect there might be issues or have notes to provide the homeowner or contractor, then choose \"Warning\". If you did not perform this test and do not want the test information to show up on the homeowner report, then choose \"Not Tested\".\n        <br/>\n        \n        <br/>\n        "
        },
        "healthWorstCaseSpillage": {
          "type": "string",
          "example": "Passed",
          "enum": [
            "Passed",
            "Failed",
            "Warning",
            "Not Tested"
          ],
          "description": "\n        Choose the appropriate description for this test. If you performed an actual test and it passed, then choose \"Passed\", if the test failed, then choose \"Failed\". If you did not perform this test, but suspect there might be issues or have notes to provide the homeowner or contractor, then choose \"Warning\". If you did not perform this test and do not want the test information to show up on the homeowner report, then choose \"Not Tested\".\n        <br/>\n        \n        <br/>\n        "
        },
        "healthUndilutedFlueCo": {
          "type": "string",
          "example": "Passed",
          "enum": [
            "Passed",
            "Failed",
            "Warning",
            "Not Tested"
          ],
          "description": "\n        Choose the appropriate description for this test. If you performed an actual test and it passed, then choose \"Passed\", if the test failed, then choose \"Failed\". If you did not perform this test, but suspect there might be issues or have notes to provide the homeowner or contractor, then choose \"Warning\". If you did not perform this test and do not want the test information to show up on the homeowner report, then choose \"Not Tested\".\n        <br/>\n        \n        <br/>\n        "
        },
        "healthDraftPressure": {
          "type": "string",
          "example": "Warning",
          "enum": [
            "Passed",
            "Failed",
            "Warning",
            "Not Tested"
          ],
          "description": "\n        Choose the appropriate description for this test. If you performed an actual test and it passed, then choose \"Passed\", if the test failed, then choose \"Failed\". If you did not perform this test, but suspect there might be issues or have notes to provide the homeowner or contractor, then choose \"Warning\". If you did not perform this test and do not want the test information to show up on the homeowner report, then choose \"Not Tested\".\n        <br/>\n        \n        <br/>\n        "
        },
        "healthGasLeak": {
          "type": "string",
          "example": "Passed",
          "enum": [
            "Passed",
            "Failed",
            "Warning",
            "Not Tested"
          ],
          "description": "\n        Choose the appropriate description for this test. If you performed an actual test and it passed, then choose \"Passed\", if the test failed, then choose \"Failed\". If you did not perform this test, but suspect there might be issues or have notes to provide the homeowner or contractor, then choose \"Warning\". If you did not perform this test and do not want the test information to show up on the homeowner report, then choose \"Not Tested\".\n        <br/>\n        \n        <br/>\n        "
        },
        "healthVenting": {
          "type": "string",
          "example": "Not Tested",
          "enum": [
            "Passed",
            "Failed",
            "Warning",
            "Not Tested"
          ],
          "description": "\n        Choose the appropriate description for this test. If you performed an actual test and it passed, then choose \"Passed\", if the test failed, then choose \"Failed\". If you did not perform this test, but suspect there might be issues or have notes to provide the homeowner or contractor, then choose \"Warning\". If you did not perform this test and do not want the test information to show up on the homeowner report, then choose \"Not Tested\".\n        <br/>\n        \n        <br/>\n        "
        },
        "healthMoldMoisture": {
          "type": "string",
          "example": "Not Tested",
          "enum": [
            "Passed",
            "Failed",
            "Warning",
            "Not Tested"
          ],
          "description": "\n        Choose the appropriate description for this test. If you performed an actual test and it passed, then choose \"Passed\", if the test failed, then choose \"Failed\". If you did not perform this test, but suspect there might be issues or have notes to provide the homeowner or contractor, then choose \"Warning\". If you did not perform this test and do not want the test information to show up on the homeowner report, then choose \"Not Tested\".\n        <br/>\n        \n        <br/>\n        "
        },
        "healthRadon": {
          "type": "string",
          "example": "Warning",
          "enum": [
            "Passed",
            "Failed",
            "Warning",
            "Not Tested"
          ],
          "description": "\n        Choose the appropriate description for this test. If you performed an actual test and it passed, then choose \"Passed\", if the test failed, then choose \"Failed\". If you did not perform this test, but suspect there might be issues or have notes to provide the homeowner or contractor, then choose \"Warning\". If you did not perform this test and do not want the test information to show up on the homeowner report, then choose \"Not Tested\".\n        <br/>\n        \n        <br/>\n        "
        },
        "healthAsbestos": {
          "type": "string",
          "example": "Failed",
          "enum": [
            "Passed",
            "Failed",
            "Warning",
            "Not Tested"
          ],
          "description": "\n        Choose the appropriate description for this test. If you performed an actual test and it passed, then choose \"Passed\", if the test failed, then choose \"Failed\". If you did not perform this test, but suspect there might be issues or have notes to provide the homeowner or contractor, then choose \"Warning\". If you did not perform this test and do not want the test information to show up on the homeowner report, then choose \"Not Tested\".\n        <br/>\n        \n        <br/>\n        "
        },
        "healthLead": {
          "type": "string",
          "example": "Passed",
          "enum": [
            "Passed",
            "Failed",
            "Warning",
            "Not Tested"
          ],
          "description": "\n        Choose the appropriate description for this test. If you performed an actual test and it passed, then choose \"Passed\", if the test failed, then choose \"Failed\". If you did not perform this test, but suspect there might be issues or have notes to provide the homeowner or contractor, then choose \"Warning\". If you did not perform this test and do not want the test information to show up on the homeowner report, then choose \"Not Tested\".\n        <br/>\n        \n        <br/>\n        "
        },
        "healthElectrical": {
          "type": "string",
          "example": "Passed",
          "enum": [
            "Passed",
            "Failed",
            "Warning",
            "Not Tested"
          ],
          "description": "\n        Choose the appropriate description for this test. If you performed an actual test and it passed, then choose \"Passed\", if the test failed, then choose \"Failed\". If you did not perform this test, but suspect there might be issues or have notes to provide the homeowner or contractor, then choose \"Warning\". If you did not perform this test and do not want the test information to show up on the homeowner report, then choose \"Not Tested\".\n        <br/>\n        \n        <br/>\n        "
        }
      }
    },
    "basedata": {
      "properties": {
        "yearBuilt": {
          "type": "string",
          "example": "1923",
          "maximum": 2017,
          "minimum": 1800,
          "enum": false,
          "description": "Enter the year the home or building was constructed. If there was a major addition made to the home, the \"Year built\" should be entered as the year the majority of the area that is heated and air conditioned was built."
        },
        "conditionedArea": {
          "type": "number",
          "example": 850,
          "maximum": 100000,
          "minimum": 100,
          "enum": false,
          "description": "Enter the total area of the home that is heated or air conditioned. This may be different from the typical measure of the size of the home, especially if you have a heated garage or similar area of the home that receives heating or air conditioning. Make sure to include any space of the home that has heating or air conditioning, including conditioned basements (unless you mark the next field \"Area Includes Basement\" as No). "
        },
        "averageWallHeight": {
          "type": "number",
          "example": 7.5,
          "maximum": 20,
          "minimum": 6,
          "enum": false,
          "description": "Enter the average floor to ceiling wall height (internal measurement). This is used to calculate the volume of the home as well as the wall surface area. <br><br><strong>Please note:</strong> When we calculate the volume of the house, we add an additional foot of height for the basement rim joists (if there is a basement), and an additional foot of height for every story above one (if there are any)."
        },
        "houseLength": {
          "type": "number",
          "example": 21.5,
          "maximum": 500,
          "minimum": 10,
          "enum": false,
          "description": "Enter the length of the longest side of the smallest rectangle into which the home's footprint will fit. <br><br><strong>Please note:</strong> This is used only to calculate the surface area of the exterior walls, and has nothing to do with the conditioned square footage, volume, or any other calculations.<br><br>\n\nThis should give a fairly precise estimate of wall surface area in all circumstances except when the house is shaped like a U. If the home is shaped like a U, you'll need to override the total wall sqft in the Wall Details section with the additional surface area. See the knowledge base article on this for more information."
        },
        "houseWidth": {
          "type": "number",
          "example": 21.5,
          "maximum": 500,
          "minimum": 10,
          "enum": false,
          "description": "Enter the width of the longest side of the smallest rectangle into which the home's footprint will fit. <br><br><strong>Please note:</strong> This is used only to calculate the surface area of the walls, and has nothing to do with the conditioned square footage, volume, or any other calculations. This should give a fairly precise estimate of wall surface area in all circumstances except when the house is shaped like a U."
        },
        "floorsAboveGrade": {
          "type": "number",
          "example": 1.5,
          "maximum": 5,
          "minimum": 1,
          "enum": false,
          "description": "Select the number of stories for the living area of this home, not counting any basement or walkout as a story. If this home is in a multi-story, multi-family complex, report only those stories in the living area of this particular home, which could likely be less than the total number of stories of the building."
        },
        "numberOfOccupants": {
          "type": "number",
          "example": 2,
          "maximum": 100,
          "minimum": 1,
          "enum": false,
          "description": "Enter the number of people that live full-time in the home. If there are people that live in the home only part of the year (e.g., a student away at college or an adult that travels for business a significant amount each year) then for purposes of this audit count that individual as only 1/2 (0.5) of a person.<br><br>This field directly affects human internal gains. If you don't set the bedrooms, then the occupants are used to estimate the bedrooms. Only the bedrooms field impact appliance usage levels. Occupants also impact the ASHRAE 62.2-2013 minimum ventilation.<br><br>"
        },
        "typeOfHome": {
          "type": "string",
          "example": "Apartment",
          "enum": [
            "Apartment",
            "Condominium",
            "Single Family Detached",
            "Single Family Attached",
            "Mobile Home",
            "Don't Know"
          ],
          "description": "\n        Select the type of home that most closely resembles this home. Single-family Attached would be a duplex or a townhome with shared walls. <br><br><strong>Please note:</strong> that only multi-family units with independently metered fuel and electricity can be modeled with this software.\n        <br/>\n        \n        <br/>\n        "
        },
        "frontOfBuildingOrientation": {
          "type": "string",
          "example": "South West",
          "enum": [
            "North",
            "North East",
            "East",
            "South East",
            "South",
            "South West",
            "West",
            "North West"
          ],
          "description": "\n        Select the closest direction that the Length of the house as designated above faces (either of the opposite directions is fine). If the home is square, then choose the direction the main entry door of the home faces.\n        <br/>\n        \n        <br/>\n        "
        },
        "tuckUnderGarage": {
          "type": "string",
          "example": "Yes",
          "enum": [
            "Yes",
            "No"
          ],
          "description": "\n        Is there any conditioned living space over an unconditioned garage, cantilever, or frame floor that might need floor insulation? <br><br> This data is used for the \"Insulate Floors\" recommendation. For cantilevers, adjust the total sqft on the refine screen or the details section.\n        <br/>\n        \n        <br/>\n        "
        },
        "garageSize": {
          "type": "string",
          "example": "4-car",
          "enum": [
            "1-car",
            "2-car",
            "3-car",
            "4-car",
            "5-car"
          ],
          "description": "\n        Enter the number of cars that could fit in the the parking area of the garage. The software assumes an extra 100 sqft of storage and other space and each car takes up 200 sqft of space.<br><br>This data is used for the \"Insulate Floors\" recommendation. For cantilevers, adjust the total sqft on the refine screen or the details section.\n        <br/>\n        \n        <br/>\n        "
        },
        "programmableThermostatInstalled": {
          "type": "string",
          "example": "No",
          "enum": [
            "Yes",
            "No"
          ],
          "description": "\n        Is a programmable (setback) thermostat installed in the house? If it is installed, but not used, still check this box and adjust the thermostat settings accordingly. This button determines if a cost is added to the Programmable Thermostat recommendation. If you check Yes, then no cost will be added, but the software will still recommend ideal setpoints for the home for energy savings. If you check No, then a cost will be added to the recommendation and the ideal setpoints will also be shown in the recommendation.\n        <br/>\n        \n        <br/>\n        "
        },
        "heatingSetpointHigh": {
          "type": "string",
          "example": 65,
          "enum": false,
          "description": "Enter the heating thermostat temperature setting (&deg;F) that is used most often when the home is occupied and used by people for normal daily activities. This is often the setting used when people are at home in the mornings before going to school or work and again when they return home from school and work in the afternoon or evening before they go to sleep for the night.<br><br>\n\n<strong>Note:</strong> The goal of this is to determine the average temperature of the home for this time period and situation (cooling or heating). If the heating system just can't keep up and never meets the setpoint on cold days or similar for the cooling system, then adjust the setpoint to closer resemble the actual temperature of the home. Since this is hard to determine, you may enter a range of temperatures for each of the setpoints separated by a dash (no spaces). For example, you can set the Low temp setpoint for heating at 60-65 and the High temp setpoint at 68-71."
        },
        "heatingSetpointHighImproved": {
          "type": "integer",
          "example": 65,
          "enum": false,
          "description": "Enter the heating thermostat temperature setting (&deg;F) that is used most often when the home is occupied and used by people for normal daily activities. This is often the setting used when people are at home in the mornings before going to school or work and again when they return home from school and work in the afternoon or evening before they go to sleep for the night.<br><br>\n\n<strong>Note:</strong> The goal of this is to determine the average temperature of the home for this time period and situation (cooling or heating). If the heating system just can't keep up and never meets the setpoint on cold days or similar for the cooling system, then adjust the setpoint to closer resemble the actual temperature of the home. Since this is hard to determine, you may enter a range of temperatures for each of the setpoints separated by a dash (no spaces). For example, you can set the Low temp setpoint for heating at 60-65 and the High temp setpoint at 68-71."
        },
        "heatingSetpointLow": {
          "type": "string",
          "example": 62,
          "maximum": 90,
          "minimum": 50,
          "enum": false,
          "description": "Enter the heating thermostat temperature setting (&deg;F) that is used most often when the home is not occupied. This is often the setting used when people have left the home in the mornings to go to school or work and again when they have gone to sleep for the night.<br><br>\n\n<strong>Note:</strong> The goal of this is to determine the average temperature of the home for this time period and situation (cooling or heating). If the heating system just can't keep up and never meets the setpoint on cold days or similar for the cooling system, then adjust the setpoint to closer resemble the actual temperature of the home. Since this is hard to determine, you may enter a range of temperatures for each of the setpoints separated by a dash (no spaces). For example, you can set the Low temp setpoint for heating at 60-65 and the High temp setpoint at 68-71."
        },
        "heatingSetpointLowImproved": {
          "type": "integer",
          "example": 62,
          "maximum": 90,
          "minimum": 50,
          "enum": false,
          "description": "Enter the heating thermostat temperature setting (&deg;F) that is used most often when the home is not occupied. This is often the setting used when people have left the home in the mornings to go to school or work and again when they have gone to sleep for the night.<br><br>\n\n<strong>Note:</strong> The goal of this is to determine the average temperature of the home for this time period and situation (cooling or heating). If the heating system just can't keep up and never meets the setpoint on cold days or similar for the cooling system, then adjust the setpoint to closer resemble the actual temperature of the home. Since this is hard to determine, you may enter a range of temperatures for each of the setpoints separated by a dash (no spaces). For example, you can set the Low temp setpoint for heating at 60-65 and the High temp setpoint at 68-71."
        },
        "coolingSetpointHigh": {
          "type": "string",
          "example": 78,
          "maximum": 90,
          "minimum": 50,
          "enum": false,
          "description": "Enter the cooling thermostat temperature setting (&deg;F) that is used most often when the home is not occupied. This is often the setting used when people have left the home in the mornings to go to school or work and again when they have gone to sleep for the night.<br><br>\n\n<strong>Note:</strong> The goal of this is to determine the average temperature of the home for this time period and situation (cooling or heating). If the heating system just can't keep up and never meets the setpoint on cold days or similar for the cooling system, then adjust the setpoint to closer resemble the actual temperature of the home. Since this is hard to determine, you may enter a range of temperatures for each of the setpoints separated by a dash (no spaces). For example, you can set the Low temp setpoint for heating at 60-65 and the High temp setpoint at 68-71."
        },
        "coolingSetpointHighImproved": {
          "type": "integer",
          "example": 78,
          "maximum": 90,
          "minimum": 50,
          "enum": false,
          "description": "Enter the cooling thermostat temperature setting (&deg;F) that is used most often when the home is not occupied. This is often the setting used when people have left the home in the mornings to go to school or work and again when they have gone to sleep for the night.<br><br>\n\n<strong>Note:</strong> The goal of this is to determine the average temperature of the home for this time period and situation (cooling or heating). If the heating system just can't keep up and never meets the setpoint on cold days or similar for the cooling system, then adjust the setpoint to closer resemble the actual temperature of the home. Since this is hard to determine, you may enter a range of temperatures for each of the setpoints separated by a dash (no spaces). For example, you can set the Low temp setpoint for heating at 60-65 and the High temp setpoint at 68-71."
        },
        "coolingSetpointLow": {
          "type": "string",
          "example": 70,
          "maximum": 90,
          "minimum": 50,
          "enum": false,
          "description": "Enter the cooling thermostat temperature setting (&deg;F) that is used most often when the home is occupied and used by people for normal daily activities. This is often the setting used when people are at home in the mornings before going to school or work and again when they return home from school and work in the afternoon or evening before they go to sleep for the night.<br><br>\n\n<strong>Note:</strong> The goal of this is to determine the average temperature of the home for this time period and situation (cooling or heating). If the heating system just can't keep up and never meets the setpoint on cold days or similar for the cooling system, then adjust the setpoint to closer resemble the actual temperature of the home. Since this is hard to determine, you may enter a range of temperatures for each of the setpoints separated by a dash (no spaces). For example, you can set the Low temp setpoint for heating at 60-65 and the High temp setpoint at 68-71."
        },
        "coolingSetpointLowImproved": {
          "type": "integer",
          "example": 70,
          "maximum": 90,
          "minimum": 50,
          "enum": false,
          "description": "Enter the cooling thermostat temperature setting (&deg;F) that is used most often when the home is occupied and used by people for normal daily activities. This is often the setting used when people are at home in the mornings before going to school or work and again when they return home from school and work in the afternoon or evening before they go to sleep for the night.<br><br>\n\n<strong>Note:</strong> The goal of this is to determine the average temperature of the home for this time period and situation (cooling or heating). If the heating system just can't keep up and never meets the setpoint on cold days or similar for the cooling system, then adjust the setpoint to closer resemble the actual temperature of the home. Since this is hard to determine, you may enter a range of temperatures for each of the setpoints separated by a dash (no spaces). For example, you can set the Low temp setpoint for heating at 60-65 and the High temp setpoint at 68-71."
        },
        "totalNumberOfLightBulbs": {
          "type": "integer",
          "example": 30,
          "maximum": 999,
          "minimum": 0,
          "enum": false,
          "description": "Count the number of light bulbs in the home. This count assumes an average of 60 watts for each bulb. Remember to look in closets and other hidden areas for lights as well. In the Details section the Base and Improved numbers are calculated as a total of the number of bulbs for each side. "
        },
        "totalNumberOfLightBulbsImproved": {
          "type": "integer",
          "example": 30,
          "maximum": 999,
          "minimum": 0,
          "enum": false,
          "description": "Count the number of light bulbs in the home. This count assumes an average of 60 watts for each bulb. Remember to look in closets and other hidden areas for lights as well. In the Details section the Base and Improved numbers are calculated as a total of the number of bulbs for each side. "
        },
        "sharedWallsNorth": {
          "type": "number",
          "example": 15,
          "maximum": 100,
          "minimum": 0,
          "enum": false,
          "description": "Enter the percent of this wall that is shared with another unit (assumed an adiabatic wall). "
        },
        "percentOfCeilingsShared": {
          "type": "number",
          "example": 25,
          "maximum": 100,
          "minimum": 0,
          "enum": false,
          "description": "Select the % of heated or conditioned space (from a seperatly metered apartment or unit) above your apartment / condominium / single-family attached home? If this is a single family detached home, leave this blank or at 0."
        },
        "percentOfFloorsShared": {
          "type": "number",
          "example": 0,
          "maximum": 100,
          "minimum": 0,
          "enum": false,
          "description": "Select the % of heated or conditioned space (from a separately metered apartment or unit) below your apartment / condominium / single-family attached home? If this is a single family detached home, leave this blank or at 0."
        },
        "foundationBasement": {
          "type": "number",
          "example": 40,
          "maximum": 100,
          "minimum": 0,
          "enum": false,
          "description": "Select the percentage of foundation that is <strong>basement</strong>, <strong>crawlspace</strong> or <strong>slab on grade</strong>. Total of all three foundation types cannot exceed 100%."
        },
        "foundationAboveGradeHeight": {
          "type": "number",
          "example": 2,
          "maximum": 4,
          "minimum": 0,
          "enum": false,
          "description": "For the parts of the basement or crawl space that are above grade (above ground), enter the average height (in feet) of this exposed foundation for the entire perimeter of the home."
        },
        "basementWallInsulation": {
          "type": "string",
          "example": "Unfinished frame wall with fiberglass batts",
          "enum": [
            "None or Bare Walls",
            "Fiberglass blanket",
            "Unfinished frame wall with fiberglass batts",
            "Finished wall without Insulation",
            "Finished wall with Insulation",
            "Don't Know"
          ],
          "description": "\n        Select the type of materials used, if any, on the basement walls of this home. If more than one type of material is used on the basement walls, select the type of material that is used on the most wall area of the basement. If the basement walls have insulation installed on the exterior of the walls, select the option \"Finished walls with insulation\".\n        <br/>\n        \n        <br/>\n        "
        },
        "crawlspaceInsulation": {
          "type": "string",
          "example": "Crawlspace has insulation installed under only the living space floor",
          "enum": [
            "Crawlspace has insulation installed on the exterior wall area",
            "Crawlspace has insulation installed under only the living space floor",
            "Crawlspace is uninsulated",
            "Don't Know"
          ],
          "description": "\n        What you type here will show up in the details page for \"Insulate Crawl Space\" on the homeowner report.\n        <br/>\n        \n        <br/>\n        "
        },
        "blowerDoorReading": {
          "type": "number",
          "example": 863,
          "maximum": 99999,
          "minimum": 0,
          "enum": false,
          "description": "The baseline airflow, in cubic feet per minute, through leaks in the building when there is a pressure difference between the building and ambient of 50 Pascals. This is the result of your blower door test if you perform one. If you do not enter a number here, the software will determine an appropriate number based on the age and size of the home.<br><br>\nOn the improved side, the default recommendation is a 25% reduction in the air leakage. You may of course override this to whatever number you feel you'll be able to achieve."
        },
        "blowerDoorReadingImproved": {
          "type": "number",
          "example": 863,
          "maximum": 99999,
          "minimum": 0,
          "enum": false,
          "description": "The baseline airflow, in cubic feet per minute, through leaks in the building when there is a pressure difference between the building and ambient of 50 Pascals. This is the result of your blower door test if you perform one. If you do not enter a number here, the software will determine an appropriate number based on the age and size of the home.<br><br>\nOn the improved side, the default recommendation is a 25% reduction in the air leakage. You may of course override this to whatever number you feel you'll be able to achieve."
        },
        "equivalentNach": {
          "type": "number",
          "example": 468.13,
          "enum": false,
          "description": "NACH is the number of times in one hour the entire volume of air inside the building leaks to the outside naturally. It is calculated from the Air Infiltration number in CFM50, the number of stories, the wind zone and type of shielding the house has."
        },
        "equivalentNachImproved": {
          "type": "number",
          "example": 533.81,
          "enum": false,
          "description": "NACH is the number of times in one hour the entire volume of air inside the building leaks to the outside naturally. It is calculated from the Air Infiltration number in CFM50, the number of stories, the wind zone and type of shielding the house has."
        },
        "conditionedAirVolume": {
          "type": "number",
          "example": 381083.72,
          "maximum": 1000000,
          "minimum": 100,
          "enum": false,
          "description": "The conditioned air volume is calculated from the Conditioned Area and the Average Wall Height. This is really available for informational purposes and in most cases should not be edited."
        },
        "effectiveLeakageArea": {
          "type": "number",
          "example": 51.67,
          "enum": false,
          "description": "Effective (or Equivalent) Leakage Area in square inches. This is the area of a theoretical hole (with rounded edges) in the building envelope that would produce a leakage equivalent to that produced by the actual building at 4 Pascals of pressure."
        },
        "effectiveLeakageAreaImproved": {
          "type": "number",
          "example": 597.78,
          "enum": false,
          "description": "Effective (or Equivalent) Leakage Area in square inches. This is the area of a theoretical hole (with rounded edges) in the building envelope that would produce a leakage equivalent to that produced by the actual building at 4 Pascals of pressure."
        },
        "equivalentAch50": {
          "type": "number",
          "example": 832.51,
          "enum": false,
          "description": "ACH50 is the number of times in one hour the entire volume of air inside the building leaks to the outside when depressurized to 50 Pascals. This number is automatically calculated based on the house volume and the Air Infiltration number in CFM50."
        },
        "equivalentAch50Improved": {
          "type": "number",
          "example": 68.9,
          "enum": false,
          "description": "ACH50 is the number of times in one hour the entire volume of air inside the building leaks to the outside when depressurized to 50 Pascals. This number is automatically calculated based on the house volume and the Air Infiltration number in CFM50."
        },
        "modeledBasementWallArea": {
          "type": "number",
          "example": 732039.95,
          "maximum": 1000000,
          "minimum": 0,
          "enum": false,
          "description": "This is the total wall area along the exposed perimeter (i.e. wall area eligible for insulation improvements). Warning: Changing the wall area will not effect the model. Wall area is only used in calculating improvement costs."
        },
        "basementCavityInsulation": {
          "type": "number",
          "example": 32.41,
          "maximum": 50,
          "minimum": 0,
          "enum": false,
          "description": "Enter the total R-value of insulation installed (BASE) or to be installed (IMPROVED) in the framed cavity of the basement walls. If there is no framing, use Continuous Insulation below to specify insulation types such as fiberglass drape or rigid insulation.<br><br>\n\n<strong>Note:</strong><br>\nEdit Base fields in the Details section only if you're confident of the actual value that is entered. The modeling engine utilizes utility data and input form data to determine the \"effective\" values on the Base side.<br><br>\n\nEdit Improved fields in the Details section with the details of what you recommend be installed in the house. These values are only used if the item is Recommended. Default values are supplied by the modeling engine, but can be overridden.<br><br>"
        },
        "basementCavityInsulationImproved": {
          "type": "number",
          "example": 35.93,
          "maximum": 50,
          "minimum": 0,
          "enum": false,
          "description": "Enter the total R-value of insulation installed (BASE) or to be installed (IMPROVED) in the framed cavity of the basement walls. If there is no framing, use Continuous Insulation below to specify insulation types such as fiberglass drape or rigid insulation.<br><br>\n\n<strong>Note:</strong><br>\nEdit Base fields in the Details section only if you're confident of the actual value that is entered. The modeling engine utilizes utility data and input form data to determine the \"effective\" values on the Base side.<br><br>\n\nEdit Improved fields in the Details section with the details of what you recommend be installed in the house. These values are only used if the item is Recommended. Default values are supplied by the modeling engine, but can be overridden.<br><br>"
        },
        "basementContinuousInsulation": {
          "type": "number",
          "example": 36.67,
          "maximum": 50,
          "minimum": 0,
          "enum": false,
          "description": "Enter the total R-value of insulation installed (BASE) or to be installed (IMPROVED) in on the basement walls such as a fiberglass drape or rigid insulation. If the basement walls are framed out, then specify the R-value in the Cavity Insulation field above.<br><br>\n\n<strong>Note:</strong><br>\nEdit Base fields in the Details section only if you're confident of the actual value that is entered. The modeling engine utilizes utility data and input form data to determine the \"effective\" values on the Base side.<br><br>\n\nEdit Improved fields in the Details section with the details of what you recommend be installed in the house. These values are only used if the item is Recommended. Default values are supplied by the modeling engine, but can be overridden.<br><br>"
        },
        "basementContinuousInsulationImproved": {
          "type": "number",
          "example": 12.31,
          "maximum": 50,
          "minimum": 0,
          "enum": false,
          "description": "Enter the total R-value of insulation installed (BASE) or to be installed (IMPROVED) in on the basement walls such as a fiberglass drape or rigid insulation. If the basement walls are framed out, then specify the R-value in the Cavity Insulation field above.<br><br>\n\n<strong>Note:</strong><br>\nEdit Base fields in the Details section only if you're confident of the actual value that is entered. The modeling engine utilizes utility data and input form data to determine the \"effective\" values on the Base side.<br><br>\n\nEdit Improved fields in the Details section with the details of what you recommend be installed in the house. These values are only used if the item is Recommended. Default values are supplied by the modeling engine, but can be overridden.<br><br>"
        },
        "floorCavityInsulation": {
          "type": "number",
          "example": 0,
          "maximum": 100,
          "minimum": 0,
          "enum": false,
          "description": "Enter the total R-value of insulation installed (BASE) or to be installed (IMPROVED) in the Floor Cavity.<br><br>\n\n<strong>Note:</strong><br>\nEdit Base fields in the Details section only if you're confident of the actual value that is entered. The modeling engine utilizes utility data and input form data to determine the \"effective\" values on the Base side.<br><br>\n\nEdit Improved fields in the Details section with the details of what you recommend be installed in the house. These values are only used if the item is Recommended. Default values are supplied by the modeling engine, but can be overridden.<br><br>"
        },
        "floorCavityInsulationImproved": {
          "type": "number",
          "example": 0,
          "maximum": 100,
          "minimum": 0,
          "enum": false,
          "description": "Enter the total R-value of insulation installed (BASE) or to be installed (IMPROVED) in the Floor Cavity.<br><br>\n\n<strong>Note:</strong><br>\nEdit Base fields in the Details section only if you're confident of the actual value that is entered. The modeling engine utilizes utility data and input form data to determine the \"effective\" values on the Base side.<br><br>\n\nEdit Improved fields in the Details section with the details of what you recommend be installed in the house. These values are only used if the item is Recommended. Default values are supplied by the modeling engine, but can be overridden.<br><br>"
        },
        "floorContinuousInsulation": {
          "type": "number",
          "example": 5,
          "maximum": 100,
          "minimum": 0,
          "enum": false,
          "description": "Enter the total R-value of continuous insulation installed or to be installed under the Frame Floor. Continuous insulation is any insulation like spray foam or rigid foam that is continuous and consistent in R-value across studs, joists, or any framing member.<br><br>\n\n<strong>Note:</strong><br>\nEdit Base fields in the Details section only if you're confident of the actual value that is entered. The modeling engine utilizes utility data and input form data to determine the \"effective\" values on the Base side.<br><br>\n\nEdit Improved fields in the Details section with the details of what you recommend be installed in the house. These values are only used if the item is Recommended. Default values are supplied by the modeling engine, but can be overridden.<br><br>"
        },
        "floorContinuousInsulationImproved": {
          "type": "number",
          "example": 5,
          "maximum": 100,
          "minimum": 0,
          "enum": false,
          "description": "Enter the total R-value of continuous insulation installed or to be installed under the Frame Floor. Continuous insulation is any insulation like spray foam or rigid foam that is continuous and consistent in R-value across studs, joists, or any framing member.<br><br>\n\n<strong>Note:</strong><br>\nEdit Base fields in the Details section only if you're confident of the actual value that is entered. The modeling engine utilizes utility data and input form data to determine the \"effective\" values on the Base side.<br><br>\n\nEdit Improved fields in the Details section with the details of what you recommend be installed in the house. These values are only used if the item is Recommended. Default values are supplied by the modeling engine, but can be overridden.<br><br>"
        },
        "modeledFloorArea": {
          "type": "number",
          "example": 250,
          "maximum": 1000000,
          "minimum": 0,
          "enum": false,
          "description": "This field will be automatically calculated based on the data you entered in the input form for Tuck Under Garage and the associated Garage Size. This field can also be used to identify cantilevers over other unconditioned space.<br><br>\n\nEnter the area of frame floors that serve as a thermal boundary to the conditioned space, excluding those over foundation crawl spaces or basements."
        },
        "sharedWallsEast": {
          "type": "number",
          "example": 64,
          "maximum": 100,
          "minimum": 0,
          "enum": false,
          "description": "Enter the percent of this wall that is shared with another unit (assumed an adiabatic wall). "
        },
        "sharedWallsSouth": {
          "type": "number",
          "example": 83,
          "maximum": 100,
          "minimum": 0,
          "enum": false,
          "description": "Enter the percent of this wall that is shared with another unit (assumed an adiabatic wall). "
        },
        "sharedWallsWest": {
          "type": "number",
          "example": 45,
          "maximum": 100,
          "minimum": 0,
          "enum": false,
          "description": "Enter the percent of this wall that is shared with another unit (assumed an adiabatic wall). "
        },
        "foundationCrawlspace": {
          "type": "number",
          "example": 30,
          "maximum": 100,
          "minimum": 0,
          "enum": false,
          "description": "Select the percentage of foundation that is <strong>basement</strong>, <strong>crawlspace</strong> or <strong>slab on grade</strong>. Total of all three foundation types cannot exceed 100%."
        },
        "foundationSlab": {
          "type": "number",
          "example": 20,
          "maximum": 100,
          "minimum": 0,
          "enum": false,
          "description": "Select the percentage of foundation that is <strong>basement</strong>, <strong>crawlspace</strong> or <strong>slab on grade</strong>. Total of all three foundation types cannot exceed 100%."
        },
        "percentCflsOrLeds": {
          "type": "string",
          "example": "100%",
          "enum": [
            "0%",
            "1-25%",
            "26-50%",
            "51-75%",
            "76-99%",
            "100%",
            "Don't Know"
          ],
          "description": "\n        Select the percentage range that most closely represents the percentage of lamps and fixtures on the home that are fitted with compact fluorescent lights (CLFs).\n        <br/>\n        \n        <br/>\n        "
        },
        "crawlCavityInsulation": {
          "type": "number",
          "example": 9.68,
          "maximum": 50,
          "minimum": 0,
          "enum": false,
          "description": "Enter the total R-value of insulation installed (BASE) or to be installed (IMPROVED) in the framed cavity of the crawlspace ceiling. This field is active only if you are treating the crawlspace as an unconditioned space.<br><br>\n\n<strong>Note:</strong><br>\nEdit Base fields in the Details section only if you're confident of the actual value that is entered. The modeling engine utilizes utility data and input form data to determine the \"effective\" values on the Base side.<br><br>\n\nEdit Improved fields in the Details section with the details of what you recommend be installed in the house. These values are only used if the item is Recommended. Default values are supplied by the modeling engine, but can be overridden.<br><br>"
        },
        "crawlCavityInsulationImproved": {
          "type": "number",
          "example": 12.52,
          "maximum": 50,
          "minimum": 0,
          "enum": false,
          "description": "Enter the total R-value of insulation installed (BASE) or to be installed (IMPROVED) in the framed cavity of the crawlspace ceiling. This field is active only if you are treating the crawlspace as an unconditioned space.<br><br>\n\n<strong>Note:</strong><br>\nEdit Base fields in the Details section only if you're confident of the actual value that is entered. The modeling engine utilizes utility data and input form data to determine the \"effective\" values on the Base side.<br><br>\n\nEdit Improved fields in the Details section with the details of what you recommend be installed in the house. These values are only used if the item is Recommended. Default values are supplied by the modeling engine, but can be overridden.<br><br>"
        },
        "crawlWallInsulation": {
          "type": "number",
          "example": 44.97,
          "maximum": 50,
          "minimum": 0,
          "enum": false,
          "description": "Enter the total R-value of insulation installed (BASE) or to be installed (IMPROVED) in on the crawlspace walls such as a fiberglass drape or spray foam insulation. This field is active only if you are treating the crawlspace as a conditioned space.<br><br>\n\n<strong>Note:</strong><br>\nEdit Base fields in the Details section only if you're confident of the actual value that is entered. The modeling engine utilizes utility data and input form data to determine the \"effective\" values on the Base side.<br><br>\n\nEdit Improved fields in the Details section with the details of what you recommend be installed in the house. These values are only used if the item is Recommended. Default values are supplied by the modeling engine, but can be overridden.<br><br>\n\n"
        },
        "crawlWallInsulationImproved": {
          "type": "number",
          "example": 3.79,
          "maximum": 50,
          "minimum": 0,
          "enum": false,
          "description": "Enter the total R-value of insulation installed (BASE) or to be installed (IMPROVED) in on the crawlspace walls such as a fiberglass drape or spray foam insulation. This field is active only if you are treating the crawlspace as a conditioned space.<br><br>\n\n<strong>Note:</strong><br>\nEdit Base fields in the Details section only if you're confident of the actual value that is entered. The modeling engine utilizes utility data and input form data to determine the \"effective\" values on the Base side.<br><br>\n\nEdit Improved fields in the Details section with the details of what you recommend be installed in the house. These values are only used if the item is Recommended. Default values are supplied by the modeling engine, but can be overridden.<br><br>\n\n"
        },
        "modeledCrawlWallArea": {
          "type": "number",
          "example": 692562.49,
          "maximum": 1000000,
          "minimum": 0,
          "enum": false,
          "description": "This field will be automatically calculated based on the data you entered in the input form for House Length and House Width. This is the total wall area along the exposed perimeter (i.e. wall area eligible for insulation improvements).<br><br>\n\nWarning: Changing the wall area will not effect the model. Wall area is only used in calculating improvement costs."
        },
        "modeledCrawlFloorArea": {
          "type": "number",
          "example": 940167.83,
          "maximum": 1000000,
          "minimum": 0,
          "enum": false,
          "description": "This field will be automatically calculated based on the data you entered in the input form for Conditioned Area, Number of Stories, and Foundation Makeup.<br><br>"
        },
        "crawlspaceType": {
          "type": "string",
          "example": "Vented - Summer Only",
          "enum": [
            "Unvented - Unconditioned Crawl",
            "Vented - Year Round",
            "Vented - Summer Only",
            "Conditioned Crawl"
          ],
          "description": "\n        Choose the type of venting and conditioning in the crawlspace. Your choice will enable or disable the Wall and Floor Cavity Insulation fields in the Crawlspace Details section depending on the appropriate situation.<br><br>\n\n<strong>Unvented - Unconditioned Crawl</strong>: This unconditioned crawlspace scenario is where the building floor above the crawl space is the thermal boundary to the home. If there were insulation, it would be applied applied to the building floor (crawlspace ceiling). This crawlspace does not have direct vents to the outside air.<br><br>\n\n<strong>Vented - Year Round</strong>: This is an unconditioned crawlspace where the building floor above the crawl space is the thermal boundary to the home. If there were insulation, it would be applied to the building floor (crawlspace ceiling). This crawlspace has direct vents to the outside air, and those vents remain open all year long.<br><br>\n\n<strong>Vented - Summer Only</strong>: This is an unconditioned crawlspace where the building floor above the crawl space is the thermal boundary to the home. If there were insulation, it would be applied to the building floor (crawlspace ceiling). This crawlspace has direct vents to the outside air, and those vents remain open only during summer months.<br><br>\n\n<strong>Conditioned Crawl</strong>: This is a conditioned crawlspace where the foundation walls and ground/slab of the crawl space are the thermal boundary. If there is insulation, it would be applied to the foundation wall and rim joists. In this scenario, there is no venting to the outside and the crawlspace floor is covered with a vapor barrier on top of the dirt floor. Building code often requires adding a jump vent to the main conditioned space in the house or ducting the furnace and/or A/C into the crawlspace as well. If the crawl does not have a jump vent or supply ducts, you will likely get a slight overestimate of energy use. The model assumes that the crawl temperature is a mixture of 20% ground temp and 80% indoor temp.\n\nNote: This field also triggers the Rim Joist options for the Crawlspace. You must set this field to Conditioned Crawl to be able to specify the insulation of the Rim Joists in the Crawlspace.\n        <br/>\n        \n        <br/>\n        "
        },
        "crawlspaceTypeImproved": {
          "type": "string",
          "example": "Unvented - Unconditioned Crawl",
          "enum": [
            "Unvented - Unconditioned Crawl",
            "Vented - Year Round",
            "Vented - Summer Only",
            "Conditioned Crawl"
          ],
          "description": "\n        Choose the type of venting and conditioning in the crawlspace. Your choice will enable or disable the Wall and Floor Cavity Insulation fields in the Crawlspace Details section depending on the appropriate situation.<br><br>\n\n<strong>Unvented - Unconditioned Crawl</strong>: This unconditioned crawlspace scenario is where the building floor above the crawl space is the thermal boundary to the home. If there were insulation, it would be applied applied to the building floor (crawlspace ceiling). This crawlspace does not have direct vents to the outside air.<br><br>\n\n<strong>Vented - Year Round</strong>: This is an unconditioned crawlspace where the building floor above the crawl space is the thermal boundary to the home. If there were insulation, it would be applied to the building floor (crawlspace ceiling). This crawlspace has direct vents to the outside air, and those vents remain open all year long.<br><br>\n\n<strong>Vented - Summer Only</strong>: This is an unconditioned crawlspace where the building floor above the crawl space is the thermal boundary to the home. If there were insulation, it would be applied to the building floor (crawlspace ceiling). This crawlspace has direct vents to the outside air, and those vents remain open only during summer months.<br><br>\n\n<strong>Conditioned Crawl</strong>: This is a conditioned crawlspace where the foundation walls and ground/slab of the crawl space are the thermal boundary. If there is insulation, it would be applied to the foundation wall and rim joists. In this scenario, there is no venting to the outside and the crawlspace floor is covered with a vapor barrier on top of the dirt floor. Building code often requires adding a jump vent to the main conditioned space in the house or ducting the furnace and/or A/C into the crawlspace as well. If the crawl does not have a jump vent or supply ducts, you will likely get a slight overestimate of energy use. The model assumes that the crawl temperature is a mixture of 20% ground temp and 80% indoor temp.\n\nNote: This field also triggers the Rim Joist options for the Crawlspace. You must set this field to Conditioned Crawl to be able to specify the insulation of the Rim Joists in the Crawlspace.\n        <br/>\n        \n        <br/>\n        "
        },
        "clothesWasherType": {
          "type": "string",
          "example": "Front Load",
          "enum": [
            "Front Load",
            "Top Load",
            "No Clothes Washer"
          ],
          "description": "\n        Enter the type of Clothes Washer, if any, that is installed in the house.\n        <br/>\n        \n        <br/>\n        "
        },
        "clothesWasherTypeImproved": {
          "type": "string",
          "example": "Top Load",
          "enum": [
            "Front Load",
            "Top Load",
            "No Clothes Washer"
          ],
          "description": "\n        Enter the type of Clothes Washer, if any, that is installed in the house.\n        <br/>\n        \n        <br/>\n        "
        },
        "clothesWasherEnergyStar": {
          "type": "string",
          "example": "No",
          "enum": [
            "Yes",
            "No"
          ],
          "description": "\n        If a Clothes Washer is installed, choose if it is an ENERGY STAR model.\n        <br/>\n        \n        <br/>\n        "
        },
        "clothesWasherEnergyStarImproved": {
          "type": "string",
          "example": "Yes",
          "enum": [
            "Yes",
            "No"
          ],
          "description": "\n        If a Clothes Washer is installed, choose if it is an ENERGY STAR model.\n        <br/>\n        \n        <br/>\n        "
        },
        "clothesWasherManufacturer": {
          "type": "string",
          "example": "Bosch",
          "enum": [
            "Unknown",
            "Amana",
            "Asko",
            "Bosch",
            "Fridgidaire",
            "GE",
            "Hotpoint",
            "LG",
            "Maytag",
            "Samsung",
            "Sears",
            "Westinghouse",
            "Whirlpool",
            "Other"
          ],
          "description": "\n        Enter the Manufacturer for the Clothes Washer.\n        <br/>\n        \n        <br/>\n        "
        },
        "clothesWasherManufacturerImproved": {
          "type": "string",
          "example": "Maytag",
          "enum": [
            "Unknown",
            "Amana",
            "Asko",
            "Bosch",
            "Fridgidaire",
            "GE",
            "Hotpoint",
            "LG",
            "Maytag",
            "Samsung",
            "Sears",
            "Westinghouse",
            "Whirlpool",
            "Other"
          ],
          "description": "\n        Enter the Manufacturer for the Clothes Washer.\n        <br/>\n        \n        <br/>\n        "
        },
        "clothesWasherModel": {
          "type": "string",
          "example": "Some text value",
          "enum": false,
          "description": "Enter the Model number for the Clothes Washer."
        },
        "clothesWasherModelImproved": {
          "type": "string",
          "example": "Some text value",
          "enum": false,
          "description": "Enter the Model number for the Clothes Washer."
        },
        "clothesWasherMef": {
          "type": "number",
          "example": 1.3,
          "maximum": 10,
          "minimum": 0,
          "enum": false,
          "description": "Enter the Clothes Washer's Integrated Modified Energy Factor (IMEF) if available. The higher the IMEF, the more efficient the dishwasher. Search our knowledge base for \"Appliances Product Finder\" for more information. "
        },
        "clothesWasherMefImproved": {
          "type": "number",
          "example": 1.3,
          "maximum": 10,
          "minimum": 0,
          "enum": false,
          "description": "Enter the Clothes Washer's Integrated Modified Energy Factor (IMEF) if available. The higher the IMEF, the more efficient the dishwasher. Search our knowledge base for \"Appliances Product Finder\" for more information. "
        },
        "clothesWasherEnergyUsage": {
          "type": "number",
          "example": 55,
          "maximum": 1000,
          "minimum": 0,
          "enum": false,
          "description": "As an alternative to entering the IMEF, you may enter the rated energy consumption in kWh / year. You must also enter the rated water use in gallons per year."
        },
        "clothesWasherWaterUsage": {
          "type": "number",
          "example": 2212,
          "maximum": 10000,
          "minimum": 0,
          "enum": false,
          "description": "As an alternative to entering the IMEF, you may enter the rated water use in gallons per year. You must also enter the rated energy consumption in kWh / year above."
        },
        "dishwasherEnergyStar": {
          "type": "string",
          "example": "No",
          "enum": [
            "Yes",
            "No"
          ],
          "description": "\n        Choose Yes if the Dishwasher is an ENERGY STAR model.\n        <br/>\n        \n        <br/>\n        "
        },
        "dishwasherEnergyStarImproved": {
          "type": "string",
          "example": "No",
          "enum": [
            "Yes",
            "No"
          ],
          "description": "\n        Choose Yes if the Dishwasher is an ENERGY STAR model.\n        <br/>\n        \n        <br/>\n        "
        },
        "dishwasherEnergyFactor": {
          "type": "number",
          "example": 0.64,
          "maximum": 10,
          "minimum": 0,
          "enum": false,
          "description": "Enter the Dishwasher's Energy Factor (EF) if available. The higher the EF, the more efficient the dishwasher. Search our knowledge base for \"Appliances Product Finder\" for more information. "
        },
        "dishwasherEnergyFactorImproved": {
          "type": "number",
          "example": 0.64,
          "maximum": 10,
          "minimum": 0,
          "enum": false,
          "description": "Enter the Dishwasher's Energy Factor (EF) if available. The higher the EF, the more efficient the dishwasher. Search our knowledge base for \"Appliances Product Finder\" for more information. "
        },
        "percentCflOrLed": {
          "type": "number",
          "example": 90,
          "maximum": 999,
          "minimum": 0,
          "enum": false,
          "description": "Use this field to override the number of CFLs or LEDs that exist in the home before the retrofit."
        },
        "percentCflOrLedImproved": {
          "type": "number",
          "example": 9,
          "maximum": 999,
          "minimum": 0,
          "enum": false,
          "description": "Use this field to override the number of CFLs or LEDs that exist in the home before the retrofit."
        },
        "windZone": {
          "type": "string",
          "example": "2",
          "enum": [
            "1",
            "2",
            "3",
            "4"
          ],
          "description": "\n        Select the Wind Zone from the map.\n\n        <br/>\n        \n        <br/>\n        "
        },
        "shielding": {
          "type": "string",
          "example": "Well-Shielded",
          "enum": [
            "Well-Shielded",
            "Normal",
            "Exposed"
          ],
          "description": "\n        Shielding type used to determine NACH N-factor:<br/><br/>\n<ul>\n  <li><strong>Well-Shielded</strong> - urban areas with high buildings or sheltered areas</li>\n  <li><strong>Normal</strong> - surrounded by trees or other buildings</li>\n  <li><strong>Exposed</strong> - dwelling is not surrounded by any objects</li>\n</ul>\n        <br/>\n        \n        <br/>\n        "
        },
        "nFactor": {
          "type": "number",
          "example": 686.67,
          "enum": false,
          "description": "Correlation Factor developed by Lawrence Berkeley Laboratory for the calculation of NACH."
        },
        "numberOfBedrooms": {
          "type": "number",
          "example": 2,
          "maximum": 100,
          "minimum": 1,
          "enum": false,
          "description": "2005 RESNET Standards define a bedroom as: A room or space \r70 square feet or greater, with egress window and closet, used or \rintended to be used for sleeping. A \"den\", \"library\", \"home office\" \rwith a closet, egress window, and 70 square feet or greater or other \rsimilar rooms shall count as a bedroom, but living rooms and foyers shall not."
        },
        "dishwasherModel": {
          "type": "string",
          "example": "Some text value",
          "enum": false,
          "description": "Enter the Model number for the Dishwasher."
        },
        "dishwasherModelImproved": {
          "type": "string",
          "example": "Some text value",
          "enum": false,
          "description": "Enter the Model number for the Dishwasher."
        },
        "dishwasherManufacturer": {
          "type": "string",
          "example": "Sears",
          "enum": [
            "Unknown",
            "Amana",
            "Asko",
            "Bosch",
            "Fridgidaire",
            "GE",
            "Hotpoint",
            "KitchenAid",
            "LG",
            "Maytag",
            "Samsung",
            "Sears",
            "Thermador",
            "Whirlpool",
            "Other"
          ],
          "description": "\n        Enter the Manufacturer of the Dishwasher.\n        <br/>\n        \n        <br/>\n        "
        },
        "dishwasherManufacturerImproved": {
          "type": "string",
          "example": "KitchenAid",
          "enum": [
            "Unknown",
            "Amana",
            "Asko",
            "Bosch",
            "Fridgidaire",
            "GE",
            "Hotpoint",
            "KitchenAid",
            "LG",
            "Maytag",
            "Samsung",
            "Sears",
            "Thermador",
            "Whirlpool",
            "Other"
          ],
          "description": "\n        Enter the Manufacturer of the Dishwasher.\n        <br/>\n        \n        <br/>\n        "
        },
        "dishwasherModelYear": {
          "type": "string",
          "example": "1998",
          "maximum": 2030,
          "minimum": 1900,
          "enum": false,
          "description": "Enter the Model Year of the Dishwasher."
        },
        "dishwasherModelYearImproved": {
          "type": "string",
          "example": "1998",
          "maximum": 2030,
          "minimum": 1900,
          "enum": false,
          "description": "Enter the Model Year of the Dishwasher."
        },
        "clothesWasherModelYear": {
          "type": "string",
          "example": "1998",
          "maximum": 2030,
          "minimum": 1900,
          "enum": false,
          "description": "Enter the Model Year of the Clothes Washer."
        },
        "clothesWasherModelYearImproved": {
          "type": "string",
          "example": "1998",
          "maximum": 2030,
          "minimum": 1900,
          "enum": false,
          "description": "Enter the Model Year of the Clothes Washer."
        },
        "numberOfIncandescents": {
          "type": "integer",
          "example": 234,
          "maximum": 999,
          "minimum": 0,
          "enum": false,
          "description": "This field displays the number of Incandescents that exist in the home before the retrofit. It is calculated based on the number of CFLs or LEDs and the Total # of Light Fixtures."
        },
        "numberOfIncandescentsImproved": {
          "type": "integer",
          "example": 139,
          "maximum": 999,
          "minimum": 0,
          "enum": false,
          "description": "This field displays the number of Incandescents that exist in the home before the retrofit. It is calculated based on the number of CFLs or LEDs and the Total # of Light Fixtures."
        },
        "numberOfCflsInstalled": {
          "type": "integer",
          "example": 309,
          "maximum": 999,
          "minimum": 0,
          "enum": false,
          "description": "Use this field to override the number of LEDs that exist in the home before (Base) or after (Improved) the retrofit."
        },
        "numberOfCflsOrLeds": {
          "type": "integer",
          "example": 607,
          "maximum": 999,
          "minimum": 0,
          "enum": false,
          "description": "Use this field to override the number of CFLs that exist in the home before (Base) or after (Improved) the retrofit."
        },
        "numberOfCflsOrLedsImproved": {
          "type": "integer",
          "example": 237,
          "maximum": 999,
          "minimum": 0,
          "enum": false,
          "description": "Use this field to override the number of CFLs that exist in the home before (Base) or after (Improved) the retrofit."
        },
        "hotTub": {
          "type": "string",
          "example": "Yes",
          "enum": [
            "Yes",
            "No"
          ],
          "description": "\n        Does this house have an electrically heated hot tub? If yes, 2,040 kWh/yr of electricity consumption is added to the baseload.\n        <br/>\n        \n        <br/>\n        "
        },
        "pool": {
          "type": "string",
          "example": "Yes",
          "enum": [
            "Yes",
            "No"
          ],
          "description": "\n        Does the home have a pool?\n        <br/>\n        \n        <br/>\n        "
        },
        "poolPumpType": {
          "type": "string",
          "example": "Single Speed",
          "enum": [
            "Single Speed",
            "Two Speed",
            "Variable Speed",
            "No Pool Pump"
          ],
          "description": "\n        Select the Pump Type from Single Speed, Two Speed, or Variable Speed (or No Improvement or None). Enter the HP (or leave blank for the default) for a Single Speed or Two Speed pump, or Turnover for a variable speed pump. Wattage of variable speed pumps depends on the speed the pump is running, and the speed will depend on the turnover, so electrical usage is determined by turnover (number of times all the water in the pool circulates through the filter in a day). The Variable Speed Pump analysis includes an optimization routine that calculates the minimal electrical usage for a variable speed pump for the selected turnover. Therefore proper setup of the pump is required to achieve these results.\n        <br/>\n        \n        <br/>\n        "
        },
        "poolPumpTypeImproved": {
          "type": "string",
          "example": "Two Speed",
          "enum": [
            "Single Speed",
            "Two Speed",
            "Variable Speed",
            "No Pool Pump"
          ],
          "description": "\n        Select the Pump Type from Single Speed, Two Speed, or Variable Speed (or No Improvement or None). Enter the HP (or leave blank for the default) for a Single Speed or Two Speed pump, or Turnover for a variable speed pump. Wattage of variable speed pumps depends on the speed the pump is running, and the speed will depend on the turnover, so electrical usage is determined by turnover (number of times all the water in the pool circulates through the filter in a day). The Variable Speed Pump analysis includes an optimization routine that calculates the minimal electrical usage for a variable speed pump for the selected turnover. Therefore proper setup of the pump is required to achieve these results.\n        <br/>\n        \n        <br/>\n        "
        },
        "poolPumpHorsepower": {
          "type": "string",
          "example": "2",
          "enum": [
            "0.5",
            "0.75",
            "1",
            "1.5",
            "2",
            "3"
          ],
          "description": "\n        Select the Horsepower for this Pool Pump. Only necessary for Single-Speed or Two-Speed pumps.\n        <br/>\n        \n        <br/>\n        "
        },
        "poolPumpHorsepowerImproved": {
          "type": "string",
          "example": "1",
          "enum": [
            "0.5",
            "0.75",
            "1",
            "1.5",
            "2",
            "3"
          ],
          "description": "\n        Select the Horsepower for this Pool Pump. Only necessary for Single-Speed or Two-Speed pumps.\n        <br/>\n        \n        <br/>\n        "
        },
        "basementHeating": {
          "type": "string",
          "example": "Intentional",
          "enum": [
            "Intentional",
            "Intentional w/ continuous circulation",
            "Incidental-Desired (e.g. leaky ducts)",
            "None or Undesired Incidental"
          ],
          "description": "\n        Please describe the heating situation in the basement.<br><br>\n\n<strong>Intentional:</strong><br>\n<ul>\n\t<li>Basement receives heat in the same manner as the rest of the house.</li>\n</ul>\r<strong>Intentional w/ continuous circulation:</strong><br>\r<ul>\n\t<li>Basement air is continuously exchanged with upper floors, equalizing temperatures.</li>\n</ul>\r<strong>Incidental-Desired (e.g. leaky ducts):</strong><br>\r<ul>\n\t<li>Basement is semi-conditioned by presence of HVAC equipment.</li>\n\t<li>Semi-conditioning is desired and measures will not be taken to eliminate it.</li>\r\t<li>Thermal boundary for model will be located at basement walls and floor.</li>\r</ul>\r<strong>None or Undesired Incidental:</strong><br>\r<ul>\n\t<li>Basement is not intentionally conditioned.</li>\n\t<li>Incidental conditioning is undesired and considered wasted energy.</li>\t<li>Thermal boundary for model will be the building floor above the basement.</li>\n</ul>\n        <br/>\n        \n        <br/>\n        "
        },
        "basementHeatingImproved": {
          "type": "string",
          "example": "Incidental-Desired (e.g. leaky ducts)",
          "enum": [
            "Intentional",
            "Intentional w/ continuous circulation",
            "Incidental-Desired (e.g. leaky ducts)",
            "None or Undesired Incidental"
          ],
          "description": "\n        Please describe the heating situation in the basement.<br><br>\n\n<strong>Intentional:</strong><br>\n<ul>\n\t<li>Basement receives heat in the same manner as the rest of the house.</li>\n</ul>\r<strong>Intentional w/ continuous circulation:</strong><br>\r<ul>\n\t<li>Basement air is continuously exchanged with upper floors, equalizing temperatures.</li>\n</ul>\r<strong>Incidental-Desired (e.g. leaky ducts):</strong><br>\r<ul>\n\t<li>Basement is semi-conditioned by presence of HVAC equipment.</li>\n\t<li>Semi-conditioning is desired and measures will not be taken to eliminate it.</li>\r\t<li>Thermal boundary for model will be located at basement walls and floor.</li>\r</ul>\r<strong>None or Undesired Incidental:</strong><br>\r<ul>\n\t<li>Basement is not intentionally conditioned.</li>\n\t<li>Incidental conditioning is undesired and considered wasted energy.</li>\t<li>Thermal boundary for model will be the building floor above the basement.</li>\n</ul>\n        <br/>\n        \n        <br/>\n        "
        },
        "basementCooling": {
          "type": "string",
          "example": "Intentional",
          "enum": [
            "Intentional",
            "Intentional w/ continuous circulation",
            "Incidental-Desired (e.g. leaky ducts)",
            "None or Undesired Incidental"
          ],
          "description": "\n        Please describe the cooling situation in the basement.<br><br>\n\n<strong>Intentional:</strong><br>\n<ul>\n\t<li>Basement receives cooling in the same manner as the rest of the house.</li>\n</ul>\r<strong>Intentional w/ continuous circulation:</strong><br>\r<ul>\n\t<li>Basement air is continuously exchanged with upper floors, equalizing temperatures.</li>\n</ul>\r<strong>Incidental-Desired (e.g. leaky ducts):</strong><br>\r<ul>\n\t<li>Basement is semi-conditioned by presence of HVAC equipment.</li>\n\t<li>Semi-conditioning is desired and measures will not be taken to eliminate it.</li>\r\t<li>Thermal boundary for model will be located at basement walls and floor.</li>\r</ul>\r<strong>None or Undesired Incidental:</strong><br>\r<ul>\n\t<li>Basement is not intentionally conditioned.</li>\n\t<li>Incidental conditioning is undesired and considered wasted energy.</li>\t<li>Thermal boundary for model will be the building floor above the basement.</li>\n</ul>\n\n<strong>Note:</strong> If you choose \"None or Undesired Incidental\", then be sure to NOT include the basement square footage in the conditioned area of the home under the Building inputs.\n        <br/>\n        \n        <br/>\n        "
        },
        "basementCoolingImproved": {
          "type": "string",
          "example": "Intentional",
          "enum": [
            "Intentional",
            "Intentional w/ continuous circulation",
            "Incidental-Desired (e.g. leaky ducts)",
            "None or Undesired Incidental"
          ],
          "description": "\n        Please describe the cooling situation in the basement.<br><br>\n\n<strong>Intentional:</strong><br>\n<ul>\n\t<li>Basement receives cooling in the same manner as the rest of the house.</li>\n</ul>\r<strong>Intentional w/ continuous circulation:</strong><br>\r<ul>\n\t<li>Basement air is continuously exchanged with upper floors, equalizing temperatures.</li>\n</ul>\r<strong>Incidental-Desired (e.g. leaky ducts):</strong><br>\r<ul>\n\t<li>Basement is semi-conditioned by presence of HVAC equipment.</li>\n\t<li>Semi-conditioning is desired and measures will not be taken to eliminate it.</li>\r\t<li>Thermal boundary for model will be located at basement walls and floor.</li>\r</ul>\r<strong>None or Undesired Incidental:</strong><br>\r<ul>\n\t<li>Basement is not intentionally conditioned.</li>\n\t<li>Incidental conditioning is undesired and considered wasted energy.</li>\t<li>Thermal boundary for model will be the building floor above the basement.</li>\n</ul>\n\n<strong>Note:</strong> If you choose \"None or Undesired Incidental\", then be sure to NOT include the basement square footage in the conditioned area of the home under the Building inputs.\n        <br/>\n        \n        <br/>\n        "
        },
        "poolSize": {
          "type": "integer",
          "example": 159000,
          "maximum": 1000000,
          "minimum": 100,
          "enum": false,
          "description": "Pool water volume in gallons."
        },
        "poolPumpTurnover": {
          "type": "number",
          "example": 1.52,
          "maximum": 24,
          "minimum": 0.5,
          "enum": false,
          "description": "Number of times all the water in the pool circulates through the filter in a day. Must be used to set variable speed pump usage. It is ignored for all other pump types."
        },
        "poolPumpTurnoverImproved": {
          "type": "number",
          "example": 1.15,
          "maximum": 24,
          "minimum": 0.5,
          "enum": false,
          "description": "Number of times all the water in the pool circulates through the filter in a day. Must be used to set variable speed pump usage. It is ignored for all other pump types."
        },
        "poolPumpHours": {
          "type": "number",
          "example": 2.65,
          "maximum": 24,
          "minimum": 0,
          "enum": false,
          "description": "Number of hours the pump runs per day. This is only applicable to single speed and two speed pumps. It can be ignored for all other pump types."
        },
        "poolPumpHoursImproved": {
          "type": "number",
          "example": 18.58,
          "maximum": 24,
          "minimum": 0,
          "enum": false,
          "description": "Number of hours the pump runs per day. This is only applicable to single speed and two speed pumps. It can be ignored for all other pump types."
        },
        "poolPumpManufacturer": {
          "type": "string",
          "example": "Other",
          "enum": [
            "Pentair",
            "Other"
          ],
          "description": "\n        Enter the Manufacturer of the Pool Pump.\n        <br/>\n        \n        <br/>\n        "
        },
        "poolPumpManufacturerImproved": {
          "type": "string",
          "example": "Pentair",
          "enum": [
            "Pentair",
            "Other"
          ],
          "description": "\n        Enter the Manufacturer of the Pool Pump.\n        <br/>\n        \n        <br/>\n        "
        },
        "poolPumpModel": {
          "type": "string",
          "example": "Some text value",
          "enum": false,
          "description": "Enter the model number of the Pool Pump."
        },
        "poolPumpModelImproved": {
          "type": "string",
          "example": "Some text value",
          "enum": false,
          "description": "Enter the model number of the Pool Pump."
        },
        "poolPumpDaysPerYear": {
          "type": "integer",
          "example": 5,
          "maximum": 365,
          "minimum": 0,
          "enum": false,
          "description": "Number of days the pool is used per year."
        },
        "poolPumpDaysPerYearImproved": {
          "type": "integer",
          "example": 247,
          "maximum": 365,
          "minimum": 0,
          "enum": false,
          "description": "Number of days the pool is used per year."
        },
        "dishwasherInstalled": {
          "type": "string",
          "example": "No",
          "enum": [
            "Yes",
            "No"
          ],
          "description": "\n        Choose Yes if an automatic dishwasher is installed in the home.\n        <br/>\n        \n        <br/>\n        "
        },
        "dishwasherInstalledImproved": {
          "type": "string",
          "example": "No",
          "enum": [
            "Yes",
            "No"
          ],
          "description": "\n        Choose Yes if an automatic dishwasher is installed in the home.\n        <br/>\n        \n        <br/>\n        "
        },
        "modeledBasementFloorArea": {
          "type": "number",
          "example": 71345.55,
          "maximum": 1000000,
          "minimum": 0,
          "enum": false,
          "description": "This field will be automatically calculated based on the data you entered in the input form for Conditioned Area, Number of Stories, and Foundation Makeup.<br><br>\n"
        },
        "modeledBasementPerimeter": {
          "type": "number",
          "example": 119.11,
          "maximum": 780,
          "minimum": 0,
          "enum": false,
          "description": "This field will be automatically calculated based on the data you entered in the input form for House Length and House Width.<br><br>\n"
        },
        "includesBasement": {
          "type": "string",
          "example": "No",
          "enum": [
            "Yes",
            "No"
          ],
          "description": "\n        Mark this as Yes if the conditioned area above includes the basement area.\n        <br/>\n        \n        <br/>\n        "
        },
        "utilityPriceNaturalGas": {
          "type": "number",
          "example": 0.82,
          "maximum": 5000,
          "minimum": 0,
          "enum": false,
          "description": "Enter a your own price for Natural Gas to override the software's existing regional defaults from the EIA."
        },
        "utilityPricePropane": {
          "type": "number",
          "example": 1.54,
          "maximum": 5000,
          "minimum": 0,
          "enum": false,
          "description": "Enter a your own price for Propane to override the software's existing regional defaults from the EIA."
        },
        "utilityPriceFuelOil": {
          "type": "number",
          "example": 2.32,
          "maximum": 5000,
          "minimum": 0,
          "enum": false,
          "description": "Enter a your own price for Fuel Oil to override the software's existing regional defaults from the EIA."
        },
        "utilityPriceElectricity": {
          "type": "number",
          "example": 0.09,
          "maximum": 5000,
          "minimum": 0,
          "enum": false,
          "description": "Enter a your own price for Electricity to override the software's existing regional defaults from the EIA."
        },
        "heatingDesignLoad": {
          "type": "integer",
          "example": 87886,
          "enum": false
        },
        "heatingDesignLoadImproved": {
          "type": "integer",
          "example": 66719,
          "enum": false
        },
        "coolingSensibleDesignLoad": {
          "type": "string",
          "example": "Some text value",
          "enum": false
        },
        "coolingSensibleDesignLoadImproved": {
          "type": "string",
          "example": "Some text value",
          "enum": false
        },
        "coolingLatentDesignLoad": {
          "type": "string",
          "example": "Some text value",
          "enum": false
        },
        "coolingLatentDesignLoadImproved": {
          "type": "string",
          "example": "Some text value",
          "enum": false
        },
        "designTempWinterOutdoor": {
          "type": "string",
          "example": "Some text value",
          "enum": false
        },
        "designTempSummerOutdoor": {
          "type": "string",
          "example": "Some text value",
          "enum": false
        },
        "designTempWinterIndoor": {
          "type": "string",
          "example": "Some text value",
          "enum": false
        },
        "designTempSummerIndoor": {
          "type": "string",
          "example": "Some text value",
          "enum": false
        },
        "utilityPriceWood": {
          "type": "number",
          "example": 0.09,
          "maximum": 5000,
          "minimum": 0,
          "enum": false,
          "description": "Enter a your own price for wood. We do not have default costs for wood, therefore this must be filled out unless the wood supply is free."
        },
        "utilityPricePellets": {
          "type": "number",
          "example": 0.09,
          "maximum": 5000,
          "minimum": 0,
          "enum": false,
          "description": "Enter a your own price for wood pellets. We do not have default costs for wood pellets, therefore this must be filled out if pellets are chosen in the heating system fuel options."
        },
        "numberOfUnits": {
          "type": "number",
          "example": 4,
          "maximum": 1000,
          "minimum": 1,
          "enum": false,
          "description": "If this unit is part of a multi-family building, enter the total number of units in the building."
        },
        "numberOfLeds": {
          "type": "integer",
          "example": 331,
          "maximum": 999,
          "minimum": 0,
          "enum": false,
          "description": "Use this field to override the number of LEDs that exist in the home before (Base) or after (Improved) the retrofit."
        },
        "numberOfLedsImproved": {
          "type": "integer",
          "example": 736,
          "maximum": 999,
          "minimum": 0,
          "enum": false,
          "description": "Use this field to override the number of LEDs that exist in the home before (Base) or after (Improved) the retrofit."
        },
        "crawlspaceRimJoistLength": {
          "type": "number",
          "example": 314014.76,
          "maximum": 1000000,
          "minimum": 0,
          "enum": false,
          "description": "This field will be automatically calculated based on the data you entered in the input form for House Length and House Width. This is the total length of the exposed perimeter of the rim joist for the crawlspace.<br><br>\n\n<strong>Note</strong>: This field is always displayed, regardless if the Rim Joist is actually insulated in the Crawlspace. In order for the Rim Joist to be counted in the modeling and be designated in the HPXML output, the Crawlspace Type must be set as Conditioned Crawl. Otherwise, the Rim Joist is counted as part of the Frame Floor (the crawlspace ceiling). "
        },
        "crawlspaceRimJoistTreatment": {
          "type": "string",
          "example": "Same as Crawl Wall",
          "enum": [
            "Same as Crawl Wall",
            "Separately"
          ],
          "description": "\n        Choose whether or not the Rim Joist is treated in the same was as the Crawlspace Wall or separately.<br><br>\n\n<strong>Note</strong>: This field is triggered by the Crawlspace Type. In order for the Rim Joist to be counted in the modeling and be designated in the HPXML output, the Crawlspace Type must be set as Conditioned Crawl. Otherwise, the Rim Joist is counted as part of the Frame Floor (the crawlspace ceiling). \n        <br/>\n        \n        <br/>\n        "
        },
        "crawlspaceRimJoistTreatmentImproved": {
          "type": "string",
          "example": "Separately",
          "enum": [
            "Same as Crawl Wall",
            "Separately"
          ],
          "description": "\n        Choose whether or not the Rim Joist is treated in the same was as the Crawlspace Wall or separately.<br><br>\n\n<strong>Note</strong>: This field is triggered by the Crawlspace Type. In order for the Rim Joist to be counted in the modeling and be designated in the HPXML output, the Crawlspace Type must be set as Conditioned Crawl. Otherwise, the Rim Joist is counted as part of the Frame Floor (the crawlspace ceiling). \n        <br/>\n        \n        <br/>\n        "
        },
        "crawlspaceRimJoistInsulation": {
          "type": "integer",
          "example": 54,
          "maximum": 100,
          "minimum": 0,
          "enum": false,
          "description": "Enter the R-value of the insulation for the Base or Improved Rim Joist in the Crawlspace.<br><br>\n\n<strong>Note</strong>: This field is triggered by the Crawlspace Type. In order for the Rim Joist to be counted in the modeling and be designated in the HPXML output, the Crawlspace Type must be set as Conditioned Crawl. Otherwise, the Rim Joist is counted as part of the Frame Floor (the crawlspace ceiling). "
        },
        "crawlspaceRimJoistInsulationImproved": {
          "type": "integer",
          "example": 41,
          "maximum": 100,
          "minimum": 0,
          "enum": false,
          "description": "Enter the R-value of the insulation for the Base or Improved Rim Joist in the Crawlspace.<br><br>\n\n<strong>Note</strong>: This field is triggered by the Crawlspace Type. In order for the Rim Joist to be counted in the modeling and be designated in the HPXML output, the Crawlspace Type must be set as Conditioned Crawl. Otherwise, the Rim Joist is counted as part of the Frame Floor (the crawlspace ceiling). "
        },
        "basementRimJoistLength": {
          "type": "number",
          "example": 463563.47,
          "maximum": 1000000,
          "minimum": 0,
          "enum": false,
          "description": "This field will be automatically calculated based on the data you entered in the input form for House Length and House Width. This is the total length of the exposed perimeter of the rim joist for the crawlspace.<br><br>"
        },
        "basementRimJoistTreatment": {
          "type": "string",
          "example": "Same as Basement Wall",
          "enum": [
            "Same as Basement Wall",
            "Separately"
          ],
          "description": "\n        Choose whether or not the Rim Joist is treated in the same way as the Basement Wall or separately.\n        <br/>\n        \n        <br/>\n        "
        },
        "basementRimJoistTreatmentImproved": {
          "type": "string",
          "example": "Separately",
          "enum": [
            "Same as Basement Wall",
            "Separately"
          ],
          "description": "\n        Choose whether or not the Rim Joist is treated in the same way as the Basement Wall or separately.\n        <br/>\n        \n        <br/>\n        "
        },
        "basementRimJoistInsulation": {
          "type": "integer",
          "example": 81,
          "maximum": 100,
          "minimum": 0,
          "enum": false,
          "description": "Enter the R-value of the insulation for the Base or Improved Rim Joist in the Crawlspace."
        },
        "basementRimJoistInsulationImproved": {
          "type": "integer",
          "example": 68,
          "maximum": 100,
          "minimum": 0,
          "enum": false,
          "description": "Enter the R-value of the insulation for the Base or Improved Rim Joist in the Crawlspace."
        },
        "demandKw": {
          "type": "number",
          "example": 956.54,
          "enum": false
        },
        "demandKwImproved": {
          "type": "number",
          "example": 147.51,
          "enum": false
        },
        "demandKwSavings": {
          "type": "string",
          "example": "Some text value",
          "enum": false
        },
        "cazMaxAmbientCo": {
          "type": "number",
          "example": 236.08,
          "enum": false,
          "description": "Ambient Carbon Monoxide in Parts Per Million. Monitored throughout assessment, not just appliance testing"
        },
        "cazMaxAmbientCoImproved": {
          "type": "number",
          "example": 729.34,
          "enum": false,
          "description": "Ambient Carbon Monoxide in Parts Per Million. Monitored throughout assessment, not just appliance testing"
        },
        "ashrae622": {
          "type": "string",
          "example": "No",
          "enum": [
            "Yes",
            "No"
          ],
          "description": "\n        Mark this as Yes if wish to turn on controls for the ASHRAE 62.2 ventilation standard.\n        <br/>\n        \n        <br/>\n        "
        },
        "ashraeKitchenFanCfm": {
          "type": "integer",
          "example": 806,
          "maximum": 999,
          "minimum": 0,
          "enum": false,
          "description": "Enter the CFM rating of the kitchen ventilation fan."
        },
        "ashraeKitchenFanCfmImproved": {
          "type": "integer",
          "example": 438,
          "maximum": 999,
          "minimum": 0,
          "enum": false,
          "description": "Enter the CFM rating of the kitchen ventilation fan."
        },
        "ashraeKitchenWindow": {
          "type": "string",
          "example": "No",
          "enum": [
            "Yes",
            "No"
          ],
          "description": "\n        If there is an operable window in the Kitchen, then choose yes.\n        <br/>\n        \n        <br/>\n        "
        },
        "ashraeKitchenWindowImproved": {
          "type": "string",
          "example": "Yes",
          "enum": [
            "Yes",
            "No"
          ],
          "description": "\n        If there is an operable window in the Kitchen, then choose yes.\n        <br/>\n        \n        <br/>\n        "
        },
        "ashraeNumberOfBathrooms": {
          "type": "string",
          "example": "Some text value",
          "enum": [
            "1",
            "2",
            "3",
            "4"
          ],
          "description": "\n        Enter the number of bathrooms with ventilation fans.\n        <br/>\n        \n        <br/>\n        "
        },
        "ashraeBathroomFan1Cfm": {
          "type": "integer",
          "example": 820,
          "maximum": 999,
          "minimum": 0,
          "enum": false,
          "description": "Enter the CFM rating of the bathroom ventilation fan."
        },
        "ashraeBathroomFan1CfmImproved": {
          "type": "integer",
          "example": 187,
          "maximum": 999,
          "minimum": 0,
          "enum": false,
          "description": "Enter the CFM rating of the bathroom ventilation fan."
        },
        "ashraeBathroom1Window": {
          "type": "string",
          "example": "Yes",
          "enum": [
            "Yes",
            "No"
          ],
          "description": "\n        If there is an operable window in this bathroom, then choose yes.\n        <br/>\n        \n        <br/>\n        "
        },
        "ashraeBathroom1WindowImproved": {
          "type": "string",
          "example": "Yes",
          "enum": [
            "Yes",
            "No"
          ],
          "description": "\n        If there is an operable window in this bathroom, then choose yes.\n        <br/>\n        \n        <br/>\n        "
        },
        "ashraeBathroomFan2Cfm": {
          "type": "integer",
          "example": 685,
          "maximum": 999,
          "minimum": 0,
          "enum": false,
          "description": "Enter the CFM rating of the bathroom ventilation fan."
        },
        "ashraeBathroomFan2CfmImproved": {
          "type": "integer",
          "example": 321,
          "maximum": 999,
          "minimum": 0,
          "enum": false,
          "description": "Enter the CFM rating of the bathroom ventilation fan."
        },
        "ashraeBathroom2Window": {
          "type": "string",
          "example": "Yes",
          "enum": [
            "Yes",
            "No"
          ],
          "description": "\n        If there is an operable window in this bathroom, then choose yes.\n        <br/>\n        \n        <br/>\n        "
        },
        "ashraeBathroom2WindowImproved": {
          "type": "string",
          "example": "Yes",
          "enum": [
            "Yes",
            "No"
          ],
          "description": "\n        If there is an operable window in this bathroom, then choose yes.\n        <br/>\n        \n        <br/>\n        "
        },
        "ashraeBathroomFan3Cfm": {
          "type": "integer",
          "example": 838,
          "maximum": 999,
          "minimum": 0,
          "enum": false,
          "description": "Enter the CFM rating of the bathroom ventilation fan."
        },
        "ashraeBathroomFan3CfmImproved": {
          "type": "integer",
          "example": 699,
          "maximum": 999,
          "minimum": 0,
          "enum": false,
          "description": "Enter the CFM rating of the bathroom ventilation fan."
        },
        "ashraeBathroom3Window": {
          "type": "string",
          "example": "No",
          "enum": [
            "Yes",
            "No"
          ],
          "description": "\n        If there is an operable window in this bathroom, then choose yes.\n        <br/>\n        \n        <br/>\n        "
        },
        "ashraeBathroom3WindowImproved": {
          "type": "string",
          "example": "Yes",
          "enum": [
            "Yes",
            "No"
          ],
          "description": "\n        If there is an operable window in this bathroom, then choose yes.\n        <br/>\n        \n        <br/>\n        "
        },
        "ashraeBathroomFan4Cfm": {
          "type": "integer",
          "example": 13,
          "maximum": 999,
          "minimum": 0,
          "enum": false,
          "description": "Enter the CFM rating of the bathroom ventilation fan."
        },
        "ashraeBathroomFan4CfmImproved": {
          "type": "integer",
          "example": 774,
          "maximum": 999,
          "minimum": 0,
          "enum": false,
          "description": "Enter the CFM rating of the bathroom ventilation fan."
        },
        "ashraeBathroom4Window": {
          "type": "string",
          "example": "Yes",
          "enum": [
            "Yes",
            "No"
          ],
          "description": "\n        If there is an operable window in this bathroom, then choose yes.\n        <br/>\n        \n        <br/>\n        "
        },
        "ashraeBathroom4WindowImproved": {
          "type": "string",
          "example": "No",
          "enum": [
            "Yes",
            "No"
          ],
          "description": "\n        If there is an operable window in this bathroom, then choose yes.\n        <br/>\n        \n        <br/>\n        "
        },
        "ashraeRequiredAdditionalCfm": {
          "type": "number",
          "example": 288.48,
          "enum": false,
          "description": "Minimum ventilation flow rate in CFM of continuous whole house ventilation required to satisfy the ASHRAE 62.2-2013 standard. If this field shows \"N/A\", then you likely did not fill out all of the AHSHRAE fields below. You must choose Yes or No for the Operable windows and set the Fan CFM to 0 or more."
        },
        "ashraeRequiredAdditionalCfmImproved": {
          "type": "number",
          "example": 944.2,
          "enum": false,
          "description": "Minimum ventilation flow rate in CFM of continuous whole house ventilation required to satisfy the ASHRAE 62.2-2013 standard. If this field shows \"N/A\", then you likely did not fill out all of the AHSHRAE fields below. You must choose Yes or No for the Operable windows and set the Fan CFM to 0 or more."
        },
        "ashraeMinimumCfm50": {
          "type": "number",
          "example": 90252,
          "maximum": 99999,
          "minimum": 0,
          "enum": false,
          "description": "Minimum infiltration in CFM50 below which ASHRAE 62.2-2013 recommends mechanical ventilation.<br><br>N/A indicates that either the local ventilation inputs are not complete or the home was built after 2009. Homes built after 2009 are not eligible for infiltration credit towards whole house ventilation."
        },
        "blowerDoorTestPerformed": {
          "type": "string",
          "example": "Tested",
          "enum": [
            "Tested",
            "Estimate"
          ],
          "description": "\n        Choose \"Tested\" if an actual blower door test was performed. Choose \"Estimate\" if the blower door reading below is an estimate.\n        <br/>\n        \n        <br/>\n        "
        },
        "blowerDoorTestPerformedImproved": {
          "type": "string",
          "example": "Tested",
          "enum": [
            "Tested",
            "Estimate"
          ],
          "description": "\n        Choose \"Tested\" if an actual blower door test was performed. Choose \"Estimate\" if the blower door reading below is an estimate.\n        <br/>\n        \n        <br/>\n        "
        },
        "floorCavityInsulationType": {
          "type": "string",
          "example": "Open Cell Spray Foam",
          "enum": [
            "Fiberglass or Rockwool Batt",
            "Blown Fiberglass or Rockwool",
            "Cellulose",
            "Open Cell Spray Foam",
            "Closed Cell Spray Foam",
            "Other"
          ],
          "description": "\n        Select the type of insulation that is installed in the floor cavity. If more than one type of insulation is installed, select the type that covers that largest area.\n        <br/>\n        \n        <br/>\n        "
        },
        "floorCavityInsulationTypeImproved": {
          "type": "string",
          "example": "Fiberglass or Rockwool Batt",
          "enum": [
            "Fiberglass or Rockwool Batt",
            "Blown Fiberglass or Rockwool",
            "Cellulose",
            "Open Cell Spray Foam",
            "Closed Cell Spray Foam",
            "Other"
          ],
          "description": "\n        Select the type of insulation that is installed in the floor cavity. If more than one type of insulation is installed, select the type that covers that largest area.\n        <br/>\n        \n        <br/>\n        "
        },
        "floorContinuousInsulationType": {
          "type": "string",
          "example": "Closed Cell Spray Foam",
          "enum": [
            "Fiberglass Drape",
            "Rigid XPS",
            "Rigid EPS",
            "Rigid Polyisocyanurate",
            "Open Cell Spray Foam",
            "Closed Cell Spray Foam",
            "Other"
          ],
          "description": "\n        Select the type of continuous insulation that is installed in the floor. If more than one type of insulation is installed, select the type that covers that largest area.\n        <br/>\n        \n        <br/>\n        "
        },
        "floorContinuousInsulationTypeImproved": {
          "type": "string",
          "example": "Other",
          "enum": [
            "Fiberglass Drape",
            "Rigid XPS",
            "Rigid EPS",
            "Rigid Polyisocyanurate",
            "Open Cell Spray Foam",
            "Closed Cell Spray Foam",
            "Other"
          ],
          "description": "\n        Select the type of continuous insulation that is installed in the floor. If more than one type of insulation is installed, select the type that covers that largest area.\n        <br/>\n        \n        <br/>\n        "
        },
        "crawlCavityInsulationType": {
          "type": "string",
          "example": "Cellulose",
          "enum": [
            "Fiberglass or Rockwool Batt",
            "Blown Fiberglass or Rockwool",
            "Cellulose",
            "Open Cell Spray Foam",
            "Closed Cell Spray Foam",
            "Other"
          ],
          "description": "\n        Select the type of insulation that is installed in the crawlspace ceiling cavity. If more than one type of insulation is installed, select the type that covers that largest area.\n        <br/>\n        \n        <br/>\n        "
        },
        "crawlCavityInsulationTypeImproved": {
          "type": "string",
          "example": "Cellulose",
          "enum": [
            "Fiberglass or Rockwool Batt",
            "Blown Fiberglass or Rockwool",
            "Cellulose",
            "Open Cell Spray Foam",
            "Closed Cell Spray Foam",
            "Other"
          ],
          "description": "\n        Select the type of insulation that is installed in the crawlspace ceiling cavity. If more than one type of insulation is installed, select the type that covers that largest area.\n        <br/>\n        \n        <br/>\n        "
        },
        "crawlWallInsulationType": {
          "type": "string",
          "example": "Rigid XPS",
          "enum": [
            "Fiberglass Drape",
            "Rigid XPS",
            "Rigid EPS",
            "Rigid Polyisocyanurate",
            "Open Cell Spray Foam",
            "Closed Cell Spray Foam",
            "Other"
          ],
          "description": "\n        Select the type of continuous insulation that is installed on the crawlspace walls. If more than one type of insulation is installed, select the type that covers that largest area.\n        <br/>\n        \n        <br/>\n        "
        },
        "crawlWallInsulationTypeImproved": {
          "type": "string",
          "example": "Other",
          "enum": [
            "Fiberglass Drape",
            "Rigid XPS",
            "Rigid EPS",
            "Rigid Polyisocyanurate",
            "Open Cell Spray Foam",
            "Closed Cell Spray Foam",
            "Other"
          ],
          "description": "\n        Select the type of continuous insulation that is installed on the crawlspace walls. If more than one type of insulation is installed, select the type that covers that largest area.\n        <br/>\n        \n        <br/>\n        "
        },
        "crawlspaceRimJoistInsulationType": {
          "type": "string",
          "example": "Closed Cell Spray Foam",
          "enum": [
            "Fiberglass or Rockwool Batt",
            "Blown Fiberglass or Rockwool",
            "Cellulose",
            "Open Cell Spray Foam",
            "Closed Cell Spray Foam",
            "Rigid XPS",
            "Rigid EPS",
            "Rigid Polyisocyanurate",
            "Other"
          ],
          "description": "\n        Select the type of insulation that is installed in the crawlspace rim joist cavities. If more than one type of insulation is installed, select the type that covers that largest area.\n        <br/>\n        \n        <br/>\n        "
        },
        "crawlspaceRimJoistInsulationTypeImproved": {
          "type": "string",
          "example": "Cellulose",
          "enum": [
            "Fiberglass or Rockwool Batt",
            "Blown Fiberglass or Rockwool",
            "Cellulose",
            "Open Cell Spray Foam",
            "Closed Cell Spray Foam",
            "Rigid XPS",
            "Rigid EPS",
            "Rigid Polyisocyanurate",
            "Other"
          ],
          "description": "\n        Select the type of insulation that is installed in the crawlspace rim joist cavities. If more than one type of insulation is installed, select the type that covers that largest area.\n        <br/>\n        \n        <br/>\n        "
        },
        "basementCavityInsulationType": {
          "type": "string",
          "example": "Other",
          "enum": [
            "Fiberglass or Rockwool Batt",
            "Blown Fiberglass or Rockwool",
            "Cellulose",
            "Open Cell Spray Foam",
            "Closed Cell Spray Foam",
            "Other"
          ],
          "description": "\n        Select the type of insulation that is installed in the crawlspace ceiling cavity. If more than one type of insulation is installed, select the type that covers that largest area.\n        <br/>\n        \n        <br/>\n        "
        },
        "basementCavityInsulationTypeImproved": {
          "type": "string",
          "example": "Open Cell Spray Foam",
          "enum": [
            "Fiberglass or Rockwool Batt",
            "Blown Fiberglass or Rockwool",
            "Cellulose",
            "Open Cell Spray Foam",
            "Closed Cell Spray Foam",
            "Other"
          ],
          "description": "\n        Select the type of insulation that is installed in the crawlspace ceiling cavity. If more than one type of insulation is installed, select the type that covers that largest area.\n        <br/>\n        \n        <br/>\n        "
        },
        "basementContinuousInsulationType": {
          "type": "string",
          "example": "Fiberglass Drape",
          "enum": [
            "Fiberglass Drape",
            "Rigid XPS",
            "Rigid EPS",
            "Rigid Polyisocyanurate",
            "Open Cell Spray Foam",
            "Closed Cell Spray Foam",
            "Other"
          ],
          "description": "\n        Select the type of continuous insulation that is installed on the basement walls. If more than one type of insulation is installed, select the type that covers that largest area.\n        <br/>\n        \n        <br/>\n        "
        },
        "basementContinuousInsulationTypeImproved": {
          "type": "string",
          "example": "Rigid EPS",
          "enum": [
            "Fiberglass Drape",
            "Rigid XPS",
            "Rigid EPS",
            "Rigid Polyisocyanurate",
            "Open Cell Spray Foam",
            "Closed Cell Spray Foam",
            "Other"
          ],
          "description": "\n        Select the type of continuous insulation that is installed on the basement walls. If more than one type of insulation is installed, select the type that covers that largest area.\n        <br/>\n        \n        <br/>\n        "
        },
        "basementRimJoistInsulationType": {
          "type": "string",
          "example": "Open Cell Spray Foam",
          "enum": [
            "Fiberglass or Rockwool Batt",
            "Blown Fiberglass or Rockwool",
            "Cellulose",
            "Open Cell Spray Foam",
            "Closed Cell Spray Foam",
            "Rigid XPS",
            "Rigid EPS",
            "Rigid Polyisocyanurate",
            "Other"
          ],
          "description": "\n        Select the type of insulation that is installed in the basement rim joist cavities. If more than one type of insulation is installed, select the type that covers that largest area.\n        <br/>\n        \n        <br/>\n        "
        },
        "basementRimJoistInsulationTypeImproved": {
          "type": "string",
          "example": "Rigid XPS",
          "enum": [
            "Fiberglass or Rockwool Batt",
            "Blown Fiberglass or Rockwool",
            "Cellulose",
            "Open Cell Spray Foam",
            "Closed Cell Spray Foam",
            "Rigid XPS",
            "Rigid EPS",
            "Rigid Polyisocyanurate",
            "Other"
          ],
          "description": "\n        Select the type of insulation that is installed in the basement rim joist cavities. If more than one type of insulation is installed, select the type that covers that largest area.\n        <br/>\n        \n        <br/>\n        "
        },
        "dishwasherEnergyUsage": {
          "type": "number",
          "example": 55,
          "maximum": 1000,
          "minimum": 0,
          "enum": false,
          "description": "As an alternative to entering the EF, you may enter the rated energy consumption in kWh / year. You must also enter the rated water use in gallons per year."
        },
        "dishwasherWaterUsage": {
          "type": "number",
          "example": 2.7,
          "maximum": 100,
          "minimum": 0,
          "enum": false,
          "description": "As an alternative to entering the EF, you may enter the rated water use in gallons per cycle. You must also enter the rated energy consumption in kWh / year above."
        },
        "windowVentingUsed": {
          "type": "string",
          "example": "Yes",
          "enum": [
            "Yes",
            "No"
          ],
          "description": "\n        Do the occupants make use of operable windows to cool the home when the outdoor temperature and humidity are favorable? This can eliminate cooling loads during shoulder seasons or even year-round in temperate climates. Turning this feature on will help eliminate scenarios where you previously had negative savings for some air sealing and insulation measures.\n        <br/>\n        \n        <br/>\n        "
        },
        "windowVentingUsedImproved": {
          "type": "string",
          "example": "Yes",
          "enum": [
            "Yes",
            "No"
          ],
          "description": "\n        Do the occupants make use of operable windows to cool the home when the outdoor temperature and humidity are favorable? This can eliminate cooling loads during shoulder seasons or even year-round in temperate climates. Turning this feature on will help eliminate scenarios where you previously had negative savings for some air sealing and insulation measures.\n        <br/>\n        \n        <br/>\n        "
        }
      }
    },
    "hesScores": {
      "properties": {
        "hesHpxmlEventType1": {
          "type": "string",
          "example": "Some text value",
          "maxLength": 255,
          "enum": false
        },
        "hesHpxmlEventType2": {
          "type": "string",
          "example": "Some text value",
          "maxLength": 255,
          "enum": false
        },
        "hesAssessmentTypeCode": {
          "type": "string",
          "example": "Some text value",
          "maxLength": 255,
          "enum": false
        },
        "hesHpxmlBuildingNode": {
          "type": "string",
          "example": "Some text value",
          "maxLength": 255,
          "enum": false
        },
        "hesXmlTransactionType": {
          "type": "string",
          "example": "Some text value",
          "maxLength": 255,
          "enum": false
        },
        "hesBaseScore": {
          "type": "integer",
          "example": 0,
          "maximum": 10,
          "minimum": 0,
          "enum": false,
          "description": "The Home Energy Score for the home."
        },
        "hesAssessmentType": {
          "type": "string",
          "example": "Some text value",
          "maxLength": 255,
          "enum": false
        },
        "hesCity": {
          "type": "string",
          "example": "Some text value",
          "maxLength": 255,
          "enum": false
        },
        "hesState": {
          "type": "string",
          "example": "Some text value",
          "maxLength": 255,
          "enum": false
        },
        "hesZipCode": {
          "type": "string",
          "example": "Some text value",
          "maxLength": 255,
          "enum": false
        },
        "hesConditionedFloorArea": {
          "type": "string",
          "example": "Some text value",
          "enum": false
        },
        "hesYearBuilt": {
          "type": "string",
          "example": "Some text value",
          "enum": false
        },
        "hesCoolingPresent": {
          "type": "string",
          "example": "Some text value",
          "enum": false
        },
        "hesAssessmentDate": {
          "type": "string",
          "example": "Some text value",
          "enum": false
        },
        "hesLabelNumber": {
          "type": "integer",
          "example": 61437,
          "enum": false,
          "description": "The identification number for this specific home energy score."
        },
        "hesQualifiedAssessorId": {
          "type": "string",
          "example": "Some text value",
          "maxLength": 255,
          "enum": false
        },
        "hesHescoreVersion": {
          "type": "number",
          "example": 7.68,
          "maximum": 100,
          "enum": false,
          "description": "The Home Energy Score version for this score."
        },
        "hesUtilityElectric": {
          "type": "string",
          "example": "Some text value",
          "enum": false
        },
        "hesUtilityNaturalGas": {
          "type": "string",
          "example": "Some text value",
          "enum": false
        },
        "hesUtilityFuelOil": {
          "type": "string",
          "example": "Some text value",
          "enum": false
        },
        "hesUtilityLpg": {
          "type": "string",
          "example": "Some text value",
          "enum": false
        },
        "hesUtilityCordWood": {
          "type": "string",
          "example": "Some text value",
          "enum": false
        },
        "hesUtilityPelletWood": {
          "type": "string",
          "example": "Some text value",
          "enum": false
        },
        "hesSourceEnergyTotalBase": {
          "type": "number",
          "example": 976.37,
          "enum": false,
          "description": "The total source energy calculated by the Home Energy Score."
        },
        "hesSourceEnergyAssetBase": {
          "type": "number",
          "example": 496.16,
          "enum": false,
          "description": "The source energy calculated by the Home Energy Score."
        },
        "hesBuildingId": {
          "type": "number",
          "example": 371.96,
          "enum": false,
          "description": "The building id generated by the Home Energy Score."
        }
      }
    },
    "cazSystem": {
      "properties": {
        "uuid": {
          "type": "string",
          "example": "2c5ff6f0-fe3b-478f-aa0c-24f544f0cbb5",
          "enum": false,
          "description": "This is a universally unique ID for this item (UUID)."
        },
        "cazApplianceCoCurrentCondition": {
          "type": "integer",
          "example": 92553,
          "enum": false,
          "description": "CAZ Appliance CO Current Condition"
        },
        "cazApplianceCoCurrentConditionImproved": {
          "type": "integer",
          "example": 26976,
          "enum": false,
          "description": "CAZ Appliance CO Current Condition"
        }
      }
    },
    "recommendationCaption": {
      "properties": {
        "uuid": {
          "type": "string",
          "example": "d28f4a70-c3d8-42a9-a688-0927de3e5435",
          "enum": false,
          "description": "This is a universally unique ID for this item (UUID)."
        },
        "caption": {
          "type": "string",
          "enum": false
        }
      }
    }
  }
}
